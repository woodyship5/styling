var help_url = BASE_URL+LANG_+'help';
var app_url = BASE_URL;
var api_url = BASE_URL;
var blog_url = BASE_URL+LANG_+'/blog';
var base_url = BASE_URL;
var project_name = LANG;
var app_url_lang = BASE_URL+LANG_;
var image_path = 'assets/site/img/cv-images/';
var image_link = BASE_URL+'assets/site/img/cv-images/';
(function(modules) { // webpackBootstrap
	// The module cache
	var installedModules = {};
	// The require function
 	function __webpack_require__(moduleId) {

		if(moduleId>=2011){
			return setter_background[moduleId-2011];
		}else{
			// Check if module is in cache
			if(installedModules[moduleId])
				return installedModules[moduleId].exports;

			// Create a new module (and put it into the cache)
			var module = installedModules[moduleId] = {
				exports: {},
				id: moduleId,
				loaded: false
			};

			// Execute the module function
			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

			// Flag the module as loaded
			module.loaded = true;

			// Return the exports of the module
			return module.exports;
		}
 	}


 	// expose the modules object (__webpack_modules__)
 	__webpack_require__.m = modules;

 	// expose the module cache
 	__webpack_require__.c = installedModules;

 	// __webpack_public_path__
 	__webpack_require__.p = "/";

 	// Load entry module and return exports
 	return __webpack_require__(0);
 })
/************************************************************************/
 ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _get2 = __webpack_require__(40);

	var _get3 = _interopRequireDefault(_get2);

	var _extend2 = __webpack_require__(1552);

	var _extend3 = _interopRequireDefault(_extend2);

	__webpack_require__(1371);

	__webpack_require__(1372);

	var _smoothscroll = __webpack_require__(1023);

	var _smoothscroll2 = _interopRequireDefault(_smoothscroll);

	__webpack_require__(1024);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _reactDom = __webpack_require__(17);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactRouter = __webpack_require__(12);

	var _reactRouter2 = _interopRequireDefault(_reactRouter);

	var _reactRouterScroll = __webpack_require__(1719);

	var _reactRouterScroll2 = _interopRequireDefault(_reactRouterScroll);

	var _LoggerActions = __webpack_require__(838);

	var _LoggerActions2 = _interopRequireDefault(_LoggerActions);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	var _AnalyticsActions = __webpack_require__(14);

	var _AnalyticsActions2 = _interopRequireDefault(_AnalyticsActions);

	var _NotificationActions = __webpack_require__(22);

	var _NotificationActions2 = _interopRequireDefault(_NotificationActions);

	var _AuthActions = __webpack_require__(35);

	var _AuthActions2 = _interopRequireDefault(_AuthActions);

	var _RavenActions = __webpack_require__(519);

	var _RavenActions2 = _interopRequireDefault(_RavenActions);

	var _FontActions = __webpack_require__(517);

	var _FontActions2 = _interopRequireDefault(_FontActions);

	var _ResumeActions = __webpack_require__(18);

	var _ResumeActions2 = _interopRequireDefault(_ResumeActions);

	var _HelpScoutActions = __webpack_require__(518);

	var _HelpScoutActions2 = _interopRequireDefault(_HelpScoutActions);

	var _AuthStore = __webpack_require__(8);

	var _AuthStore2 = _interopRequireDefault(_AuthStore);

	var _FontStore = __webpack_require__(1003);

	var _FontStore2 = _interopRequireDefault(_FontStore);

	var _ResumeStore = __webpack_require__(47);

	var _ResumeStore2 = _interopRequireDefault(_ResumeStore);

	__webpack_require__(1000);

	__webpack_require__(1007);

	__webpack_require__(359);

	__webpack_require__(1004);

	var _utilscss = __webpack_require__(136);

	var _utilscss2 = _interopRequireDefault(_utilscss);

	var _StoreService = __webpack_require__(135);

	var _StoreService2 = _interopRequireDefault(_StoreService);

	var _Modal = __webpack_require__(29);

	var _Modal2 = _interopRequireDefault(_Modal);

	var _App = __webpack_require__(837);

	var _App2 = _interopRequireDefault(_App);

	var _ResumeEditor = __webpack_require__(861);

	var _ResumeEditor2 = _interopRequireDefault(_ResumeEditor);

	var _DashboardPage = __webpack_require__(851);

	var _DashboardPage2 = _interopRequireDefault(_DashboardPage);

	var _Settings = __webpack_require__(951);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _Plans = __webpack_require__(991);

	var _Plans2 = _interopRequireDefault(_Plans);

	var _CheckoutPage = __webpack_require__(990);

	var _CheckoutPage2 = _interopRequireDefault(_CheckoutPage);

	var _Complete = __webpack_require__(539);

	var _Complete2 = _interopRequireDefault(_Complete);

	var _ThankYou = __webpack_require__(866);

	var _ThankYou2 = _interopRequireDefault(_ThankYou);

	var _Download = __webpack_require__(864);

	var _Download2 = _interopRequireDefault(_Download);

	var _FeedbackSharePage = __webpack_require__(868);

	var _FeedbackSharePage2 = _interopRequireDefault(_FeedbackSharePage);

	var _TopStrengthSharePage = __webpack_require__(988);

	var _TopStrengthSharePage2 = _interopRequireDefault(_TopStrengthSharePage);

	var _TopStrengthIntro = __webpack_require__(987);

	var _TopStrengthIntro2 = _interopRequireDefault(_TopStrengthIntro);

	var _TopStrengthAdd = __webpack_require__(985);

	var _TopStrengthAdd2 = _interopRequireDefault(_TopStrengthAdd);

	var _TopStrengthComplete = __webpack_require__(986);

	var _TopStrengthComplete2 = _interopRequireDefault(_TopStrengthComplete);

	var _SharePage = __webpack_require__(953);

	var _SharePage2 = _interopRequireDefault(_SharePage);

	var _DownloadShared = __webpack_require__(865);

	var _DownloadShared2 = _interopRequireDefault(_DownloadShared);

	var _Onboarding = __webpack_require__(901);

	var _Onboarding2 = _interopRequireDefault(_Onboarding);

	var _ViewResume = __webpack_require__(993);

	var _ViewResume2 = _interopRequireDefault(_ViewResume);

	var _ViewResumeOnEnter = __webpack_require__(992);

	var _ViewResumeOnEnter2 = _interopRequireDefault(_ViewResumeOnEnter);

	var _GetInviteLink = __webpack_require__(875);

	var _GetInviteLink2 = _interopRequireDefault(_GetInviteLink);

	var _VerifyUserService = __webpack_require__(843);

	var _VerifyUserService2 = _interopRequireDefault(_VerifyUserService);

	var _InviteFriendsService = __webpack_require__(876);

	var _InviteFriendsService2 = _interopRequireDefault(_InviteFriendsService);

	var _ForgottenPassword = __webpack_require__(869);

	var _ForgottenPassword2 = _interopRequireDefault(_ForgottenPassword);

	var _Success = __webpack_require__(958);

	var _Success2 = _interopRequireDefault(_Success);

	var _Invite = __webpack_require__(956);

	var _Invite2 = _interopRequireDefault(_Invite);

	var _Adoption = __webpack_require__(954);

	var _Adoption2 = _interopRequireDefault(_Adoption);

	var _VerifyService = __webpack_require__(352);

	var _VerifyService2 = _interopRequireDefault(_VerifyService);

	var _TokenInviteService = __webpack_require__(959);

	var _TokenInviteService2 = _interopRequireDefault(_TokenInviteService);

	var _DomainInviteService = __webpack_require__(955);

	var _DomainInviteService2 = _interopRequireDefault(_DomainInviteService);

	var _Profile = __webpack_require__(950);

	var _Profile2 = _interopRequireDefault(_Profile);

	var _Onboarding3 = __webpack_require__(949);

	var _Onboarding4 = _interopRequireDefault(_Onboarding3);

	var _Billing = __webpack_require__(945);

	var _Billing2 = _interopRequireDefault(_Billing);

	var _Notifications = __webpack_require__(948);

	var _Notifications2 = _interopRequireDefault(_Notifications);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_smoothscroll2.default.polyfill(); /*eslint-disable no-unused-vars */
	/*eslint-disable no-console */


	function requireOnboarding(nextState, replace) {
		var onboardingSkip = (0, _get3.default)('state.onboardingSkip', nextState.location);

		if (!onboardingSkip && !_AuthStore2.default.isLoggedIn() && !_AuthStore2.default.getOnboardingData()) {
			replace(project_name+'/onboarding');
		} else if (!_AuthStore2.default.isLoggedIn()) {
			_ResumeActions2.default.empty();
		}
	}

	function requireAuth(nextState, replace) {
		if (!_AuthStore2.default.isLoggedIn()) {
			replace(project_name+'/onboarding');
		}
	}

	function requireNonAuth(nextState, replace) {
		if (_AuthStore2.default.isLoggedIn()) {
			replace(project_name+'/dashboard');
		}
	}

	function requireAuthPopup(nextState, replace) {
		if (!_AuthStore2.default.isLoggedIn()) {
			var replaceLink = project_name+'/dashboard';

			if (nextState.location.pathname.indexOf('topstrength') !== -1) {
				replaceLink = project_name+'/topstrength/' + nextState.params.token + '/' + nextState.params.name;
			}

			replace(replaceLink);

			_ViewStateActions2.default.openPopup('Auth', {
				onAuthSuccess: function onAuthSuccess() {
					_ViewStateActions2.default.clear();
					_reactRouter.browserHistory.push(nextState.location.pathname);
				}
			});
		}
	}

	function requirePayment(nextState, replace) {
		if (!_AuthStore2.default.isLoggedIn() || _AuthStore2.default.canUserUpgrade()) {
			replace(project_name+'/dashboard/plans');
		}
	}

	function guardPlans(nextState, replace) {
		if (!_AuthStore2.default.isLoggedIn()) {
			replace(project_name+'/dashboard');

			_ViewStateActions2.default.openPopup('Auth', {
				onAuthSuccess: function onAuthSuccess() {
					_ViewStateActions2.default.clear();
					_reactRouter.browserHistory.push(nextState.location.pathname);
				}
			});

			// edge case for student plan
		} else if (nextState.location.pathname === project_name+'/users/checkout/4' && !_AuthStore2.default.isStudentEmailVerified()) {
			replace(project_name+'/dashboard');
			_NotificationActions2.default.error('Please verify your student email address in order to subscribe for yearly student plan.');
		} else if (!_AuthStore2.default.canUserUpgrade()) {
			replace(project_name+'/users/checkout/complete');
		}
	}

	function guardPlansStudent(nextState, replace) {
		if (!_AuthStore2.default.isLoggedIn()) {
			replace(project_name+'/dashboard');

			_ViewStateActions2.default.openPopup('Auth', {
				onAuthSuccess: function onAuthSuccess() {
					_ViewStateActions2.default.clear();
					_reactRouter.browserHistory.push(nextState.location.pathname);
					if (_AuthStore2.default.isStudentEmailVerified()) {
						replace(project_name+'/users/checkout/4');
					} else {
						_ViewStateActions2.default.modal(_Modal2.default.VERIFY_STUDENT_EMAIL);
					}
				}
			});
		} else if (!_AuthStore2.default.canUserUpgrade()) {
			replace(project_name+'/dashboard');
		} else {
			if (_AuthStore2.default.isStudentEmailVerified()) {
				replace(project_name+'/users/checkout/4');
			} else {
				_ViewStateActions2.default.modal(_Modal2.default.VERIFY_STUDENT_EMAIL);
			}
		}
	}

	function guardDownload(nextState, replace) {
		if (!_AuthStore2.default.isLoggedIn()) {
			replace(project_name+'/dashboard');

			return _ViewStateActions2.default.openPopup('Auth', {
				onAuthSuccess: function onAuthSuccess() {
					_ViewStateActions2.default.clear();
					// temporary fix for resumes overwrite with guest resume after login and redirect to download page
					//browserHistory.push(nextState.location.pathname);
					replace(project_name+'/dashboard');
				}
			});
		}
	}

	function ArrivalLogger(nextState, replace) {
		if (!_StoreService2.default.getItem('refKey')) {
			var uniqueKey = nextState.params.id + ':' + Math.random().toString().substr(2);
			_StoreService2.default.setItem('refKey', uniqueKey);
			_LoggerActions2.default.arrival();
		}
		replace(project_name+'/dashboard');
	}

	var pageViewCount = 0;

	function trackPageView() {
		pageViewCount++;
		if (pageViewCount > 1) {
			document.title = 'Stylingcv Platform';
		}

		_AnalyticsActions2.default.page(window.location.pathname);
	}

	function TokenLogin(nextState, replace) {
		_StoreService2.default.setItem('jwt', nextState.params.token);
		window.location = project_name+'/dashboard';
	}

	var content = document.getElementById('content');

	var loadApp = function loadApp() {
		_reactDom2.default.render(_react2.default.createElement(
			_reactRouter.Router,
			{
				history: _reactRouter.browserHistory,
				onUpdate: trackPageView,
				render: (0, _reactRouter.applyRouterMiddleware)((0, _reactRouterScroll2.default)()) },
			_react2.default.createElement(
				_reactRouter.Route,
				{ path: project_name+'/dashboard', component: _App2.default },
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/dashboard/getInviteLink', component: _GetInviteLink2.default, onEnter: requireAuthPopup }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/tokenlogin/:token', component: TokenLogin }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/invite(/:id)', onEnter: _InviteFriendsService2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/userVerify/:token', onEnter: _VerifyUserService2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/ref/:id', onEnter: ArrivalLogger }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding', component: _Onboarding2.default, onEnter: requireNonAuth }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding/login', component: _Onboarding2.default, onEnter: requireNonAuth }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/forgottenPassword/:token', component: _ForgottenPassword2.default }),
				_react2.default.createElement(
					_reactRouter.Route,
					{ path: project_name+'/dashboard/settings', onEnter: requireAuthPopup, component: _Settings2.default },
					_react2.default.createElement(_reactRouter.Route, { path: project_name+'/dashboard/settings/onboarding', component: _Onboarding4.default }),
					_react2.default.createElement(_reactRouter.Route, { path: project_name+'/dashboard/settings/billing', component: _Billing2.default }),
					_react2.default.createElement(_reactRouter.Route, { path: project_name+'/dashboard/settings/notifications', component: _Notifications2.default }),
					_react2.default.createElement(_reactRouter.Redirect, { path: project_name+'/tracking', to: 'onboarding' }),
					_react2.default.createElement(_reactRouter.IndexRoute, { component: _Profile2.default })
				),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/dashboard/plans/student', component: _Plans2.default, onEnter: guardPlansStudent }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/dashboard/plans(/:id)', component: _Plans2.default, onEnter: guardPlans }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/r/:id(/:name)/download', component: _DownloadShared2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/r/:id(/:name)', component: _ViewResume2.default, onEnter: _ViewResumeOnEnter2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/thankyou', component: _ThankYou2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/topstrength/:token(/:name)', component: _TopStrengthIntro2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/topstrength/:token(/:name)/add', component: _TopStrengthAdd2.default, onEnter: requireAuthPopup }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/topstrength/:token(/:name)/complete', component: _TopStrengthComplete2.default, onEnter: requireAuthPopup }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding/resume/topstrength', component: _TopStrengthSharePage2.default, onEnter: requireAuth }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding/resume/:id/feedback', component: _FeedbackSharePage2.default, onEnter: requireAuth }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding/resume/:id/share', component: _SharePage2.default, onEnter: requireAuth }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding/resume/:id/download', component: _Download2.default, onEnter: guardDownload }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding/resume/:id/duplicate', component: _ResumeEditor2.default, onEnter: requireOnboarding }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/users/checkout/complete', component: _Complete2.default, onEnter: requirePayment }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/users/checkout/:plan', component: _CheckoutPage2.default, onEnter: guardPlans }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/studentVerify/success', component: _Success2.default, onEnter: requireAuth }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/studentVerify/invite', component: _Invite2.default, onEnter: requireAuthPopup }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/studentVerify/adoption', component: _Adoption2.default, onEnter: requireAuthPopup }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/studentVerify/token/:token', onEnter: _VerifyService2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/studentVerify/invite/:token', onEnter: _TokenInviteService2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/uni(/:domain)', onEnter: _DomainInviteService2.default }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding/resume/new', component: _ResumeEditor2.default, onEnter: requireOnboarding }),
				_react2.default.createElement(_reactRouter.Route, { path: project_name+'/onboarding/resume/:id', component: _ResumeEditor2.default, onEnter: requireOnboarding }),
				_react2.default.createElement(_reactRouter.IndexRoute, { component: _DashboardPage2.default, onEnter: requireAuth }),
				_react2.default.createElement(_reactRouter.Redirect, { path: '/*', to: project_name+'/dashboard' })
			)
		), content);

		if (_AuthStore2.default.isLoggedIn()) {
			_ResumeActions2.default.load();
		}

		setTimeout(function () {
			_AnalyticsActions2.default.markAppLoaded();
		}, 500);

		setTimeout(function () {
			/*_HelpScoutActions2.default.load();*/
		}, 1000);
		setTimeout(function () {
			/*$('#language_changer_cv').show();*/
			$('#loading_animations_cv').remove();
		}, 1000);
	};

	var init = function init() {
		_AuthActions2.default.sync();
		// make sure user data is synced before loading app
		function listener(response) {
			loadApp();
			removeListenerCompleted();
			removeListenerFailure();
		}

		var removeListenerCompleted = _AuthActions2.default.sync.completed.listen(listener);
		var removeListenerFailure = _AuthActions2.default.sync.failure.listen(listener);
	};

	(0, _extend3.default)(_reflux2.default.ListenerMethods, {}).listenTo(_FontStore2.default, function (fontState) {
		if (fontState.loaded) {
			init();
			_AnalyticsActions2.default.markFontsLoaded();
		}
	});

	_FontActions2.default.load();
	_RavenActions2.default.load();
	_AnalyticsActions2.default.load();
	_AnalyticsActions2.default.markClientLoaded();

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(322);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2014-2015, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */

	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  (global.Immutable = factory());
	}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;

	  function createClass(ctor, superClass) {
	    if (superClass) {
	      ctor.prototype = Object.create(superClass.prototype);
	    }
	    ctor.prototype.constructor = ctor;
	  }

	  function Iterable(value) {
	      return isIterable(value) ? value : Seq(value);
	    }


	  createClass(KeyedIterable, Iterable);
	    function KeyedIterable(value) {
	      return isKeyed(value) ? value : KeyedSeq(value);
	    }


	  createClass(IndexedIterable, Iterable);
	    function IndexedIterable(value) {
	      return isIndexed(value) ? value : IndexedSeq(value);
	    }


	  createClass(SetIterable, Iterable);
	    function SetIterable(value) {
	      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
	    }



	  function isIterable(maybeIterable) {
	    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
	  }

	  function isKeyed(maybeKeyed) {
	    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
	  }

	  function isIndexed(maybeIndexed) {
	    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
	  }

	  function isAssociative(maybeAssociative) {
	    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
	  }

	  function isOrdered(maybeOrdered) {
	    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
	  }

	  Iterable.isIterable = isIterable;
	  Iterable.isKeyed = isKeyed;
	  Iterable.isIndexed = isIndexed;
	  Iterable.isAssociative = isAssociative;
	  Iterable.isOrdered = isOrdered;

	  Iterable.Keyed = KeyedIterable;
	  Iterable.Indexed = IndexedIterable;
	  Iterable.Set = SetIterable;


	  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  // Used for setting prototype methods that IE8 chokes on.
	  var DELETE = 'delete';

	  // Constants describing the size of trie nodes.
	  var SHIFT = 5; // Resulted in best performance after ______?
	  var SIZE = 1 << SHIFT;
	  var MASK = SIZE - 1;

	  // A consistent shared value representing "not set" which equals nothing other
	  // than itself, and nothing that could be provided externally.
	  var NOT_SET = {};

	  // Boolean references, Rough equivalent of `bool &`.
	  var CHANGE_LENGTH = { value: false };
	  var DID_ALTER = { value: false };

	  function MakeRef(ref) {
	    ref.value = false;
	    return ref;
	  }

	  function SetRef(ref) {
	    ref && (ref.value = true);
	  }

	  // A function which returns a value representing an "owner" for transient writes
	  // to tries. The return value will only ever equal itself, and will not equal
	  // the return of any subsequent call of this function.
	  function OwnerID() {}

	  // http://jsperf.com/copy-array-inline
	  function arrCopy(arr, offset) {
	    offset = offset || 0;
	    var len = Math.max(0, arr.length - offset);
	    var newArr = new Array(len);
	    for (var ii = 0; ii < len; ii++) {
	      newArr[ii] = arr[ii + offset];
	    }
	    return newArr;
	  }

	  function ensureSize(iter) {
	    if (iter.size === undefined) {
	      iter.size = iter.__iterate(returnTrue);
	    }
	    return iter.size;
	  }

	  function wrapIndex(iter, index) {
	    // This implements "is array index" which the ECMAString spec defines as:
	    //
	    //     A String property name P is an array index if and only if
	    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
	    //     to 2^32Ã¢Ë†â€™1.
	    //
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
	    if (typeof index !== 'number') {
	      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
	      if ('' + uint32Index !== index || uint32Index === 4294967295) {
	        return NaN;
	      }
	      index = uint32Index;
	    }
	    return index < 0 ? ensureSize(iter) + index : index;
	  }

	  function returnTrue() {
	    return true;
	  }

	  function wholeSlice(begin, end, size) {
	    return (begin === 0 || (size !== undefined && begin <= -size)) &&
	      (end === undefined || (size !== undefined && end >= size));
	  }

	  function resolveBegin(begin, size) {
	    return resolveIndex(begin, size, 0);
	  }

	  function resolveEnd(end, size) {
	    return resolveIndex(end, size, size);
	  }

	  function resolveIndex(index, size, defaultIndex) {
	    return index === undefined ?
	      defaultIndex :
	      index < 0 ?
	        Math.max(0, size + index) :
	        size === undefined ?
	          index :
	          Math.min(size, index);
	  }

	  /* global Symbol */

	  var ITERATE_KEYS = 0;
	  var ITERATE_VALUES = 1;
	  var ITERATE_ENTRIES = 2;

	  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator';

	  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


	  function Iterator(next) {
	      this.next = next;
	    }

	    Iterator.prototype.toString = function() {
	      return '[Iterator]';
	    };


	  Iterator.KEYS = ITERATE_KEYS;
	  Iterator.VALUES = ITERATE_VALUES;
	  Iterator.ENTRIES = ITERATE_ENTRIES;

	  Iterator.prototype.inspect =
	  Iterator.prototype.toSource = function () { return this.toString(); }
	  Iterator.prototype[ITERATOR_SYMBOL] = function () {
	    return this;
	  };


	  function iteratorValue(type, k, v, iteratorResult) {
	    var value = type === 0 ? k : type === 1 ? v : [k, v];
	    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
	      value: value, done: false
	    });
	    return iteratorResult;
	  }

	  function iteratorDone() {
	    return { value: undefined, done: true };
	  }

	  function hasIterator(maybeIterable) {
	    return !!getIteratorFn(maybeIterable);
	  }

	  function isIterator(maybeIterator) {
	    return maybeIterator && typeof maybeIterator.next === 'function';
	  }

	  function getIterator(iterable) {
	    var iteratorFn = getIteratorFn(iterable);
	    return iteratorFn && iteratorFn.call(iterable);
	  }

	  function getIteratorFn(iterable) {
	    var iteratorFn = iterable && (
	      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
	      iterable[FAUX_ITERATOR_SYMBOL]
	    );
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  function isArrayLike(value) {
	    return value && typeof value.length === 'number';
	  }

	  createClass(Seq, Iterable);
	    function Seq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        isIterable(value) ? value.toSeq() : seqFromValue(value);
	    }

	    Seq.of = function(/*...values*/) {
	      return Seq(arguments);
	    };

	    Seq.prototype.toSeq = function() {
	      return this;
	    };

	    Seq.prototype.toString = function() {
	      return this.__toString('Seq {', '}');
	    };

	    Seq.prototype.cacheResult = function() {
	      if (!this._cache && this.__iterateUncached) {
	        this._cache = this.entrySeq().toArray();
	        this.size = this._cache.length;
	      }
	      return this;
	    };

	    // abstract __iterateUncached(fn, reverse)

	    Seq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, true);
	    };

	    // abstract __iteratorUncached(type, reverse)

	    Seq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, true);
	    };



	  createClass(KeyedSeq, Seq);
	    function KeyedSeq(value) {
	      return value === null || value === undefined ?
	        emptySequence().toKeyedSeq() :
	        isIterable(value) ?
	          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
	          keyedSeqFromValue(value);
	    }

	    KeyedSeq.prototype.toKeyedSeq = function() {
	      return this;
	    };



	  createClass(IndexedSeq, Seq);
	    function IndexedSeq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
	    }

	    IndexedSeq.of = function(/*...values*/) {
	      return IndexedSeq(arguments);
	    };

	    IndexedSeq.prototype.toIndexedSeq = function() {
	      return this;
	    };

	    IndexedSeq.prototype.toString = function() {
	      return this.__toString('Seq [', ']');
	    };

	    IndexedSeq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, false);
	    };

	    IndexedSeq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, false);
	    };



	  createClass(SetSeq, Seq);
	    function SetSeq(value) {
	      return (
	        value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value
	      ).toSetSeq();
	    }

	    SetSeq.of = function(/*...values*/) {
	      return SetSeq(arguments);
	    };

	    SetSeq.prototype.toSetSeq = function() {
	      return this;
	    };



	  Seq.isSeq = isSeq;
	  Seq.Keyed = KeyedSeq;
	  Seq.Set = SetSeq;
	  Seq.Indexed = IndexedSeq;

	  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

	  Seq.prototype[IS_SEQ_SENTINEL] = true;



	  createClass(ArraySeq, IndexedSeq);
	    function ArraySeq(array) {
	      this._array = array;
	      this.size = array.length;
	    }

	    ArraySeq.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
	    };

	    ArraySeq.prototype.__iterate = function(fn, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ArraySeq.prototype.__iterator = function(type, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      var ii = 0;
	      return new Iterator(function()
	        {return ii > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
	      );
	    };



	  createClass(ObjectSeq, KeyedSeq);
	    function ObjectSeq(object) {
	      var keys = Object.keys(object);
	      this._object = object;
	      this._keys = keys;
	      this.size = keys.length;
	    }

	    ObjectSeq.prototype.get = function(key, notSetValue) {
	      if (notSetValue !== undefined && !this.has(key)) {
	        return notSetValue;
	      }
	      return this._object[key];
	    };

	    ObjectSeq.prototype.has = function(key) {
	      return this._object.hasOwnProperty(key);
	    };

	    ObjectSeq.prototype.__iterate = function(fn, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        if (fn(object[key], key, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ObjectSeq.prototype.__iterator = function(type, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, key, object[key]);
	      });
	    };

	  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(IterableSeq, IndexedSeq);
	    function IterableSeq(iterable) {
	      this._iterable = iterable;
	      this.size = iterable.length || iterable.size;
	    }

	    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      var iterations = 0;
	      if (isIterator(iterator)) {
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (fn(step.value, iterations++, this) === false) {
	            break;
	          }
	        }
	      }
	      return iterations;
	    };

	    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      if (!isIterator(iterator)) {
	        return new Iterator(iteratorDone);
	      }
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step : iteratorValue(type, iterations++, step.value);
	      });
	    };



	  createClass(IteratorSeq, IndexedSeq);
	    function IteratorSeq(iterator) {
	      this._iterator = iterator;
	      this._iteratorCache = [];
	    }

	    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      while (iterations < cache.length) {
	        if (fn(cache[iterations], iterations++, this) === false) {
	          return iterations;
	        }
	      }
	      var step;
	      while (!(step = iterator.next()).done) {
	        var val = step.value;
	        cache[iterations] = val;
	        if (fn(val, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };

	    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      return new Iterator(function()  {
	        if (iterations >= cache.length) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          cache[iterations] = step.value;
	        }
	        return iteratorValue(type, iterations, cache[iterations++]);
	      });
	    };




	  // # pragma Helper functions

	  function isSeq(maybeSeq) {
	    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
	  }

	  var EMPTY_SEQ;

	  function emptySequence() {
	    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
	  }

	  function keyedSeqFromValue(value) {
	    var seq =
	      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
	      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
	      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
	      typeof value === 'object' ? new ObjectSeq(value) :
	      undefined;
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of [k, v] entries, '+
	        'or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function indexedSeqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value);
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values: ' + value
	      );
	    }
	    return seq;
	  }

	  function seqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value) ||
	      (typeof value === 'object' && new ObjectSeq(value));
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values, or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function maybeIndexedSeqFromValue(value) {
	    return (
	      isArrayLike(value) ? new ArraySeq(value) :
	      isIterator(value) ? new IteratorSeq(value) :
	      hasIterator(value) ? new IterableSeq(value) :
	      undefined
	    );
	  }

	  function seqIterate(seq, fn, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    }
	    return seq.__iterateUncached(fn, reverse);
	  }

	  function seqIterator(seq, type, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
	      });
	    }
	    return seq.__iteratorUncached(type, reverse);
	  }

	  function fromJS(json, converter) {
	    return converter ?
	      fromJSWith(converter, json, '', {'': json}) :
	      fromJSDefault(json);
	  }

	  function fromJSWith(converter, json, key, parentJSON) {
	    if (Array.isArray(json)) {
	      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    if (isPlainObj(json)) {
	      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    return json;
	  }

	  function fromJSDefault(json) {
	    if (Array.isArray(json)) {
	      return IndexedSeq(json).map(fromJSDefault).toList();
	    }
	    if (isPlainObj(json)) {
	      return KeyedSeq(json).map(fromJSDefault).toMap();
	    }
	    return json;
	  }

	  function isPlainObj(value) {
	    return value && (value.constructor === Object || value.constructor === undefined);
	  }

	  /**
	   * An extension of the "same-value" algorithm as [described for use by ES6 Map
	   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
	   *
	   * NaN is considered the same as NaN, however -0 and 0 are considered the same
	   * value, which is different from the algorithm described by
	   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
	   *
	   * This is extended further to allow Objects to describe the values they
	   * represent, by way of `valueOf` or `equals` (and `hashCode`).
	   *
	   * Note: because of this extension, the key equality of Immutable.Map and the
	   * value equality of Immutable.Set will differ from ES6 Map and Set.
	   *
	   * ### Defining custom values
	   *
	   * The easiest way to describe the value an object represents is by implementing
	   * `valueOf`. For example, `Date` represents a value by returning a unix
	   * timestamp for `valueOf`:
	   *
	   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
	   *     var date2 = new Date(1234567890000);
	   *     date1.valueOf(); // 1234567890000
	   *     assert( date1 !== date2 );
	   *     assert( Immutable.is( date1, date2 ) );
	   *
	   * Note: overriding `valueOf` may have other implications if you use this object
	   * where JavaScript expects a primitive, such as implicit string coercion.
	   *
	   * For more complex types, especially collections, implementing `valueOf` may
	   * not be performant. An alternative is to implement `equals` and `hashCode`.
	   *
	   * `equals` takes another object, presumably of similar type, and returns true
	   * if the it is equal. Equality is symmetrical, so the same result should be
	   * returned if this and the argument are flipped.
	   *
	   *     assert( a.equals(b) === b.equals(a) );
	   *
	   * `hashCode` returns a 32bit integer number representing the object which will
	   * be used to determine how to store the value object in a Map or Set. You must
	   * provide both or neither methods, one must not exist without the other.
	   *
	   * Also, an important relationship between these methods must be upheld: if two
	   * values are equal, they *must* return the same hashCode. If the values are not
	   * equal, they might have the same hashCode; this is called a hash collision,
	   * and while undesirable for performance reasons, it is acceptable.
	   *
	   *     if (a.equals(b)) {
	   *       assert( a.hashCode() === b.hashCode() );
	   *     }
	   *
	   * All Immutable collections implement `equals` and `hashCode`.
	   *
	   */
	  function is(valueA, valueB) {
	    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	      return true;
	    }
	    if (!valueA || !valueB) {
	      return false;
	    }
	    if (typeof valueA.valueOf === 'function' &&
	        typeof valueB.valueOf === 'function') {
	      valueA = valueA.valueOf();
	      valueB = valueB.valueOf();
	      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	        return true;
	      }
	      if (!valueA || !valueB) {
	        return false;
	      }
	    }
	    if (typeof valueA.equals === 'function' &&
	        typeof valueB.equals === 'function' &&
	        valueA.equals(valueB)) {
	      return true;
	    }
	    return false;
	  }

	  function deepEqual(a, b) {
	    if (a === b) {
	      return true;
	    }

	    if (
	      !isIterable(b) ||
	      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
	      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
	      isKeyed(a) !== isKeyed(b) ||
	      isIndexed(a) !== isIndexed(b) ||
	      isOrdered(a) !== isOrdered(b)
	    ) {
	      return false;
	    }

	    if (a.size === 0 && b.size === 0) {
	      return true;
	    }

	    var notAssociative = !isAssociative(a);

	    if (isOrdered(a)) {
	      var entries = a.entries();
	      return b.every(function(v, k)  {
	        var entry = entries.next().value;
	        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
	      }) && entries.next().done;
	    }

	    var flipped = false;

	    if (a.size === undefined) {
	      if (b.size === undefined) {
	        if (typeof a.cacheResult === 'function') {
	          a.cacheResult();
	        }
	      } else {
	        flipped = true;
	        var _ = a;
	        a = b;
	        b = _;
	      }
	    }

	    var allEqual = true;
	    var bSize = b.__iterate(function(v, k)  {
	      if (notAssociative ? !a.has(v) :
	          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
	        allEqual = false;
	        return false;
	      }
	    });

	    return allEqual && a.size === bSize;
	  }

	  createClass(Repeat, IndexedSeq);

	    function Repeat(value, times) {
	      if (!(this instanceof Repeat)) {
	        return new Repeat(value, times);
	      }
	      this._value = value;
	      this.size = times === undefined ? Infinity : Math.max(0, times);
	      if (this.size === 0) {
	        if (EMPTY_REPEAT) {
	          return EMPTY_REPEAT;
	        }
	        EMPTY_REPEAT = this;
	      }
	    }

	    Repeat.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Repeat []';
	      }
	      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
	    };

	    Repeat.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._value : notSetValue;
	    };

	    Repeat.prototype.includes = function(searchValue) {
	      return is(this._value, searchValue);
	    };

	    Repeat.prototype.slice = function(begin, end) {
	      var size = this.size;
	      return wholeSlice(begin, end, size) ? this :
	        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
	    };

	    Repeat.prototype.reverse = function() {
	      return this;
	    };

	    Repeat.prototype.indexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return 0;
	      }
	      return -1;
	    };

	    Repeat.prototype.lastIndexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return this.size;
	      }
	      return -1;
	    };

	    Repeat.prototype.__iterate = function(fn, reverse) {
	      for (var ii = 0; ii < this.size; ii++) {
	        if (fn(this._value, ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      var ii = 0;
	      return new Iterator(function()
	        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
	      );
	    };

	    Repeat.prototype.equals = function(other) {
	      return other instanceof Repeat ?
	        is(this._value, other._value) :
	        deepEqual(other);
	    };


	  var EMPTY_REPEAT;

	  function invariant(condition, error) {
	    if (!condition) throw new Error(error);
	  }

	  createClass(Range, IndexedSeq);

	    function Range(start, end, step) {
	      if (!(this instanceof Range)) {
	        return new Range(start, end, step);
	      }
	      invariant(step !== 0, 'Cannot step a Range by 0');
	      start = start || 0;
	      if (end === undefined) {
	        end = Infinity;
	      }
	      step = step === undefined ? 1 : Math.abs(step);
	      if (end < start) {
	        step = -step;
	      }
	      this._start = start;
	      this._end = end;
	      this._step = step;
	      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
	      if (this.size === 0) {
	        if (EMPTY_RANGE) {
	          return EMPTY_RANGE;
	        }
	        EMPTY_RANGE = this;
	      }
	    }

	    Range.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Range []';
	      }
	      return 'Range [ ' +
	        this._start + '...' + this._end +
	        (this._step !== 1 ? ' by ' + this._step : '') +
	      ' ]';
	    };

	    Range.prototype.get = function(index, notSetValue) {
	      return this.has(index) ?
	        this._start + wrapIndex(this, index) * this._step :
	        notSetValue;
	    };

	    Range.prototype.includes = function(searchValue) {
	      var possibleIndex = (searchValue - this._start) / this._step;
	      return possibleIndex >= 0 &&
	        possibleIndex < this.size &&
	        possibleIndex === Math.floor(possibleIndex);
	    };

	    Range.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      begin = resolveBegin(begin, this.size);
	      end = resolveEnd(end, this.size);
	      if (end <= begin) {
	        return new Range(0, 0);
	      }
	      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
	    };

	    Range.prototype.indexOf = function(searchValue) {
	      var offsetValue = searchValue - this._start;
	      if (offsetValue % this._step === 0) {
	        var index = offsetValue / this._step;
	        if (index >= 0 && index < this.size) {
	          return index
	        }
	      }
	      return -1;
	    };

	    Range.prototype.lastIndexOf = function(searchValue) {
	      return this.indexOf(searchValue);
	    };

	    Range.prototype.__iterate = function(fn, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(value, ii, this) === false) {
	          return ii + 1;
	        }
	        value += reverse ? -step : step;
	      }
	      return ii;
	    };

	    Range.prototype.__iterator = function(type, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      var ii = 0;
	      return new Iterator(function()  {
	        var v = value;
	        value += reverse ? -step : step;
	        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
	      });
	    };

	    Range.prototype.equals = function(other) {
	      return other instanceof Range ?
	        this._start === other._start &&
	        this._end === other._end &&
	        this._step === other._step :
	        deepEqual(this, other);
	    };


	  var EMPTY_RANGE;

	  createClass(Collection, Iterable);
	    function Collection() {
	      throw TypeError('Abstract');
	    }


	  createClass(KeyedCollection, Collection);function KeyedCollection() {}

	  createClass(IndexedCollection, Collection);function IndexedCollection() {}

	  createClass(SetCollection, Collection);function SetCollection() {}


	  Collection.Keyed = KeyedCollection;
	  Collection.Indexed = IndexedCollection;
	  Collection.Set = SetCollection;

	  var imul =
	    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
	    Math.imul :
	    function imul(a, b) {
	      a = a | 0; // int
	      b = b | 0; // int
	      var c = a & 0xffff;
	      var d = b & 0xffff;
	      // Shift by 0 fixes the sign on the high part.
	      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
	    };

	  // v8 has an optimization for storing 31-bit signed numbers.
	  // Values which have either 00 or 11 as the high order bits qualify.
	  // This function drops the highest order bit in a signed number, maintaining
	  // the sign bit.
	  function smi(i32) {
	    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
	  }

	  function hash(o) {
	    if (o === false || o === null || o === undefined) {
	      return 0;
	    }
	    if (typeof o.valueOf === 'function') {
	      o = o.valueOf();
	      if (o === false || o === null || o === undefined) {
	        return 0;
	      }
	    }
	    if (o === true) {
	      return 1;
	    }
	    var type = typeof o;
	    if (type === 'number') {
	      if (o !== o || o === Infinity) {
	        return 0;
	      }
	      var h = o | 0;
	      if (h !== o) {
	        h ^= o * 0xFFFFFFFF;
	      }
	      while (o > 0xFFFFFFFF) {
	        o /= 0xFFFFFFFF;
	        h ^= o;
	      }
	      return smi(h);
	    }
	    if (type === 'string') {
	      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
	    }
	    if (typeof o.hashCode === 'function') {
	      return o.hashCode();
	    }
	    if (type === 'object') {
	      return hashJSObj(o);
	    }
	    if (typeof o.toString === 'function') {
	      return hashString(o.toString());
	    }
	    throw new Error('Value type ' + type + ' cannot be hashed.');
	  }

	  function cachedHashString(string) {
	    var hash = stringHashCache[string];
	    if (hash === undefined) {
	      hash = hashString(string);
	      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
	        STRING_HASH_CACHE_SIZE = 0;
	        stringHashCache = {};
	      }
	      STRING_HASH_CACHE_SIZE++;
	      stringHashCache[string] = hash;
	    }
	    return hash;
	  }

	  // http://jsperf.com/hashing-strings
	  function hashString(string) {
	    // This is the hash from JVM
	    // The hash code for a string is computed as
	    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
	    // where s[i] is the ith character of the string and n is the length of
	    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
	    // (exclusive) by dropping high bits.
	    var hash = 0;
	    for (var ii = 0; ii < string.length; ii++) {
	      hash = 31 * hash + string.charCodeAt(ii) | 0;
	    }
	    return smi(hash);
	  }

	  function hashJSObj(obj) {
	    var hash;
	    if (usingWeakMap) {
	      hash = weakMap.get(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = obj[UID_HASH_KEY];
	    if (hash !== undefined) {
	      return hash;
	    }

	    if (!canDefineProperty) {
	      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
	      if (hash !== undefined) {
	        return hash;
	      }

	      hash = getIENodeHash(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = ++objHashUID;
	    if (objHashUID & 0x40000000) {
	      objHashUID = 0;
	    }

	    if (usingWeakMap) {
	      weakMap.set(obj, hash);
	    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
	      throw new Error('Non-extensible objects are not allowed as keys.');
	    } else if (canDefineProperty) {
	      Object.defineProperty(obj, UID_HASH_KEY, {
	        'enumerable': false,
	        'configurable': false,
	        'writable': false,
	        'value': hash
	      });
	    } else if (obj.propertyIsEnumerable !== undefined &&
	               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
	      // Since we can't define a non-enumerable property on the object
	      // we'll hijack one of the less-used non-enumerable properties to
	      // save our hash on it. Since this is a function it will not show up in
	      // `JSON.stringify` which is what we want.
	      obj.propertyIsEnumerable = function() {
	        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
	      };
	      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
	    } else if (obj.nodeType !== undefined) {
	      // At this point we couldn't get the IE `uniqueID` to use as a hash
	      // and we couldn't use a non-enumerable property to exploit the
	      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
	      // itself.
	      obj[UID_HASH_KEY] = hash;
	    } else {
	      throw new Error('Unable to set a non-enumerable property on object.');
	    }

	    return hash;
	  }

	  // Get references to ES5 object methods.
	  var isExtensible = Object.isExtensible;

	  // True if Object.defineProperty works as expected. IE8 fails this test.
	  var canDefineProperty = (function() {
	    try {
	      Object.defineProperty({}, '@', {});
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }());

	  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
	  // and avoid memory leaks from the IE cloneNode bug.
	  function getIENodeHash(node) {
	    if (node && node.nodeType > 0) {
	      switch (node.nodeType) {
	        case 1: // Element
	          return node.uniqueID;
	        case 9: // Document
	          return node.documentElement && node.documentElement.uniqueID;
	      }
	    }
	  }

	  // If possible, use a WeakMap.
	  var usingWeakMap = typeof WeakMap === 'function';
	  var weakMap;
	  if (usingWeakMap) {
	    weakMap = new WeakMap();
	  }

	  var objHashUID = 0;

	  var UID_HASH_KEY = '__immutablehash__';
	  if (typeof Symbol === 'function') {
	    UID_HASH_KEY = Symbol(UID_HASH_KEY);
	  }

	  var STRING_HASH_CACHE_MIN_STRLEN = 16;
	  var STRING_HASH_CACHE_MAX_SIZE = 255;
	  var STRING_HASH_CACHE_SIZE = 0;
	  var stringHashCache = {};

	  function assertNotInfinite(size) {
	    invariant(
	      size !== Infinity,
	      'Cannot perform this action with an infinite size.'
	    );
	  }

	  createClass(Map, KeyedCollection);

	    // @pragma Construction

	    function Map(value) {
	      return value === null || value === undefined ? emptyMap() :
	        isMap(value) && !isOrdered(value) ? value :
	        emptyMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
	      return emptyMap().withMutations(function(map ) {
	        for (var i = 0; i < keyValues.length; i += 2) {
	          if (i + 1 >= keyValues.length) {
	            throw new Error('Missing value for key: ' + keyValues[i]);
	          }
	          map.set(keyValues[i], keyValues[i + 1]);
	        }
	      });
	    };

	    Map.prototype.toString = function() {
	      return this.__toString('Map {', '}');
	    };

	    // @pragma Access

	    Map.prototype.get = function(k, notSetValue) {
	      return this._root ?
	        this._root.get(0, undefined, k, notSetValue) :
	        notSetValue;
	    };

	    // @pragma Modification

	    Map.prototype.set = function(k, v) {
	      return updateMap(this, k, v);
	    };

	    Map.prototype.setIn = function(keyPath, v) {
	      return this.updateIn(keyPath, NOT_SET, function()  {return v});
	    };

	    Map.prototype.remove = function(k) {
	      return updateMap(this, k, NOT_SET);
	    };

	    Map.prototype.deleteIn = function(keyPath) {
	      return this.updateIn(keyPath, function()  {return NOT_SET});
	    };

	    Map.prototype.update = function(k, notSetValue, updater) {
	      return arguments.length === 1 ?
	        k(this) :
	        this.updateIn([k], notSetValue, updater);
	    };

	    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
	      if (!updater) {
	        updater = notSetValue;
	        notSetValue = undefined;
	      }
	      var updatedValue = updateInDeepMap(
	        this,
	        forceIterator(keyPath),
	        notSetValue,
	        updater
	      );
	      return updatedValue === NOT_SET ? undefined : updatedValue;
	    };

	    Map.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._root = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyMap();
	    };

	    // @pragma Composition

	    Map.prototype.merge = function(/*...iters*/) {
	      return mergeIntoMapWith(this, undefined, arguments);
	    };

	    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, merger, iters);
	    };

	    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.merge === 'function' ?
	          m.merge.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoMapWith(this, deepMerger, arguments);
	    };

	    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
	    };

	    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.mergeDeep === 'function' ?
	          m.mergeDeep.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator));
	    };

	    Map.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator, mapper));
	    };

	    // @pragma Mutability

	    Map.prototype.withMutations = function(fn) {
	      var mutable = this.asMutable();
	      fn(mutable);
	      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
	    };

	    Map.prototype.asMutable = function() {
	      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
	    };

	    Map.prototype.asImmutable = function() {
	      return this.__ensureOwner();
	    };

	    Map.prototype.wasAltered = function() {
	      return this.__altered;
	    };

	    Map.prototype.__iterator = function(type, reverse) {
	      return new MapIterator(this, type, reverse);
	    };

	    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      this._root && this._root.iterate(function(entry ) {
	        iterations++;
	        return fn(entry[1], entry[0], this$0);
	      }, reverse);
	      return iterations;
	    };

	    Map.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeMap(this.size, this._root, ownerID, this.__hash);
	    };


	  function isMap(maybeMap) {
	    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
	  }

	  Map.isMap = isMap;

	  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

	  var MapPrototype = Map.prototype;
	  MapPrototype[IS_MAP_SENTINEL] = true;
	  MapPrototype[DELETE] = MapPrototype.remove;
	  MapPrototype.removeIn = MapPrototype.deleteIn;


	  // #pragma Trie Nodes



	    function ArrayMapNode(ownerID, entries) {
	      this.ownerID = ownerID;
	      this.entries = entries;
	    }

	    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && entries.length === 1) {
	        return; // undefined
	      }

	      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
	        return createNodes(ownerID, entries, key, value);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new ArrayMapNode(ownerID, newEntries);
	    };




	    function BitmapIndexedNode(ownerID, bitmap, nodes) {
	      this.ownerID = ownerID;
	      this.bitmap = bitmap;
	      this.nodes = nodes;
	    }

	    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
	      var bitmap = this.bitmap;
	      return (bitmap & bit) === 0 ? notSetValue :
	        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
	    };

	    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var bit = 1 << keyHashFrag;
	      var bitmap = this.bitmap;
	      var exists = (bitmap & bit) !== 0;

	      if (!exists && value === NOT_SET) {
	        return this;
	      }

	      var idx = popCount(bitmap & (bit - 1));
	      var nodes = this.nodes;
	      var node = exists ? nodes[idx] : undefined;
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

	      if (newNode === node) {
	        return this;
	      }

	      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
	        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
	      }

	      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
	        return nodes[idx ^ 1];
	      }

	      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
	        return newNode;
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
	      var newNodes = exists ? newNode ?
	        setIn(nodes, idx, newNode, isEditable) :
	        spliceOut(nodes, idx, isEditable) :
	        spliceIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.bitmap = newBitmap;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
	    };




	    function HashArrayMapNode(ownerID, count, nodes) {
	      this.ownerID = ownerID;
	      this.count = count;
	      this.nodes = nodes;
	    }

	    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var node = this.nodes[idx];
	      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
	    };

	    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var removed = value === NOT_SET;
	      var nodes = this.nodes;
	      var node = nodes[idx];

	      if (removed && !node) {
	        return this;
	      }

	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	      if (newNode === node) {
	        return this;
	      }

	      var newCount = this.count;
	      if (!node) {
	        newCount++;
	      } else if (!newNode) {
	        newCount--;
	        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
	          return packNodes(ownerID, nodes, newCount, idx);
	        }
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newNodes = setIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.count = newCount;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new HashArrayMapNode(ownerID, newCount, newNodes);
	    };




	    function HashCollisionNode(ownerID, keyHash, entries) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entries = entries;
	    }

	    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }

	      var removed = value === NOT_SET;

	      if (keyHash !== this.keyHash) {
	        if (removed) {
	          return this;
	        }
	        SetRef(didAlter);
	        SetRef(didChangeSize);
	        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
	      }

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && len === 2) {
	        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
	    };




	    function ValueNode(ownerID, keyHash, entry) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entry = entry;
	    }

	    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
	    };

	    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	      var keyMatch = is(key, this.entry[0]);
	      if (keyMatch ? value === this.entry[1] : removed) {
	        return this;
	      }

	      SetRef(didAlter);

	      if (removed) {
	        SetRef(didChangeSize);
	        return; // undefined
	      }

	      if (keyMatch) {
	        if (ownerID && ownerID === this.ownerID) {
	          this.entry[1] = value;
	          return this;
	        }
	        return new ValueNode(ownerID, this.keyHash, [key, value]);
	      }

	      SetRef(didChangeSize);
	      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
	    };



	  // #pragma Iterators

	  ArrayMapNode.prototype.iterate =
	  HashCollisionNode.prototype.iterate = function (fn, reverse) {
	    var entries = this.entries;
	    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
	      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
	        return false;
	      }
	    }
	  }

	  BitmapIndexedNode.prototype.iterate =
	  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
	    var nodes = this.nodes;
	    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
	      var node = nodes[reverse ? maxIndex - ii : ii];
	      if (node && node.iterate(fn, reverse) === false) {
	        return false;
	      }
	    }
	  }

	  ValueNode.prototype.iterate = function (fn, reverse) {
	    return fn(this.entry);
	  }

	  createClass(MapIterator, Iterator);

	    function MapIterator(map, type, reverse) {
	      this._type = type;
	      this._reverse = reverse;
	      this._stack = map._root && mapIteratorFrame(map._root);
	    }

	    MapIterator.prototype.next = function() {
	      var type = this._type;
	      var stack = this._stack;
	      while (stack) {
	        var node = stack.node;
	        var index = stack.index++;
	        var maxIndex;
	        if (node.entry) {
	          if (index === 0) {
	            return mapIteratorValue(type, node.entry);
	          }
	        } else if (node.entries) {
	          maxIndex = node.entries.length - 1;
	          if (index <= maxIndex) {
	            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
	          }
	        } else {
	          maxIndex = node.nodes.length - 1;
	          if (index <= maxIndex) {
	            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
	            if (subNode) {
	              if (subNode.entry) {
	                return mapIteratorValue(type, subNode.entry);
	              }
	              stack = this._stack = mapIteratorFrame(subNode, stack);
	            }
	            continue;
	          }
	        }
	        stack = this._stack = this._stack.__prev;
	      }
	      return iteratorDone();
	    };


	  function mapIteratorValue(type, entry) {
	    return iteratorValue(type, entry[0], entry[1]);
	  }

	  function mapIteratorFrame(node, prev) {
	    return {
	      node: node,
	      index: 0,
	      __prev: prev
	    };
	  }

	  function makeMap(size, root, ownerID, hash) {
	    var map = Object.create(MapPrototype);
	    map.size = size;
	    map._root = root;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_MAP;
	  function emptyMap() {
	    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
	  }

	  function updateMap(map, k, v) {
	    var newRoot;
	    var newSize;
	    if (!map._root) {
	      if (v === NOT_SET) {
	        return map;
	      }
	      newSize = 1;
	      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
	    } else {
	      var didChangeSize = MakeRef(CHANGE_LENGTH);
	      var didAlter = MakeRef(DID_ALTER);
	      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
	      if (!didAlter.value) {
	        return map;
	      }
	      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
	    }
	    if (map.__ownerID) {
	      map.size = newSize;
	      map._root = newRoot;
	      map.__hash = undefined;
	      map.__altered = true;
	      return map;
	    }
	    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
	  }

	  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	    if (!node) {
	      if (value === NOT_SET) {
	        return node;
	      }
	      SetRef(didAlter);
	      SetRef(didChangeSize);
	      return new ValueNode(ownerID, keyHash, [key, value]);
	    }
	    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
	  }

	  function isLeafNode(node) {
	    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
	  }

	  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
	    if (node.keyHash === keyHash) {
	      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
	    }

	    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
	    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

	    var newNode;
	    var nodes = idx1 === idx2 ?
	      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
	      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);

	    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
	  }

	  function createNodes(ownerID, entries, key, value) {
	    if (!ownerID) {
	      ownerID = new OwnerID();
	    }
	    var node = new ValueNode(ownerID, hash(key), [key, value]);
	    for (var ii = 0; ii < entries.length; ii++) {
	      var entry = entries[ii];
	      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
	    }
	    return node;
	  }

	  function packNodes(ownerID, nodes, count, excluding) {
	    var bitmap = 0;
	    var packedII = 0;
	    var packedNodes = new Array(count);
	    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
	      var node = nodes[ii];
	      if (node !== undefined && ii !== excluding) {
	        bitmap |= bit;
	        packedNodes[packedII++] = node;
	      }
	    }
	    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
	  }

	  function expandNodes(ownerID, nodes, bitmap, including, node) {
	    var count = 0;
	    var expandedNodes = new Array(SIZE);
	    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
	      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
	    }
	    expandedNodes[including] = node;
	    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
	  }

	  function mergeIntoMapWith(map, merger, iterables) {
	    var iters = [];
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = KeyedIterable(value);
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    return mergeIntoCollectionWith(map, merger, iters);
	  }

	  function deepMerger(existing, value, key) {
	    return existing && existing.mergeDeep && isIterable(value) ?
	      existing.mergeDeep(value) :
	      is(existing, value) ? existing : value;
	  }

	  function deepMergerWith(merger) {
	    return function(existing, value, key)  {
	      if (existing && existing.mergeDeepWith && isIterable(value)) {
	        return existing.mergeDeepWith(merger, value);
	      }
	      var nextValue = merger(existing, value, key);
	      return is(existing, nextValue) ? existing : nextValue;
	    };
	  }

	  function mergeIntoCollectionWith(collection, merger, iters) {
	    iters = iters.filter(function(x ) {return x.size !== 0});
	    if (iters.length === 0) {
	      return collection;
	    }
	    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
	      return collection.constructor(iters[0]);
	    }
	    return collection.withMutations(function(collection ) {
	      var mergeIntoMap = merger ?
	        function(value, key)  {
	          collection.update(key, NOT_SET, function(existing )
	            {return existing === NOT_SET ? value : merger(existing, value, key)}
	          );
	        } :
	        function(value, key)  {
	          collection.set(key, value);
	        }
	      for (var ii = 0; ii < iters.length; ii++) {
	        iters[ii].forEach(mergeIntoMap);
	      }
	    });
	  }

	  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
	    var isNotSet = existing === NOT_SET;
	    var step = keyPathIter.next();
	    if (step.done) {
	      var existingValue = isNotSet ? notSetValue : existing;
	      var newValue = updater(existingValue);
	      return newValue === existingValue ? existing : newValue;
	    }
	    invariant(
	      isNotSet || (existing && existing.set),
	      'invalid keyPath'
	    );
	    var key = step.value;
	    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
	    var nextUpdated = updateInDeepMap(
	      nextExisting,
	      keyPathIter,
	      notSetValue,
	      updater
	    );
	    return nextUpdated === nextExisting ? existing :
	      nextUpdated === NOT_SET ? existing.remove(key) :
	      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
	  }

	  function popCount(x) {
	    x = x - ((x >> 1) & 0x55555555);
	    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	    x = (x + (x >> 4)) & 0x0f0f0f0f;
	    x = x + (x >> 8);
	    x = x + (x >> 16);
	    return x & 0x7f;
	  }

	  function setIn(array, idx, val, canEdit) {
	    var newArray = canEdit ? array : arrCopy(array);
	    newArray[idx] = val;
	    return newArray;
	  }

	  function spliceIn(array, idx, val, canEdit) {
	    var newLen = array.length + 1;
	    if (canEdit && idx + 1 === newLen) {
	      array[idx] = val;
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        newArray[ii] = val;
	        after = -1;
	      } else {
	        newArray[ii] = array[ii + after];
	      }
	    }
	    return newArray;
	  }

	  function spliceOut(array, idx, canEdit) {
	    var newLen = array.length - 1;
	    if (canEdit && idx === newLen) {
	      array.pop();
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        after = 1;
	      }
	      newArray[ii] = array[ii + after];
	    }
	    return newArray;
	  }

	  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
	  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
	  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

	  createClass(List, IndexedCollection);

	    // @pragma Construction

	    function List(value) {
	      var empty = emptyList();
	      if (value === null || value === undefined) {
	        return empty;
	      }
	      if (isList(value)) {
	        return value;
	      }
	      var iter = IndexedIterable(value);
	      var size = iter.size;
	      if (size === 0) {
	        return empty;
	      }
	      assertNotInfinite(size);
	      if (size > 0 && size < SIZE) {
	        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
	      }
	      return empty.withMutations(function(list ) {
	        list.setSize(size);
	        iter.forEach(function(v, i)  {return list.set(i, v)});
	      });
	    }

	    List.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    List.prototype.toString = function() {
	      return this.__toString('List [', ']');
	    };

	    // @pragma Access

	    List.prototype.get = function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      if (index >= 0 && index < this.size) {
	        index += this._origin;
	        var node = listNodeFor(this, index);
	        return node && node.array[index & MASK];
	      }
	      return notSetValue;
	    };

	    // @pragma Modification

	    List.prototype.set = function(index, value) {
	      return updateList(this, index, value);
	    };

	    List.prototype.remove = function(index) {
	      return !this.has(index) ? this :
	        index === 0 ? this.shift() :
	        index === this.size - 1 ? this.pop() :
	        this.splice(index, 1);
	    };

	    List.prototype.insert = function(index, value) {
	      return this.splice(index, 0, value);
	    };

	    List.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = this._origin = this._capacity = 0;
	        this._level = SHIFT;
	        this._root = this._tail = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyList();
	    };

	    List.prototype.push = function(/*...values*/) {
	      var values = arguments;
	      var oldSize = this.size;
	      return this.withMutations(function(list ) {
	        setListBounds(list, 0, oldSize + values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(oldSize + ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.pop = function() {
	      return setListBounds(this, 0, -1);
	    };

	    List.prototype.unshift = function(/*...values*/) {
	      var values = arguments;
	      return this.withMutations(function(list ) {
	        setListBounds(list, -values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.shift = function() {
	      return setListBounds(this, 1);
	    };

	    // @pragma Composition

	    List.prototype.merge = function(/*...iters*/) {
	      return mergeIntoListWith(this, undefined, arguments);
	    };

	    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, merger, iters);
	    };

	    List.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoListWith(this, deepMerger, arguments);
	    };

	    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, deepMergerWith(merger), iters);
	    };

	    List.prototype.setSize = function(size) {
	      return setListBounds(this, 0, size);
	    };

	    // @pragma Iteration

	    List.prototype.slice = function(begin, end) {
	      var size = this.size;
	      if (wholeSlice(begin, end, size)) {
	        return this;
	      }
	      return setListBounds(
	        this,
	        resolveBegin(begin, size),
	        resolveEnd(end, size)
	      );
	    };

	    List.prototype.__iterator = function(type, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      return new Iterator(function()  {
	        var value = values();
	        return value === DONE ?
	          iteratorDone() :
	          iteratorValue(type, index++, value);
	      });
	    };

	    List.prototype.__iterate = function(fn, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      var value;
	      while ((value = values()) !== DONE) {
	        if (fn(value, index++, this) === false) {
	          break;
	        }
	      }
	      return index;
	    };

	    List.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        return this;
	      }
	      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
	    };


	  function isList(maybeList) {
	    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
	  }

	  List.isList = isList;

	  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

	  var ListPrototype = List.prototype;
	  ListPrototype[IS_LIST_SENTINEL] = true;
	  ListPrototype[DELETE] = ListPrototype.remove;
	  ListPrototype.setIn = MapPrototype.setIn;
	  ListPrototype.deleteIn =
	  ListPrototype.removeIn = MapPrototype.removeIn;
	  ListPrototype.update = MapPrototype.update;
	  ListPrototype.updateIn = MapPrototype.updateIn;
	  ListPrototype.mergeIn = MapPrototype.mergeIn;
	  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  ListPrototype.withMutations = MapPrototype.withMutations;
	  ListPrototype.asMutable = MapPrototype.asMutable;
	  ListPrototype.asImmutable = MapPrototype.asImmutable;
	  ListPrototype.wasAltered = MapPrototype.wasAltered;



	    function VNode(array, ownerID) {
	      this.array = array;
	      this.ownerID = ownerID;
	    }

	    // TODO: seems like these methods are very similar

	    VNode.prototype.removeBefore = function(ownerID, level, index) {
	      if (index === level ? 1 << level : 0 || this.array.length === 0) {
	        return this;
	      }
	      var originIndex = (index >>> level) & MASK;
	      if (originIndex >= this.array.length) {
	        return new VNode([], ownerID);
	      }
	      var removingFirst = originIndex === 0;
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[originIndex];
	        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && removingFirst) {
	          return this;
	        }
	      }
	      if (removingFirst && !newChild) {
	        return this;
	      }
	      var editable = editableVNode(this, ownerID);
	      if (!removingFirst) {
	        for (var ii = 0; ii < originIndex; ii++) {
	          editable.array[ii] = undefined;
	        }
	      }
	      if (newChild) {
	        editable.array[originIndex] = newChild;
	      }
	      return editable;
	    };

	    VNode.prototype.removeAfter = function(ownerID, level, index) {
	      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
	        return this;
	      }
	      var sizeIndex = ((index - 1) >>> level) & MASK;
	      if (sizeIndex >= this.array.length) {
	        return this;
	      }

	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[sizeIndex];
	        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
	          return this;
	        }
	      }

	      var editable = editableVNode(this, ownerID);
	      editable.array.splice(sizeIndex + 1);
	      if (newChild) {
	        editable.array[sizeIndex] = newChild;
	      }
	      return editable;
	    };



	  var DONE = {};

	  function iterateList(list, reverse) {
	    var left = list._origin;
	    var right = list._capacity;
	    var tailPos = getTailOffset(right);
	    var tail = list._tail;

	    return iterateNodeOrLeaf(list._root, list._level, 0);

	    function iterateNodeOrLeaf(node, level, offset) {
	      return level === 0 ?
	        iterateLeaf(node, offset) :
	        iterateNode(node, level, offset);
	    }

	    function iterateLeaf(node, offset) {
	      var array = offset === tailPos ? tail && tail.array : node && node.array;
	      var from = offset > left ? 0 : left - offset;
	      var to = right - offset;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        if (from === to) {
	          return DONE;
	        }
	        var idx = reverse ? --to : from++;
	        return array && array[idx];
	      };
	    }

	    function iterateNode(node, level, offset) {
	      var values;
	      var array = node && node.array;
	      var from = offset > left ? 0 : (left - offset) >> level;
	      var to = ((right - offset) >> level) + 1;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        do {
	          if (values) {
	            var value = values();
	            if (value !== DONE) {
	              return value;
	            }
	            values = null;
	          }
	          if (from === to) {
	            return DONE;
	          }
	          var idx = reverse ? --to : from++;
	          values = iterateNodeOrLeaf(
	            array && array[idx], level - SHIFT, offset + (idx << level)
	          );
	        } while (true);
	      };
	    }
	  }

	  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
	    var list = Object.create(ListPrototype);
	    list.size = capacity - origin;
	    list._origin = origin;
	    list._capacity = capacity;
	    list._level = level;
	    list._root = root;
	    list._tail = tail;
	    list.__ownerID = ownerID;
	    list.__hash = hash;
	    list.__altered = false;
	    return list;
	  }

	  var EMPTY_LIST;
	  function emptyList() {
	    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
	  }

	  function updateList(list, index, value) {
	    index = wrapIndex(list, index);

	    if (index !== index) {
	      return list;
	    }

	    if (index >= list.size || index < 0) {
	      return list.withMutations(function(list ) {
	        index < 0 ?
	          setListBounds(list, index).set(0, value) :
	          setListBounds(list, 0, index + 1).set(index, value)
	      });
	    }

	    index += list._origin;

	    var newTail = list._tail;
	    var newRoot = list._root;
	    var didAlter = MakeRef(DID_ALTER);
	    if (index >= getTailOffset(list._capacity)) {
	      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
	    } else {
	      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
	    }

	    if (!didAlter.value) {
	      return list;
	    }

	    if (list.__ownerID) {
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
	  }

	  function updateVNode(node, ownerID, level, index, value, didAlter) {
	    var idx = (index >>> level) & MASK;
	    var nodeHas = node && idx < node.array.length;
	    if (!nodeHas && value === undefined) {
	      return node;
	    }

	    var newNode;

	    if (level > 0) {
	      var lowerNode = node && node.array[idx];
	      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
	      if (newLowerNode === lowerNode) {
	        return node;
	      }
	      newNode = editableVNode(node, ownerID);
	      newNode.array[idx] = newLowerNode;
	      return newNode;
	    }

	    if (nodeHas && node.array[idx] === value) {
	      return node;
	    }

	    SetRef(didAlter);

	    newNode = editableVNode(node, ownerID);
	    if (value === undefined && idx === newNode.array.length - 1) {
	      newNode.array.pop();
	    } else {
	      newNode.array[idx] = value;
	    }
	    return newNode;
	  }

	  function editableVNode(node, ownerID) {
	    if (ownerID && node && ownerID === node.ownerID) {
	      return node;
	    }
	    return new VNode(node ? node.array.slice() : [], ownerID);
	  }

	  function listNodeFor(list, rawIndex) {
	    if (rawIndex >= getTailOffset(list._capacity)) {
	      return list._tail;
	    }
	    if (rawIndex < 1 << (list._level + SHIFT)) {
	      var node = list._root;
	      var level = list._level;
	      while (node && level > 0) {
	        node = node.array[(rawIndex >>> level) & MASK];
	        level -= SHIFT;
	      }
	      return node;
	    }
	  }

	  function setListBounds(list, begin, end) {
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      end = end | 0;
	    }
	    var owner = list.__ownerID || new OwnerID();
	    var oldOrigin = list._origin;
	    var oldCapacity = list._capacity;
	    var newOrigin = oldOrigin + begin;
	    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
	    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
	      return list;
	    }

	    // If it's going to end after it starts, it's empty.
	    if (newOrigin >= newCapacity) {
	      return list.clear();
	    }

	    var newLevel = list._level;
	    var newRoot = list._root;

	    // New origin might need creating a higher root.
	    var offsetShift = 0;
	    while (newOrigin + offsetShift < 0) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
	      newLevel += SHIFT;
	      offsetShift += 1 << newLevel;
	    }
	    if (offsetShift) {
	      newOrigin += offsetShift;
	      oldOrigin += offsetShift;
	      newCapacity += offsetShift;
	      oldCapacity += offsetShift;
	    }

	    var oldTailOffset = getTailOffset(oldCapacity);
	    var newTailOffset = getTailOffset(newCapacity);

	    // New size might need creating a higher root.
	    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
	      newLevel += SHIFT;
	    }

	    // Locate or create the new tail.
	    var oldTail = list._tail;
	    var newTail = newTailOffset < oldTailOffset ?
	      listNodeFor(list, newCapacity - 1) :
	      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

	    // Merge Tail into tree.
	    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
	      newRoot = editableVNode(newRoot, owner);
	      var node = newRoot;
	      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
	        var idx = (oldTailOffset >>> level) & MASK;
	        node = node.array[idx] = editableVNode(node.array[idx], owner);
	      }
	      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
	    }

	    // If the size has been reduced, there's a chance the tail needs to be trimmed.
	    if (newCapacity < oldCapacity) {
	      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
	    }

	    // If the new origin is within the tail, then we do not need a root.
	    if (newOrigin >= newTailOffset) {
	      newOrigin -= newTailOffset;
	      newCapacity -= newTailOffset;
	      newLevel = SHIFT;
	      newRoot = null;
	      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

	    // Otherwise, if the root has been trimmed, garbage collect.
	    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
	      offsetShift = 0;

	      // Identify the new top root node of the subtree of the old root.
	      while (newRoot) {
	        var beginIndex = (newOrigin >>> newLevel) & MASK;
	        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
	          break;
	        }
	        if (beginIndex) {
	          offsetShift += (1 << newLevel) * beginIndex;
	        }
	        newLevel -= SHIFT;
	        newRoot = newRoot.array[beginIndex];
	      }

	      // Trim the new sides of the new root.
	      if (newRoot && newOrigin > oldOrigin) {
	        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
	      }
	      if (newRoot && newTailOffset < oldTailOffset) {
	        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
	      }
	      if (offsetShift) {
	        newOrigin -= offsetShift;
	        newCapacity -= offsetShift;
	      }
	    }

	    if (list.__ownerID) {
	      list.size = newCapacity - newOrigin;
	      list._origin = newOrigin;
	      list._capacity = newCapacity;
	      list._level = newLevel;
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
	  }

	  function mergeIntoListWith(list, merger, iterables) {
	    var iters = [];
	    var maxSize = 0;
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = IndexedIterable(value);
	      if (iter.size > maxSize) {
	        maxSize = iter.size;
	      }
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    if (maxSize > list.size) {
	      list = list.setSize(maxSize);
	    }
	    return mergeIntoCollectionWith(list, merger, iters);
	  }

	  function getTailOffset(size) {
	    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
	  }

	  createClass(OrderedMap, Map);

	    // @pragma Construction

	    function OrderedMap(value) {
	      return value === null || value === undefined ? emptyOrderedMap() :
	        isOrderedMap(value) ? value :
	        emptyOrderedMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    OrderedMap.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedMap.prototype.toString = function() {
	      return this.__toString('OrderedMap {', '}');
	    };

	    // @pragma Access

	    OrderedMap.prototype.get = function(k, notSetValue) {
	      var index = this._map.get(k);
	      return index !== undefined ? this._list.get(index)[1] : notSetValue;
	    };

	    // @pragma Modification

	    OrderedMap.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._map.clear();
	        this._list.clear();
	        return this;
	      }
	      return emptyOrderedMap();
	    };

	    OrderedMap.prototype.set = function(k, v) {
	      return updateOrderedMap(this, k, v);
	    };

	    OrderedMap.prototype.remove = function(k) {
	      return updateOrderedMap(this, k, NOT_SET);
	    };

	    OrderedMap.prototype.wasAltered = function() {
	      return this._map.wasAltered() || this._list.wasAltered();
	    };

	    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._list.__iterate(
	        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
	        reverse
	      );
	    };

	    OrderedMap.prototype.__iterator = function(type, reverse) {
	      return this._list.fromEntrySeq().__iterator(type, reverse);
	    };

	    OrderedMap.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      var newList = this._list.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        this._list = newList;
	        return this;
	      }
	      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
	    };


	  function isOrderedMap(maybeOrderedMap) {
	    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
	  }

	  OrderedMap.isOrderedMap = isOrderedMap;

	  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
	  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



	  function makeOrderedMap(map, list, ownerID, hash) {
	    var omap = Object.create(OrderedMap.prototype);
	    omap.size = map ? map.size : 0;
	    omap._map = map;
	    omap._list = list;
	    omap.__ownerID = ownerID;
	    omap.__hash = hash;
	    return omap;
	  }

	  var EMPTY_ORDERED_MAP;
	  function emptyOrderedMap() {
	    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
	  }

	  function updateOrderedMap(omap, k, v) {
	    var map = omap._map;
	    var list = omap._list;
	    var i = map.get(k);
	    var has = i !== undefined;
	    var newMap;
	    var newList;
	    if (v === NOT_SET) { // removed
	      if (!has) {
	        return omap;
	      }
	      if (list.size >= SIZE && list.size >= map.size * 2) {
	        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
	        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
	        if (omap.__ownerID) {
	          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
	        }
	      } else {
	        newMap = map.remove(k);
	        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
	      }
	    } else {
	      if (has) {
	        if (v === list.get(i)[1]) {
	          return omap;
	        }
	        newMap = map;
	        newList = list.set(i, [k, v]);
	      } else {
	        newMap = map.set(k, list.size);
	        newList = list.set(list.size, [k, v]);
	      }
	    }
	    if (omap.__ownerID) {
	      omap.size = newMap.size;
	      omap._map = newMap;
	      omap._list = newList;
	      omap.__hash = undefined;
	      return omap;
	    }
	    return makeOrderedMap(newMap, newList);
	  }

	  createClass(ToKeyedSequence, KeyedSeq);
	    function ToKeyedSequence(indexed, useKeys) {
	      this._iter = indexed;
	      this._useKeys = useKeys;
	      this.size = indexed.size;
	    }

	    ToKeyedSequence.prototype.get = function(key, notSetValue) {
	      return this._iter.get(key, notSetValue);
	    };

	    ToKeyedSequence.prototype.has = function(key) {
	      return this._iter.has(key);
	    };

	    ToKeyedSequence.prototype.valueSeq = function() {
	      return this._iter.valueSeq();
	    };

	    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
	      var reversedSequence = reverseFactory(this, true);
	      if (!this._useKeys) {
	        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
	      }
	      return reversedSequence;
	    };

	    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
	      var mappedSequence = mapFactory(this, mapper, context);
	      if (!this._useKeys) {
	        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
	      }
	      return mappedSequence;
	    };

	    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var ii;
	      return this._iter.__iterate(
	        this._useKeys ?
	          function(v, k)  {return fn(v, k, this$0)} :
	          ((ii = reverse ? resolveSize(this) : 0),
	            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
	        reverse
	      );
	    };

	    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
	      if (this._useKeys) {
	        return this._iter.__iterator(type, reverse);
	      }
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var ii = reverse ? resolveSize(this) : 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
	      });
	    };

	  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(ToIndexedSequence, IndexedSeq);
	    function ToIndexedSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToIndexedSequence.prototype.includes = function(value) {
	      return this._iter.includes(value);
	    };

	    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
	    };

	    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, iterations++, step.value, step)
	      });
	    };



	  createClass(ToSetSequence, SetSeq);
	    function ToSetSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToSetSequence.prototype.has = function(key) {
	      return this._iter.includes(key);
	    };

	    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
	    };

	    ToSetSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, step.value, step.value, step);
	      });
	    };



	  createClass(FromEntriesSequence, KeyedSeq);
	    function FromEntriesSequence(entries) {
	      this._iter = entries;
	      this.size = entries.size;
	    }

	    FromEntriesSequence.prototype.entrySeq = function() {
	      return this._iter.toSeq();
	    };

	    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(entry ) {
	        // Check if entry exists first so array access doesn't throw for holes
	        // in the parent iteration.
	        if (entry) {
	          validateEntry(entry);
	          var indexedIterable = isIterable(entry);
	          return fn(
	            indexedIterable ? entry.get(1) : entry[1],
	            indexedIterable ? entry.get(0) : entry[0],
	            this$0
	          );
	        }
	      }, reverse);
	    };

	    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          // Check if entry exists first so array access doesn't throw for holes
	          // in the parent iteration.
	          if (entry) {
	            validateEntry(entry);
	            var indexedIterable = isIterable(entry);
	            return iteratorValue(
	              type,
	              indexedIterable ? entry.get(0) : entry[0],
	              indexedIterable ? entry.get(1) : entry[1],
	              step
	            );
	          }
	        }
	      });
	    };


	  ToIndexedSequence.prototype.cacheResult =
	  ToKeyedSequence.prototype.cacheResult =
	  ToSetSequence.prototype.cacheResult =
	  FromEntriesSequence.prototype.cacheResult =
	    cacheResultThrough;


	  function flipFactory(iterable) {
	    var flipSequence = makeSequence(iterable);
	    flipSequence._iter = iterable;
	    flipSequence.size = iterable.size;
	    flipSequence.flip = function()  {return iterable};
	    flipSequence.reverse = function () {
	      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
	      reversedSequence.flip = function()  {return iterable.reverse()};
	      return reversedSequence;
	    };
	    flipSequence.has = function(key ) {return iterable.includes(key)};
	    flipSequence.includes = function(key ) {return iterable.has(key)};
	    flipSequence.cacheResult = cacheResultThrough;
	    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
	    }
	    flipSequence.__iteratorUncached = function(type, reverse) {
	      if (type === ITERATE_ENTRIES) {
	        var iterator = iterable.__iterator(type, reverse);
	        return new Iterator(function()  {
	          var step = iterator.next();
	          if (!step.done) {
	            var k = step.value[0];
	            step.value[0] = step.value[1];
	            step.value[1] = k;
	          }
	          return step;
	        });
	      }
	      return iterable.__iterator(
	        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
	        reverse
	      );
	    }
	    return flipSequence;
	  }


	  function mapFactory(iterable, mapper, context) {
	    var mappedSequence = makeSequence(iterable);
	    mappedSequence.size = iterable.size;
	    mappedSequence.has = function(key ) {return iterable.has(key)};
	    mappedSequence.get = function(key, notSetValue)  {
	      var v = iterable.get(key, NOT_SET);
	      return v === NOT_SET ?
	        notSetValue :
	        mapper.call(context, v, key, iterable);
	    };
	    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(
	        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
	        reverse
	      );
	    }
	    mappedSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var key = entry[0];
	        return iteratorValue(
	          type,
	          key,
	          mapper.call(context, entry[1], key, iterable),
	          step
	        );
	      });
	    }
	    return mappedSequence;
	  }


	  function reverseFactory(iterable, useKeys) {
	    var reversedSequence = makeSequence(iterable);
	    reversedSequence._iter = iterable;
	    reversedSequence.size = iterable.size;
	    reversedSequence.reverse = function()  {return iterable};
	    if (iterable.flip) {
	      reversedSequence.flip = function () {
	        var flipSequence = flipFactory(iterable);
	        flipSequence.reverse = function()  {return iterable.flip()};
	        return flipSequence;
	      };
	    }
	    reversedSequence.get = function(key, notSetValue)
	      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
	    reversedSequence.has = function(key )
	      {return iterable.has(useKeys ? key : -1 - key)};
	    reversedSequence.includes = function(value ) {return iterable.includes(value)};
	    reversedSequence.cacheResult = cacheResultThrough;
	    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
	    };
	    reversedSequence.__iterator =
	      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
	    return reversedSequence;
	  }


	  function filterFactory(iterable, predicate, context, useKeys) {
	    var filterSequence = makeSequence(iterable);
	    if (useKeys) {
	      filterSequence.has = function(key ) {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
	      };
	      filterSequence.get = function(key, notSetValue)  {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
	          v : notSetValue;
	      };
	    }
	    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      }, reverse);
	      return iterations;
	    };
	    filterSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          var key = entry[0];
	          var value = entry[1];
	          if (predicate.call(context, value, key, iterable)) {
	            return iteratorValue(type, useKeys ? key : iterations++, value, step);
	          }
	        }
	      });
	    }
	    return filterSequence;
	  }


	  function countByFactory(iterable, grouper, context) {
	    var groups = Map().asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        0,
	        function(a ) {return a + 1}
	      );
	    });
	    return groups.asImmutable();
	  }


	  function groupByFactory(iterable, grouper, context) {
	    var isKeyedIter = isKeyed(iterable);
	    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
	      );
	    });
	    var coerce = iterableClass(iterable);
	    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
	  }


	  function sliceFactory(iterable, begin, end, useKeys) {
	    var originalSize = iterable.size;

	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      if (end === Infinity) {
	        end = originalSize;
	      } else {
	        end = end | 0;
	      }
	    }

	    if (wholeSlice(begin, end, originalSize)) {
	      return iterable;
	    }

	    var resolvedBegin = resolveBegin(begin, originalSize);
	    var resolvedEnd = resolveEnd(end, originalSize);

	    // begin or end will be NaN if they were provided as negative numbers and
	    // this iterable's size is unknown. In that case, cache first so there is
	    // a known size and these do not resolve to NaN.
	    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
	      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
	    }

	    // Note: resolvedEnd is undefined when the original sequence's length is
	    // unknown and this slice did not supply an end and should contain all
	    // elements after resolvedBegin.
	    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
	    var resolvedSize = resolvedEnd - resolvedBegin;
	    var sliceSize;
	    if (resolvedSize === resolvedSize) {
	      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
	    }

	    var sliceSeq = makeSequence(iterable);

	    // If iterable.size is undefined, the size of the realized sliceSeq is
	    // unknown at this point unless the number of items to slice is 0
	    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

	    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
	      sliceSeq.get = function (index, notSetValue) {
	        index = wrapIndex(this, index);
	        return index >= 0 && index < sliceSize ?
	          iterable.get(index + resolvedBegin, notSetValue) :
	          notSetValue;
	      }
	    }

	    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (sliceSize === 0) {
	        return 0;
	      }
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var skipped = 0;
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)  {
	        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
	                 iterations !== sliceSize;
	        }
	      });
	      return iterations;
	    };

	    sliceSeq.__iteratorUncached = function(type, reverse) {
	      if (sliceSize !== 0 && reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      // Don't bother instantiating parent iterator if taking 0.
	      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
	      var skipped = 0;
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (skipped++ < resolvedBegin) {
	          iterator.next();
	        }
	        if (++iterations > sliceSize) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (useKeys || type === ITERATE_VALUES) {
	          return step;
	        } else if (type === ITERATE_KEYS) {
	          return iteratorValue(type, iterations - 1, undefined, step);
	        } else {
	          return iteratorValue(type, iterations - 1, step.value[1], step);
	        }
	      });
	    }

	    return sliceSeq;
	  }


	  function takeWhileFactory(iterable, predicate, context) {
	    var takeSequence = makeSequence(iterable);
	    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)
	        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
	      );
	      return iterations;
	    };
	    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterating = true;
	      return new Iterator(function()  {
	        if (!iterating) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var k = entry[0];
	        var v = entry[1];
	        if (!predicate.call(context, v, k, this$0)) {
	          iterating = false;
	          return iteratorDone();
	        }
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return takeSequence;
	  }


	  function skipWhileFactory(iterable, predicate, context, useKeys) {
	    var skipSequence = makeSequence(iterable);
	    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      });
	      return iterations;
	    };
	    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var skipping = true;
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step, k, v;
	        do {
	          step = iterator.next();
	          if (step.done) {
	            if (useKeys || type === ITERATE_VALUES) {
	              return step;
	            } else if (type === ITERATE_KEYS) {
	              return iteratorValue(type, iterations++, undefined, step);
	            } else {
	              return iteratorValue(type, iterations++, step.value[1], step);
	            }
	          }
	          var entry = step.value;
	          k = entry[0];
	          v = entry[1];
	          skipping && (skipping = predicate.call(context, v, k, this$0));
	        } while (skipping);
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return skipSequence;
	  }


	  function concatFactory(iterable, values) {
	    var isKeyedIterable = isKeyed(iterable);
	    var iters = [iterable].concat(values).map(function(v ) {
	      if (!isIterable(v)) {
	        v = isKeyedIterable ?
	          keyedSeqFromValue(v) :
	          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
	      } else if (isKeyedIterable) {
	        v = KeyedIterable(v);
	      }
	      return v;
	    }).filter(function(v ) {return v.size !== 0});

	    if (iters.length === 0) {
	      return iterable;
	    }

	    if (iters.length === 1) {
	      var singleton = iters[0];
	      if (singleton === iterable ||
	          isKeyedIterable && isKeyed(singleton) ||
	          isIndexed(iterable) && isIndexed(singleton)) {
	        return singleton;
	      }
	    }

	    var concatSeq = new ArraySeq(iters);
	    if (isKeyedIterable) {
	      concatSeq = concatSeq.toKeyedSeq();
	    } else if (!isIndexed(iterable)) {
	      concatSeq = concatSeq.toSetSeq();
	    }
	    concatSeq = concatSeq.flatten(true);
	    concatSeq.size = iters.reduce(
	      function(sum, seq)  {
	        if (sum !== undefined) {
	          var size = seq.size;
	          if (size !== undefined) {
	            return sum + size;
	          }
	        }
	      },
	      0
	    );
	    return concatSeq;
	  }


	  function flattenFactory(iterable, depth, useKeys) {
	    var flatSequence = makeSequence(iterable);
	    flatSequence.__iterateUncached = function(fn, reverse) {
	      var iterations = 0;
	      var stopped = false;
	      function flatDeep(iter, currentDepth) {var this$0 = this;
	        iter.__iterate(function(v, k)  {
	          if ((!depth || currentDepth < depth) && isIterable(v)) {
	            flatDeep(v, currentDepth + 1);
	          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
	            stopped = true;
	          }
	          return !stopped;
	        }, reverse);
	      }
	      flatDeep(iterable, 0);
	      return iterations;
	    }
	    flatSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(type, reverse);
	      var stack = [];
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (iterator) {
	          var step = iterator.next();
	          if (step.done !== false) {
	            iterator = stack.pop();
	            continue;
	          }
	          var v = step.value;
	          if (type === ITERATE_ENTRIES) {
	            v = v[1];
	          }
	          if ((!depth || stack.length < depth) && isIterable(v)) {
	            stack.push(iterator);
	            iterator = v.__iterator(type, reverse);
	          } else {
	            return useKeys ? step : iteratorValue(type, iterations++, v, step);
	          }
	        }
	        return iteratorDone();
	      });
	    }
	    return flatSequence;
	  }


	  function flatMapFactory(iterable, mapper, context) {
	    var coerce = iterableClass(iterable);
	    return iterable.toSeq().map(
	      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
	    ).flatten(true);
	  }


	  function interposeFactory(iterable, separator) {
	    var interposedSequence = makeSequence(iterable);
	    interposedSequence.size = iterable.size && iterable.size * 2 -1;
	    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)
	        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
	        fn(v, iterations++, this$0) !== false},
	        reverse
	      );
	      return iterations;
	    };
	    interposedSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      var step;
	      return new Iterator(function()  {
	        if (!step || iterations % 2) {
	          step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	        }
	        return iterations % 2 ?
	          iteratorValue(type, iterations++, separator) :
	          iteratorValue(type, iterations++, step.value, step);
	      });
	    };
	    return interposedSequence;
	  }


	  function sortFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    var isKeyedIterable = isKeyed(iterable);
	    var index = 0;
	    var entries = iterable.toSeq().map(
	      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
	    ).toArray();
	    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
	      isKeyedIterable ?
	      function(v, i)  { entries[i].length = 2; } :
	      function(v, i)  { entries[i] = v[1]; }
	    );
	    return isKeyedIterable ? KeyedSeq(entries) :
	      isIndexed(iterable) ? IndexedSeq(entries) :
	      SetSeq(entries);
	  }


	  function maxFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    if (mapper) {
	      var entry = iterable.toSeq()
	        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
	        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
	      return entry && entry[0];
	    } else {
	      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
	    }
	  }

	  function maxCompare(comparator, a, b) {
	    var comp = comparator(b, a);
	    // b is considered the new max if the comparator declares them equal, but
	    // they are not equal and b is in fact a nullish value.
	    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
	  }


	  function zipWithFactory(keyIter, zipper, iters) {
	    var zipSequence = makeSequence(keyIter);
	    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
	    // Note: this a generic base implementation of __iterate in terms of
	    // __iterator which may be more generically useful in the future.
	    zipSequence.__iterate = function(fn, reverse) {
	      /* generic:
	      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        iterations++;
	        if (fn(step.value[1], step.value[0], this) === false) {
	          break;
	        }
	      }
	      return iterations;
	      */
	      // indexed:
	      var iterator = this.__iterator(ITERATE_VALUES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        if (fn(step.value, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	    zipSequence.__iteratorUncached = function(type, reverse) {
	      var iterators = iters.map(function(i )
	        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
	      );
	      var iterations = 0;
	      var isDone = false;
	      return new Iterator(function()  {
	        var steps;
	        if (!isDone) {
	          steps = iterators.map(function(i ) {return i.next()});
	          isDone = steps.some(function(s ) {return s.done});
	        }
	        if (isDone) {
	          return iteratorDone();
	        }
	        return iteratorValue(
	          type,
	          iterations++,
	          zipper.apply(null, steps.map(function(s ) {return s.value}))
	        );
	      });
	    };
	    return zipSequence
	  }


	  // #pragma Helper Functions

	  function reify(iter, seq) {
	    return isSeq(iter) ? seq : iter.constructor(seq);
	  }

	  function validateEntry(entry) {
	    if (entry !== Object(entry)) {
	      throw new TypeError('Expected [K, V] tuple: ' + entry);
	    }
	  }

	  function resolveSize(iter) {
	    assertNotInfinite(iter.size);
	    return ensureSize(iter);
	  }

	  function iterableClass(iterable) {
	    return isKeyed(iterable) ? KeyedIterable :
	      isIndexed(iterable) ? IndexedIterable :
	      SetIterable;
	  }

	  function makeSequence(iterable) {
	    return Object.create(
	      (
	        isKeyed(iterable) ? KeyedSeq :
	        isIndexed(iterable) ? IndexedSeq :
	        SetSeq
	      ).prototype
	    );
	  }

	  function cacheResultThrough() {
	    if (this._iter.cacheResult) {
	      this._iter.cacheResult();
	      this.size = this._iter.size;
	      return this;
	    } else {
	      return Seq.prototype.cacheResult.call(this);
	    }
	  }

	  function defaultComparator(a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }

	  function forceIterator(keyPath) {
	    var iter = getIterator(keyPath);
	    if (!iter) {
	      // Array might not be iterable in this environment, so we need a fallback
	      // to our wrapped type.
	      if (!isArrayLike(keyPath)) {
	        throw new TypeError('Expected iterable or array-like: ' + keyPath);
	      }
	      iter = getIterator(Iterable(keyPath));
	    }
	    return iter;
	  }

	  createClass(Record, KeyedCollection);

	    function Record(defaultValues, name) {
	      var hasInitialized;

	      var RecordType = function Record(values) {
	        if (values instanceof RecordType) {
	          return values;
	        }
	        if (!(this instanceof RecordType)) {
	          return new RecordType(values);
	        }
	        if (!hasInitialized) {
	          hasInitialized = true;
	          var keys = Object.keys(defaultValues);
	          setProps(RecordTypePrototype, keys);
	          RecordTypePrototype.size = keys.length;
	          RecordTypePrototype._name = name;
	          RecordTypePrototype._keys = keys;
	          RecordTypePrototype._defaultValues = defaultValues;
	        }
	        this._map = Map(values);
	      };

	      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
	      RecordTypePrototype.constructor = RecordType;

	      return RecordType;
	    }

	    Record.prototype.toString = function() {
	      return this.__toString(recordName(this) + ' {', '}');
	    };

	    // @pragma Access

	    Record.prototype.has = function(k) {
	      return this._defaultValues.hasOwnProperty(k);
	    };

	    Record.prototype.get = function(k, notSetValue) {
	      if (!this.has(k)) {
	        return notSetValue;
	      }
	      var defaultVal = this._defaultValues[k];
	      return this._map ? this._map.get(k, defaultVal) : defaultVal;
	    };

	    // @pragma Modification

	    Record.prototype.clear = function() {
	      if (this.__ownerID) {
	        this._map && this._map.clear();
	        return this;
	      }
	      var RecordType = this.constructor;
	      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
	    };

	    Record.prototype.set = function(k, v) {
	      if (!this.has(k)) {
	        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
	      }
	      if (this._map && !this._map.has(k)) {
	        var defaultVal = this._defaultValues[k];
	        if (v === defaultVal) {
	          return this;
	        }
	      }
	      var newMap = this._map && this._map.set(k, v);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.remove = function(k) {
	      if (!this.has(k)) {
	        return this;
	      }
	      var newMap = this._map && this._map.remove(k);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
	    };

	    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
	    };

	    Record.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map && this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return makeRecord(this, newMap, ownerID);
	    };


	  var RecordPrototype = Record.prototype;
	  RecordPrototype[DELETE] = RecordPrototype.remove;
	  RecordPrototype.deleteIn =
	  RecordPrototype.removeIn = MapPrototype.removeIn;
	  RecordPrototype.merge = MapPrototype.merge;
	  RecordPrototype.mergeWith = MapPrototype.mergeWith;
	  RecordPrototype.mergeIn = MapPrototype.mergeIn;
	  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
	  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
	  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  RecordPrototype.setIn = MapPrototype.setIn;
	  RecordPrototype.update = MapPrototype.update;
	  RecordPrototype.updateIn = MapPrototype.updateIn;
	  RecordPrototype.withMutations = MapPrototype.withMutations;
	  RecordPrototype.asMutable = MapPrototype.asMutable;
	  RecordPrototype.asImmutable = MapPrototype.asImmutable;


	  function makeRecord(likeRecord, map, ownerID) {
	    var record = Object.create(Object.getPrototypeOf(likeRecord));
	    record._map = map;
	    record.__ownerID = ownerID;
	    return record;
	  }

	  function recordName(record) {
	    return record._name || record.constructor.name || 'Record';
	  }

	  function setProps(prototype, names) {
	    try {
	      names.forEach(setProp.bind(undefined, prototype));
	    } catch (error) {
	      // Object.defineProperty failed. Probably IE8.
	    }
	  }

	  function setProp(prototype, name) {
	    Object.defineProperty(prototype, name, {
	      get: function() {
	        return this.get(name);
	      },
	      set: function(value) {
	        invariant(this.__ownerID, 'Cannot set on an immutable record.');
	        this.set(name, value);
	      }
	    });
	  }

	  createClass(Set, SetCollection);

	    // @pragma Construction

	    function Set(value) {
	      return value === null || value === undefined ? emptySet() :
	        isSet(value) && !isOrdered(value) ? value :
	        emptySet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    Set.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Set.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    Set.prototype.toString = function() {
	      return this.__toString('Set {', '}');
	    };

	    // @pragma Access

	    Set.prototype.has = function(value) {
	      return this._map.has(value);
	    };

	    // @pragma Modification

	    Set.prototype.add = function(value) {
	      return updateSet(this, this._map.set(value, true));
	    };

	    Set.prototype.remove = function(value) {
	      return updateSet(this, this._map.remove(value));
	    };

	    Set.prototype.clear = function() {
	      return updateSet(this, this._map.clear());
	    };

	    // @pragma Composition

	    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
	      iters = iters.filter(function(x ) {return x.size !== 0});
	      if (iters.length === 0) {
	        return this;
	      }
	      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
	        return this.constructor(iters[0]);
	      }
	      return this.withMutations(function(set ) {
	        for (var ii = 0; ii < iters.length; ii++) {
	          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
	        }
	      });
	    };

	    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (!iters.every(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (iters.some(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.merge = function() {
	      return this.union.apply(this, arguments);
	    };

	    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return this.union.apply(this, iters);
	    };

	    Set.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator));
	    };

	    Set.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator, mapper));
	    };

	    Set.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
	    };

	    Set.prototype.__iterator = function(type, reverse) {
	      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
	    };

	    Set.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return this.__make(newMap, ownerID);
	    };


	  function isSet(maybeSet) {
	    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
	  }

	  Set.isSet = isSet;

	  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

	  var SetPrototype = Set.prototype;
	  SetPrototype[IS_SET_SENTINEL] = true;
	  SetPrototype[DELETE] = SetPrototype.remove;
	  SetPrototype.mergeDeep = SetPrototype.merge;
	  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
	  SetPrototype.withMutations = MapPrototype.withMutations;
	  SetPrototype.asMutable = MapPrototype.asMutable;
	  SetPrototype.asImmutable = MapPrototype.asImmutable;

	  SetPrototype.__empty = emptySet;
	  SetPrototype.__make = makeSet;

	  function updateSet(set, newMap) {
	    if (set.__ownerID) {
	      set.size = newMap.size;
	      set._map = newMap;
	      return set;
	    }
	    return newMap === set._map ? set :
	      newMap.size === 0 ? set.__empty() :
	      set.__make(newMap);
	  }

	  function makeSet(map, ownerID) {
	    var set = Object.create(SetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_SET;
	  function emptySet() {
	    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
	  }

	  createClass(OrderedSet, Set);

	    // @pragma Construction

	    function OrderedSet(value) {
	      return value === null || value === undefined ? emptyOrderedSet() :
	        isOrderedSet(value) ? value :
	        emptyOrderedSet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    OrderedSet.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedSet.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    OrderedSet.prototype.toString = function() {
	      return this.__toString('OrderedSet {', '}');
	    };


	  function isOrderedSet(maybeOrderedSet) {
	    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
	  }

	  OrderedSet.isOrderedSet = isOrderedSet;

	  var OrderedSetPrototype = OrderedSet.prototype;
	  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

	  OrderedSetPrototype.__empty = emptyOrderedSet;
	  OrderedSetPrototype.__make = makeOrderedSet;

	  function makeOrderedSet(map, ownerID) {
	    var set = Object.create(OrderedSetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_ORDERED_SET;
	  function emptyOrderedSet() {
	    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
	  }

	  createClass(Stack, IndexedCollection);

	    // @pragma Construction

	    function Stack(value) {
	      return value === null || value === undefined ? emptyStack() :
	        isStack(value) ? value :
	        emptyStack().unshiftAll(value);
	    }

	    Stack.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Stack.prototype.toString = function() {
	      return this.__toString('Stack [', ']');
	    };

	    // @pragma Access

	    Stack.prototype.get = function(index, notSetValue) {
	      var head = this._head;
	      index = wrapIndex(this, index);
	      while (head && index--) {
	        head = head.next;
	      }
	      return head ? head.value : notSetValue;
	    };

	    Stack.prototype.peek = function() {
	      return this._head && this._head.value;
	    };

	    // @pragma Modification

	    Stack.prototype.push = function(/*...values*/) {
	      if (arguments.length === 0) {
	        return this;
	      }
	      var newSize = this.size + arguments.length;
	      var head = this._head;
	      for (var ii = arguments.length - 1; ii >= 0; ii--) {
	        head = {
	          value: arguments[ii],
	          next: head
	        };
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pushAll = function(iter) {
	      iter = IndexedIterable(iter);
	      if (iter.size === 0) {
	        return this;
	      }
	      assertNotInfinite(iter.size);
	      var newSize = this.size;
	      var head = this._head;
	      iter.reverse().forEach(function(value ) {
	        newSize++;
	        head = {
	          value: value,
	          next: head
	        };
	      });
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pop = function() {
	      return this.slice(1);
	    };

	    Stack.prototype.unshift = function(/*...values*/) {
	      return this.push.apply(this, arguments);
	    };

	    Stack.prototype.unshiftAll = function(iter) {
	      return this.pushAll(iter);
	    };

	    Stack.prototype.shift = function() {
	      return this.pop.apply(this, arguments);
	    };

	    Stack.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._head = undefined;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyStack();
	    };

	    Stack.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      var resolvedBegin = resolveBegin(begin, this.size);
	      var resolvedEnd = resolveEnd(end, this.size);
	      if (resolvedEnd !== this.size) {
	        // super.slice(begin, end);
	        return IndexedCollection.prototype.slice.call(this, begin, end);
	      }
	      var newSize = this.size - resolvedBegin;
	      var head = this._head;
	      while (resolvedBegin--) {
	        head = head.next;
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    // @pragma Mutability

	    Stack.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeStack(this.size, this._head, ownerID, this.__hash);
	    };

	    // @pragma Iteration

	    Stack.prototype.__iterate = function(fn, reverse) {
	      if (reverse) {
	        return this.reverse().__iterate(fn);
	      }
	      var iterations = 0;
	      var node = this._head;
	      while (node) {
	        if (fn(node.value, iterations++, this) === false) {
	          break;
	        }
	        node = node.next;
	      }
	      return iterations;
	    };

	    Stack.prototype.__iterator = function(type, reverse) {
	      if (reverse) {
	        return this.reverse().__iterator(type);
	      }
	      var iterations = 0;
	      var node = this._head;
	      return new Iterator(function()  {
	        if (node) {
	          var value = node.value;
	          node = node.next;
	          return iteratorValue(type, iterations++, value);
	        }
	        return iteratorDone();
	      });
	    };


	  function isStack(maybeStack) {
	    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
	  }

	  Stack.isStack = isStack;

	  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

	  var StackPrototype = Stack.prototype;
	  StackPrototype[IS_STACK_SENTINEL] = true;
	  StackPrototype.withMutations = MapPrototype.withMutations;
	  StackPrototype.asMutable = MapPrototype.asMutable;
	  StackPrototype.asImmutable = MapPrototype.asImmutable;
	  StackPrototype.wasAltered = MapPrototype.wasAltered;


	  function makeStack(size, head, ownerID, hash) {
	    var map = Object.create(StackPrototype);
	    map.size = size;
	    map._head = head;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_STACK;
	  function emptyStack() {
	    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
	  }

	  /**
	   * Contributes additional methods to a constructor
	   */
	  function mixin(ctor, methods) {
	    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
	    Object.keys(methods).forEach(keyCopier);
	    Object.getOwnPropertySymbols &&
	      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
	    return ctor;
	  }

	  Iterable.Iterator = Iterator;

	  mixin(Iterable, {

	    // ### Conversion to other types

	    toArray: function() {
	      assertNotInfinite(this.size);
	      var array = new Array(this.size || 0);
	      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
	      return array;
	    },

	    toIndexedSeq: function() {
	      return new ToIndexedSequence(this);
	    },

	    toJS: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
	      ).__toJS();
	    },

	    toJSON: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
	      ).__toJS();
	    },

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, true);
	    },

	    toMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Map(this.toKeyedSeq());
	    },

	    toObject: function() {
	      assertNotInfinite(this.size);
	      var object = {};
	      this.__iterate(function(v, k)  { object[k] = v; });
	      return object;
	    },

	    toOrderedMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedMap(this.toKeyedSeq());
	    },

	    toOrderedSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Set(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSetSeq: function() {
	      return new ToSetSequence(this);
	    },

	    toSeq: function() {
	      return isIndexed(this) ? this.toIndexedSeq() :
	        isKeyed(this) ? this.toKeyedSeq() :
	        this.toSetSeq();
	    },

	    toStack: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Stack(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toList: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return List(isKeyed(this) ? this.valueSeq() : this);
	    },


	    // ### Common JavaScript methods and properties

	    toString: function() {
	      return '[Iterable]';
	    },

	    __toString: function(head, tail) {
	      if (this.size === 0) {
	        return head + tail;
	      }
	      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    concat: function() {var values = SLICE$0.call(arguments, 0);
	      return reify(this, concatFactory(this, values));
	    },

	    includes: function(searchValue) {
	      return this.some(function(value ) {return is(value, searchValue)});
	    },

	    entries: function() {
	      return this.__iterator(ITERATE_ENTRIES);
	    },

	    every: function(predicate, context) {
	      assertNotInfinite(this.size);
	      var returnValue = true;
	      this.__iterate(function(v, k, c)  {
	        if (!predicate.call(context, v, k, c)) {
	          returnValue = false;
	          return false;
	        }
	      });
	      return returnValue;
	    },

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, true));
	    },

	    find: function(predicate, context, notSetValue) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[1] : notSetValue;
	    },

	    forEach: function(sideEffect, context) {
	      assertNotInfinite(this.size);
	      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
	    },

	    join: function(separator) {
	      assertNotInfinite(this.size);
	      separator = separator !== undefined ? '' + separator : ',';
	      var joined = '';
	      var isFirst = true;
	      this.__iterate(function(v ) {
	        isFirst ? (isFirst = false) : (joined += separator);
	        joined += v !== null && v !== undefined ? v.toString() : '';
	      });
	      return joined;
	    },

	    keys: function() {
	      return this.__iterator(ITERATE_KEYS);
	    },

	    map: function(mapper, context) {
	      return reify(this, mapFactory(this, mapper, context));
	    },

	    reduce: function(reducer, initialReduction, context) {
	      assertNotInfinite(this.size);
	      var reduction;
	      var useFirst;
	      if (arguments.length < 2) {
	        useFirst = true;
	      } else {
	        reduction = initialReduction;
	      }
	      this.__iterate(function(v, k, c)  {
	        if (useFirst) {
	          useFirst = false;
	          reduction = v;
	        } else {
	          reduction = reducer.call(context, reduction, v, k, c);
	        }
	      });
	      return reduction;
	    },

	    reduceRight: function(reducer, initialReduction, context) {
	      var reversed = this.toKeyedSeq().reverse();
	      return reversed.reduce.apply(reversed, arguments);
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, true));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, true));
	    },

	    some: function(predicate, context) {
	      return !this.every(not(predicate), context);
	    },

	    sort: function(comparator) {
	      return reify(this, sortFactory(this, comparator));
	    },

	    values: function() {
	      return this.__iterator(ITERATE_VALUES);
	    },


	    // ### More sequential methods

	    butLast: function() {
	      return this.slice(0, -1);
	    },

	    isEmpty: function() {
	      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
	    },

	    count: function(predicate, context) {
	      return ensureSize(
	        predicate ? this.toSeq().filter(predicate, context) : this
	      );
	    },

	    countBy: function(grouper, context) {
	      return countByFactory(this, grouper, context);
	    },

	    equals: function(other) {
	      return deepEqual(this, other);
	    },

	    entrySeq: function() {
	      var iterable = this;
	      if (iterable._cache) {
	        // We cache as an entries array, so we can just return the cache!
	        return new ArraySeq(iterable._cache);
	      }
	      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
	      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
	      return entriesSequence;
	    },

	    filterNot: function(predicate, context) {
	      return this.filter(not(predicate), context);
	    },

	    findEntry: function(predicate, context, notSetValue) {
	      var found = notSetValue;
	      this.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          found = [k, v];
	          return false;
	        }
	      });
	      return found;
	    },

	    findKey: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry && entry[0];
	    },

	    findLast: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
	    },

	    findLastEntry: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
	    },

	    findLastKey: function(predicate, context) {
	      return this.toKeyedSeq().reverse().findKey(predicate, context);
	    },

	    first: function() {
	      return this.find(returnTrue);
	    },

	    flatMap: function(mapper, context) {
	      return reify(this, flatMapFactory(this, mapper, context));
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, true));
	    },

	    fromEntrySeq: function() {
	      return new FromEntriesSequence(this);
	    },

	    get: function(searchKey, notSetValue) {
	      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
	    },

	    getIn: function(searchKeyPath, notSetValue) {
	      var nested = this;
	      // Note: in an ES6 environment, we would prefer:
	      // for (var key of searchKeyPath) {
	      var iter = forceIterator(searchKeyPath);
	      var step;
	      while (!(step = iter.next()).done) {
	        var key = step.value;
	        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
	        if (nested === NOT_SET) {
	          return notSetValue;
	        }
	      }
	      return nested;
	    },

	    groupBy: function(grouper, context) {
	      return groupByFactory(this, grouper, context);
	    },

	    has: function(searchKey) {
	      return this.get(searchKey, NOT_SET) !== NOT_SET;
	    },

	    hasIn: function(searchKeyPath) {
	      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
	    },

	    isSubset: function(iter) {
	      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
	      return this.every(function(value ) {return iter.includes(value)});
	    },

	    isSuperset: function(iter) {
	      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
	      return iter.isSubset(this);
	    },

	    keyOf: function(searchValue) {
	      return this.findKey(function(value ) {return is(value, searchValue)});
	    },

	    keySeq: function() {
	      return this.toSeq().map(keyMapper).toIndexedSeq();
	    },

	    last: function() {
	      return this.toSeq().reverse().first();
	    },

	    lastKeyOf: function(searchValue) {
	      return this.toKeyedSeq().reverse().keyOf(searchValue);
	    },

	    max: function(comparator) {
	      return maxFactory(this, comparator);
	    },

	    maxBy: function(mapper, comparator) {
	      return maxFactory(this, comparator, mapper);
	    },

	    min: function(comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
	    },

	    minBy: function(mapper, comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
	    },

	    rest: function() {
	      return this.slice(1);
	    },

	    skip: function(amount) {
	      return this.slice(Math.max(0, amount));
	    },

	    skipLast: function(amount) {
	      return reify(this, this.toSeq().reverse().skip(amount).reverse());
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, true));
	    },

	    skipUntil: function(predicate, context) {
	      return this.skipWhile(not(predicate), context);
	    },

	    sortBy: function(mapper, comparator) {
	      return reify(this, sortFactory(this, comparator, mapper));
	    },

	    take: function(amount) {
	      return this.slice(0, Math.max(0, amount));
	    },

	    takeLast: function(amount) {
	      return reify(this, this.toSeq().reverse().take(amount).reverse());
	    },

	    takeWhile: function(predicate, context) {
	      return reify(this, takeWhileFactory(this, predicate, context));
	    },

	    takeUntil: function(predicate, context) {
	      return this.takeWhile(not(predicate), context);
	    },

	    valueSeq: function() {
	      return this.toIndexedSeq();
	    },


	    // ### Hashable Object

	    hashCode: function() {
	      return this.__hash || (this.__hash = hashIterable(this));
	    }


	    // ### Internal

	    // abstract __iterate(fn, reverse)

	    // abstract __iterator(type, reverse)
	  });

	  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  var IterablePrototype = Iterable.prototype;
	  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
	  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
	  IterablePrototype.__toJS = IterablePrototype.toArray;
	  IterablePrototype.__toStringMapper = quoteString;
	  IterablePrototype.inspect =
	  IterablePrototype.toSource = function() { return this.toString(); };
	  IterablePrototype.chain = IterablePrototype.flatMap;
	  IterablePrototype.contains = IterablePrototype.includes;

	  mixin(KeyedIterable, {

	    // ### More sequential methods

	    flip: function() {
	      return reify(this, flipFactory(this));
	    },

	    mapEntries: function(mapper, context) {var this$0 = this;
	      var iterations = 0;
	      return reify(this,
	        this.toSeq().map(
	          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
	        ).fromEntrySeq()
	      );
	    },

	    mapKeys: function(mapper, context) {var this$0 = this;
	      return reify(this,
	        this.toSeq().flip().map(
	          function(k, v)  {return mapper.call(context, k, v, this$0)}
	        ).flip()
	      );
	    }

	  });

	  var KeyedIterablePrototype = KeyedIterable.prototype;
	  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
	  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
	  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
	  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};



	  mixin(IndexedIterable, {

	    // ### Conversion to other types

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, false);
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, false));
	    },

	    findIndex: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    indexOf: function(searchValue) {
	      var key = this.keyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    lastIndexOf: function(searchValue) {
	      var key = this.lastKeyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, false));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, false));
	    },

	    splice: function(index, removeNum /*, ...values*/) {
	      var numArgs = arguments.length;
	      removeNum = Math.max(removeNum | 0, 0);
	      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
	        return this;
	      }
	      // If index is negative, it should resolve relative to the size of the
	      // collection. However size may be expensive to compute if not cached, so
	      // only call count() if the number is in fact negative.
	      index = resolveBegin(index, index < 0 ? this.count() : this.size);
	      var spliced = this.slice(0, index);
	      return reify(
	        this,
	        numArgs === 1 ?
	          spliced :
	          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
	      );
	    },


	    // ### More collection methods

	    findLastIndex: function(predicate, context) {
	      var entry = this.findLastEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    first: function() {
	      return this.get(0);
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, false));
	    },

	    get: function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      return (index < 0 || (this.size === Infinity ||
	          (this.size !== undefined && index > this.size))) ?
	        notSetValue :
	        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
	    },

	    has: function(index) {
	      index = wrapIndex(this, index);
	      return index >= 0 && (this.size !== undefined ?
	        this.size === Infinity || index < this.size :
	        this.indexOf(index) !== -1
	      );
	    },

	    interpose: function(separator) {
	      return reify(this, interposeFactory(this, separator));
	    },

	    interleave: function(/*...iterables*/) {
	      var iterables = [this].concat(arrCopy(arguments));
	      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
	      var interleaved = zipped.flatten(true);
	      if (zipped.size) {
	        interleaved.size = zipped.size * iterables.length;
	      }
	      return reify(this, interleaved);
	    },

	    keySeq: function() {
	      return Range(0, this.size);
	    },

	    last: function() {
	      return this.get(-1);
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, false));
	    },

	    zip: function(/*, ...iterables */) {
	      var iterables = [this].concat(arrCopy(arguments));
	      return reify(this, zipWithFactory(this, defaultZipper, iterables));
	    },

	    zipWith: function(zipper/*, ...iterables */) {
	      var iterables = arrCopy(arguments);
	      iterables[0] = this;
	      return reify(this, zipWithFactory(this, zipper, iterables));
	    }

	  });

	  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
	  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



	  mixin(SetIterable, {

	    // ### ES6 Collection methods (ES6 Array and Map)

	    get: function(value, notSetValue) {
	      return this.has(value) ? value : notSetValue;
	    },

	    includes: function(value) {
	      return this.has(value);
	    },


	    // ### More sequential methods

	    keySeq: function() {
	      return this.valueSeq();
	    }

	  });

	  SetIterable.prototype.has = IterablePrototype.includes;
	  SetIterable.prototype.contains = SetIterable.prototype.includes;


	  // Mixin subclasses

	  mixin(KeyedSeq, KeyedIterable.prototype);
	  mixin(IndexedSeq, IndexedIterable.prototype);
	  mixin(SetSeq, SetIterable.prototype);

	  mixin(KeyedCollection, KeyedIterable.prototype);
	  mixin(IndexedCollection, IndexedIterable.prototype);
	  mixin(SetCollection, SetIterable.prototype);


	  // #pragma Helper functions

	  function keyMapper(v, k) {
	    return k;
	  }

	  function entryMapper(v, k) {
	    return [k, v];
	  }

	  function not(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    }
	  }

	  function neg(predicate) {
	    return function() {
	      return -predicate.apply(this, arguments);
	    }
	  }

	  function quoteString(value) {
	    return typeof value === 'string' ? JSON.stringify(value) : String(value);
	  }

	  function defaultZipper() {
	    return arrCopy(arguments);
	  }

	  function defaultNegComparator(a, b) {
	    return a < b ? 1 : a > b ? -1 : 0;
	  }

	  function hashIterable(iterable) {
	    if (iterable.size === Infinity) {
	      return 0;
	    }
	    var ordered = isOrdered(iterable);
	    var keyed = isKeyed(iterable);
	    var h = ordered ? 1 : 0;
	    var size = iterable.__iterate(
	      keyed ?
	        ordered ?
	          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
	          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
	        ordered ?
	          function(v ) { h = 31 * h + hash(v) | 0; } :
	          function(v ) { h = h + hash(v) | 0; }
	    );
	    return murmurHashOfSize(size, h);
	  }

	  function murmurHashOfSize(size, h) {
	    h = imul(h, 0xCC9E2D51);
	    h = imul(h << 15 | h >>> -15, 0x1B873593);
	    h = imul(h << 13 | h >>> -13, 5);
	    h = (h + 0xE6546B64 | 0) ^ size;
	    h = imul(h ^ h >>> 16, 0x85EBCA6B);
	    h = imul(h ^ h >>> 13, 0xC2B2AE35);
	    h = smi(h ^ h >>> 16);
	    return h;
	  }

	  function hashMerge(a, b) {
	    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
	  }

	  var Immutable = {

	    Iterable: Iterable,

	    Seq: Seq,
	    Collection: Collection,
	    Map: Map,
	    OrderedMap: OrderedMap,
	    List: List,
	    Stack: Stack,
	    Set: Set,
	    OrderedSet: OrderedSet,

	    Record: Record,
	    Range: Range,
	    Repeat: Repeat,

	    is: is,
	    fromJS: fromJS

	  };

	  return Immutable;

	}));

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(16)
	  , core      = __webpack_require__(94)
	  , hide      = __webpack_require__(61)
	  , redefine  = __webpack_require__(62)
	  , ctx       = __webpack_require__(95)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var Reflux = __webpack_require__(1810);

	Reflux.connect = __webpack_require__(1812);

	Reflux.connectFilter = __webpack_require__(1813);

	Reflux.ListenerMixin = __webpack_require__(488);

	Reflux.listenTo = __webpack_require__(1814);

	Reflux.listenToMany = __webpack_require__(1815);

	module.exports = Reflux;


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ViewStateActions = _reflux2.default.createActions(['set', 'clear', 'scrollIntoView', 'openPopup', 'closePopup', 'changeSelected', 'switchPopoverState', 'modal']);

	exports.default = ViewStateActions;

/***/ },
/* 6 */
/***/ function(module, exports) {

	/**
	 * The default argument placeholder value for methods.
	 *
	 * @type {Object}
	 */
	module.exports = {};


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var baseConvert = __webpack_require__(1545),
	    util = __webpack_require__(1547);

	/**
	 * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
	 * version with conversion `options` applied. If `name` is an object its methods
	 * will be converted.
	 *
	 * @param {string} name The name of the function to wrap.
	 * @param {Function} [func] The function to wrap.
	 * @param {Object} [options] The options object. See `baseConvert` for more details.
	 * @returns {Function|Object} Returns the converted function or object.
	 */
	function convert(name, func, options) {
	  return baseConvert(util, name, func, options);
	}

	module.exports = convert;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.SUBSCRIPTION_INACTIVE = exports.SUBSCRIPTION_PASTDUE = exports.SUBSCRIPTION_CANCELED = exports.SUBSCRIPTION_ACTIVE = undefined;

	var _has2 = __webpack_require__(1555);

	var _has3 = _interopRequireDefault(_has2);

	var _partial2 = __webpack_require__(1561);

	var _partial3 = _interopRequireDefault(_partial2);

	var _every2 = __webpack_require__(1551);

	var _every3 = _interopRequireDefault(_every2);

	var _getOr2 = __webpack_require__(53);

	var _getOr3 = _interopRequireDefault(_getOr2);

	var _get2 = __webpack_require__(40);

	var _get3 = _interopRequireDefault(_get2);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _AuthActions = __webpack_require__(35);

	var _AuthActions2 = _interopRequireDefault(_AuthActions);

	var _PaymentActions = __webpack_require__(91);

	var _PaymentActions2 = _interopRequireDefault(_PaymentActions);

	var _AnalyticsActions = __webpack_require__(14);

	var _AnalyticsActions2 = _interopRequireDefault(_AnalyticsActions);

	var _StudentActions = __webpack_require__(110);

	var _StudentActions2 = _interopRequireDefault(_StudentActions);

	var _ResumeActions = __webpack_require__(18);

	var _ResumeActions2 = _interopRequireDefault(_ResumeActions);

	var _plan = __webpack_require__(34);

	var _plan2 = _interopRequireDefault(_plan);

	var _StoreService = __webpack_require__(135);

	var _StoreService2 = _interopRequireDefault(_StoreService);

	var _NotificationActions = __webpack_require__(22);

	var _NotificationActions2 = _interopRequireDefault(_NotificationActions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var TOKEN_KEY = 'jwt';
	var REQUIRED_ONBOARDING_KEYS = ['role', 'industry', 'experience', 'isFreelancer'];

	var SUBSCRIPTION_ACTIVE = exports.SUBSCRIPTION_ACTIVE = 'Active';
	var SUBSCRIPTION_CANCELED = exports.SUBSCRIPTION_CANCELED = 'Canceled';
	var SUBSCRIPTION_PASTDUE = exports.SUBSCRIPTION_PASTDUE = 'Past Due';
	var SUBSCRIPTION_INACTIVE = exports.SUBSCRIPTION_INACTIVE = 'Inactive';

	var AuthStore = _reflux2.default.createStore({
		listenables: [_AuthActions2.default, _PaymentActions2.default],

		init: function init() {
			this.user = null;
			this.onboardingData = {};
			this.jwt = _StoreService2.default.getItem(TOKEN_KEY);

			if (!this.jwt) {
				this.user = false;
			}
		},

		getInitialState: function getInitialState() {
			return this.user;
		},

		onUpdateFailure: function onUpdateFailure(response) {
			_NotificationActions2.default.error(response.data.message);
		},

		onUpdateCompleted: function onUpdateCompleted(response) {
			_NotificationActions2.default.success(lbl_successfully_updated+'!');
			this.user = response.data.user;
			this.trigger(this.user);
		},

		onClearNotificationsCompleted: function onClearNotificationsCompleted(response) {
			this.user = response.data.user;
			this.trigger(this.user);
		},

		onPhotoCompleted: function onPhotoCompleted(response) {
			this.user.photo = response.data.user.photo;
			this.trigger(this.user);
		},

		onSetOnboardingDataFailure: function onSetOnboardingDataFailure(response) {
			console.log(response);
			_NotificationActions2.default.error(response.data.message);
		},

		onSetOnboardingDataCompleted: function onSetOnboardingDataCompleted(response) {
			var _this = this;

			var isUserOnboardingDataFull = (0, _every3.default)(function (requiredKey) {
				return (0, _get3.default)(requiredKey, (0, _get3.default)('onboardingData', _this.user));
			}, REQUIRED_ONBOARDING_KEYS);

			if (isUserOnboardingDataFull) {
				_NotificationActions2.default.success(lbl_successfully_updated+'!');
			}

			this.user = response.data.user;
			this.trigger(this.user);
		},

		onUnsubscribeFailure: function onUnsubscribeFailure(response) {
			var error = response.data;
			if (error && !error.message) {
				error.message = lbl_error_subscribe+'.';
			}
			_NotificationActions2.default.error(error.message);
		},

		onCheckPromocodeCompleted: function onCheckPromocodeCompleted(response) {
			this.promocode = response.data;
		},

		onSetRole: function onSetRole(role) {
			this.onboardingData.role = role;
		},

		onSetIndustry: function onSetIndustry(industries) {
			this.onboardingData.industry = industries;
		},

		onSetExperience: function onSetExperience(experience) {
			this.onboardingData.experience = experience;
		},

		setIsFreelancer: function setIsFreelancer(isFreelancer) {
			this.onboardingData.isFreelancer = isFreelancer;
		},

		_setOnboardingDataIfMissing: function _setOnboardingDataIfMissing() {
			var _this2 = this;

			// if user has onboard data already
			var userOnboardingData = (0, _get3.default)('onboardingData', this.user);

			var isUserOnboardingDataFull = (0, _every3.default)(function (requiredKey) {
				return (0, _get3.default)(requiredKey, userOnboardingData);
			}, REQUIRED_ONBOARDING_KEYS);

			if (isUserOnboardingDataFull) {
				this.onboardingData = userOnboardingData;
				return;
			}

			var isCurrentOnboardingDataFull = (0, _every3.default)(function (requiredKey) {
				return (0, _get3.default)(requiredKey, _this2.onboardingData);
			}, REQUIRED_ONBOARDING_KEYS);

			if (!isCurrentOnboardingDataFull) {
				return;
			}

			_AuthActions2.default.setOnboardingData(this.onboardingData.role, this.onboardingData.industry, this.onboardingData.experience, this.onboardingData.isFreelancer);
		},

		_onLogin: function _onLogin(userObject) {

			if (userObject.user) {
				this.user = userObject.user;
				this.jwt = userObject.token;
				_StoreService2.default.setItem(TOKEN_KEY, this.jwt);
				this._setOnboardingDataIfMissing();
				this.trigger(this.user);
				_AnalyticsActions2.default.login();
			}
		},

		onLoginCompleted: function onLoginCompleted(response) {
			my_email = response.data.user.email;
			my_name = response.data.user.name;
			is_allow_donwload = response.data.user.is_allow_donwload;
			this._onLogin(response.data);
			_ResumeActions2.default.load();
			location.reload(true);
			/*window.location.href=app_url_lang+'dashboard';*/
		},

		onOAuthLoginCompleted: function onOAuthLoginCompleted(result) {
			my_email = result.data.user.email;
			my_name = result.data.user.name;
			is_allow_donwload = result.data.user.is_allow_donwload;
			this._onLogin(result.data);

			if (result.isNewUser) {
				_ResumeActions2.default.import();
				_AnalyticsActions2.default.signup(result.data.user);
			} else {
				_ResumeActions2.default.load();
			}
			location.reload(true);
			/*window.location.href=app_url_lang+'dashboard';*/
		},

		onSignUpCompleted: function onSignUpCompleted(response) {
			my_email = response.data.user.email;
			my_name = response.data.user.name;
			is_allow_donwload = response.data.user.is_allow_donwload;
			this._onLogin(response.data);
			_ResumeActions2.default.import();
			_AnalyticsActions2.default.signup(response.data.user);
			_StudentActions2.default.verifyEmail(response.data.user.email);
			location.reload(true);
			/*window.location.href=app_url_lang+'dashboard';*/
		},

		onSyncCompleted: function onSyncCompleted(response) {
			this.user = response.data.user;
			this._setOnboardingDataIfMissing();
			this.trigger(this.user);
		},

		onSyncFailure: function onSyncFailure() {
			_StoreService2.default.removeItem(TOKEN_KEY);
			this.jwt = null;
		},

		onLogout: function onLogout() {
			this.user = false;
			this.jwt = null;
			_StoreService2.default.removeItem(TOKEN_KEY);
			_ResumeActions2.default.reset.sync = true;
			_ResumeActions2.default.reset();
			this.trigger(null);
			_AnalyticsActions2.default.logout();
		},

		onExecuteCompleted: function onExecuteCompleted(response) {
			window.location.href = base_url+LANG_+'payment-successfull?success=payment';
			this.user.plan = Number(response.data.payment.plan.id);
			this.user.planPaymentId = response.data.payment.paymentId;
			this.user.planExpire = (0, _getOr3.default)(null, 'nextBillingDate', response.data.payment);
			this.user.discount = Number((0, _getOr3.default)(0, 'plan.discount', response.data.payment));
			this.user.subscriptionStatus = response.data.subscriptionStatus;
			this.user.billingAddress = response.data.billingAddress;
			this.trigger(this.user);
			_AnalyticsActions2.default.upgrade(this.user);
		},

		onUpdatePaymentMethodCompleted: function onUpdatePaymentMethodCompleted(response) {
			this.user.billingAddress = response.data.billingAddress;
			this.trigger(this.user);
		},

		onUnsubscribeCompleted: function onUnsubscribeCompleted(response) {
			this.user.subscriptionStatus = response.data.subscriptionStatus;
			_NotificationActions2.default.success(lbl_success_cancel_subscribe);
			this.trigger(this.user);
		},

		isLoggedIn: function isLoggedIn() {
			return !!this.user;
		},

		canUserUpgrade: function canUserUpgrade() {
			return AuthStore.isLoggedIn() && AuthStore.getUserPlan().id === 1;
		},

		getUser: function getUser() {
			return this.user;
		},

		getUserPlanId: function getUserPlanId() {
			return this.user && this.user.plan || 1;
		},

		getUserPlan: function getUserPlan() {
			return _plan2.default.find(this.getUserPlanId());
		},

		getUserPlanExpireDate: function getUserPlanExpireDate() {
			return this.user && this.user.planExpire;
		},

		getUserDiscount: function getUserDiscount() {
			return this.user && this.user.discount || 0;
		},

		getUserPhoto: function getUserPhoto() {
			return this.user && this.user.photo;
		},

		getUserSubscriptionStatus: function getUserSubscriptionStatus() {
			return this.user && this.user.subscriptionStatus || 'Inactive';
		},

		getToken: function getToken() {
			return this.jwt;
		},

		getOnboardingData: function getOnboardingData() {
			var _this3 = this;

			var isOnboardingDataFull = (0, _every3.default)(function (requiredKey) {
				return (0, _get3.default)(requiredKey, _this3.onboardingData);
			}, REQUIRED_ONBOARDING_KEYS);

			if (isOnboardingDataFull) {
				return this.onboardingData;
			}

			return null;
		},

		isStudentPlanOngoing: function isStudentPlanOngoing() {
			return this.getUserPlanId() === 4 && new Date(this.getUserPlanExpireDate()).getTime() > Date.now();
		},

		isStudentEmailVerified: function isStudentEmailVerified() {
			return !!(this.getUser() && this.getUser().studentEmail);
		}
	});

	exports.default = AuthStore;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
		FONT: {
			HEADING: {
				lato: { name: 'Lato' },
				playfair: { name: 'Playfair Display' },
				abril: { name: 'Abril Fatface', weight: 400 },
				raleway: { name: 'Raleway' },
				montserrat: { name: 'Montserrat' },
				exo: { name: 'Exo 2' },
				oswald: { name: 'Oswald' },
				chivo: { name: 'Chivo', weight: 400 },
				robotoslab: { name: 'Roboto Slab' }
			},

			BODY: {
				opensans: { name: 'Open Sans' },
				roboto: { name: 'Roboto' }
			}
		},
		SAVE_STATE: {
			EMPTY: 'empty',
			RUNNING: 'running',
			PENDING: 'pending',
			COMPLETED: 'completed',
			FAILED: 'failed'
		},

		DEFAULT_BULLETS: _immutable2.default.List(['']),

		ITEM_SIZE: {
			LG: { SINGLE: 1, MULTI: { 0: 1, 1: 1 } },
			MD: { SINGLE: 2, MULTI: { 0: 1, 1: 1 } },
			SM: { SINGLE: 3, MULTI: { 0: 2, 1: 1 } },
			XS: { SINGLE: 3, MULTI: { 0: 3, 1: 3 } }
		},

		POPOVER: {
			OPTIONS: 'options',
			BOOKS: 'books',
			DATE: 'date',
			DATE_RANGE: 'date_range',
			ICON_PICKER: 'icon_picker',
			TECH_ADD: 'action_tag_add',
			TECH_REMOVE: 'action_tag_remove'
		},

		PAGE_HEIGHT: 1165,
		SECTION_PADDING: 20,
		SECTION_HEIGHT: 51,

		LOCKED_FEATURE: {
			INVALID: 'invalid',
			SECTIONS: 'sections',
			ICONS: 'icons',
			FONTS: 'fonts',
			COLORS: 'colors',
			BACKGROUNDS: 'backgrounds',
			MAX_ITEMS: 'max_items',
			META: 'meta',
			LAYOUT: 'layout'
		}
	};

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = pureStateless;

	var _shallowEqual = __webpack_require__(734);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function pureStateless(statelessComponent) {

	  var lastProps = undefined,
	      lastContext = undefined,
	      savedResult = undefined,
	      savedException = undefined;

	  return function (props, context) {
	    var shouldUpdate = !(0, _shallowEqual2.default)(props, lastProps) || !(0, _shallowEqual2.default)(context, lastContext);

	    if (shouldUpdate) {
	      lastProps = props;
	      lastContext = context;

	      savedResult = undefined;
	      savedException = undefined;

	      try {
	        savedResult = statelessComponent.apply(this, arguments);
	      } catch (e) {
	        savedException = e;
	      }
	    }

	    if (savedException !== undefined) {
	      throw savedException;
	    }

	    return savedResult;
	  };
	}

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.PropTypes = exports.RoutingContext = exports.RouterContext = exports.createRoutes = exports.useRoutes = exports.RouteContext = exports.Lifecycle = exports.History = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;

	var _RouteUtils = __webpack_require__(127);

	Object.defineProperty(exports, 'createRoutes', {
	  enumerable: true,
	  get: function get() {
	    return _RouteUtils.createRoutes;
	  }
	});

	var _PropTypes2 = __webpack_require__(463);

	Object.defineProperty(exports, 'locationShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.locationShape;
	  }
	});
	Object.defineProperty(exports, 'routerShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.routerShape;
	  }
	});

	var _PatternUtils = __webpack_require__(185);

	Object.defineProperty(exports, 'formatPattern', {
	  enumerable: true,
	  get: function get() {
	    return _PatternUtils.formatPattern;
	  }
	});

	var _Router2 = __webpack_require__(1727);

	var _Router3 = _interopRequireDefault(_Router2);

	var _Link2 = __webpack_require__(735);

	var _Link3 = _interopRequireDefault(_Link2);

	var _IndexLink2 = __webpack_require__(1721);

	var _IndexLink3 = _interopRequireDefault(_IndexLink2);

	var _withRouter2 = __webpack_require__(1740);

	var _withRouter3 = _interopRequireDefault(_withRouter2);

	var _IndexRedirect2 = __webpack_require__(1722);

	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);

	var _IndexRoute2 = __webpack_require__(1723);

	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);

	var _Redirect2 = __webpack_require__(736);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	var _Route2 = __webpack_require__(1725);

	var _Route3 = _interopRequireDefault(_Route2);

	var _History2 = __webpack_require__(1720);

	var _History3 = _interopRequireDefault(_History2);

	var _Lifecycle2 = __webpack_require__(1724);

	var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);

	var _RouteContext2 = __webpack_require__(1726);

	var _RouteContext3 = _interopRequireDefault(_RouteContext2);

	var _useRoutes2 = __webpack_require__(1739);

	var _useRoutes3 = _interopRequireDefault(_useRoutes2);

	var _RouterContext2 = __webpack_require__(319);

	var _RouterContext3 = _interopRequireDefault(_RouterContext2);

	var _RoutingContext2 = __webpack_require__(1728);

	var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);

	var _PropTypes3 = _interopRequireDefault(_PropTypes2);

	var _match2 = __webpack_require__(1737);

	var _match3 = _interopRequireDefault(_match2);

	var _useRouterHistory2 = __webpack_require__(741);

	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);

	var _applyRouterMiddleware2 = __webpack_require__(1730);

	var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);

	var _browserHistory2 = __webpack_require__(1731);

	var _browserHistory3 = _interopRequireDefault(_browserHistory2);

	var _hashHistory2 = __webpack_require__(1735);

	var _hashHistory3 = _interopRequireDefault(_hashHistory2);

	var _createMemoryHistory2 = __webpack_require__(738);

	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Router = _Router3.default; /* components */

	exports.Link = _Link3.default;
	exports.IndexLink = _IndexLink3.default;
	exports.withRouter = _withRouter3.default;

	/* components (configuration) */

	exports.IndexRedirect = _IndexRedirect3.default;
	exports.IndexRoute = _IndexRoute3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;

	/* mixins */

	exports.History = _History3.default;
	exports.Lifecycle = _Lifecycle3.default;
	exports.RouteContext = _RouteContext3.default;

	/* utils */

	exports.useRoutes = _useRoutes3.default;
	exports.RouterContext = _RouterContext3.default;
	exports.RoutingContext = _RoutingContext3.default;
	exports.PropTypes = _PropTypes3.default;
	exports.match = _match3.default;
	exports.useRouterHistory = _useRouterHistory3.default;
	exports.applyRouterMiddleware = _applyRouterMiddleware3.default;

	/* histories */

	exports.browserHistory = _browserHistory3.default;
	exports.hashHistory = _hashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(24);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
					value: true
	});

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var AnalyticsActions = _reflux2.default.createActions({
					load: { children: ['completed'] },
					checkoutClickAddPromocode: true,
					clickDownload: true,
					clickShare: true,
					clickResumeDelete: true,
					clickUnsubscribe: true,
					dashboardChangeTitle: true,
					dashboardClickDeleteResume: true,
					dashboardClickDuplicateResume: true,
					dashboardClickNewResume: true,
					onboardingClickExperience: true,
					onboardingClickIndustry: true,
					onboardingClickRole: true,
					onboardingClickIsFreelancer: true,
					accountClickRole: true,
					accountClickIndustry: true,
					accountClickExperience: true,
					accountClickIsFreelancer: true,
					onboardingStep: true,
					markClientLoaded: true,
					markFontsLoaded: true,
					markAppLoaded: true,
					login: true,
					logout: true,
					page: true,
					popup: true,
					timeLoading: true,
					analyzerRun: true,
					analyzerClickFavorite: true,
					resumeClickAddSection: true,
					resumeClickColors: true,
					resumeClickFont: true,
					resumeClickLayout: true,
					resumeClickToggleLogo: true,
					resumeClickToggleMistakes: true,
					resumeClickHistory: true,
					resumesCountChange: true,
					resumeClickFeedbackAskNow: true,
					resumeToggleFeedback: true,
					resumeSave: true,
					sharePageToggle: true,
					feedbackPageToggle: true,
					signup: true,
					topStrengthClickFavorite: true,
					topStrengthClickFeedbackSend: true,
					topStrengthClickAsk: true,
					topStrengthClickToggle: true,
					topStrengthClickViewExample: true,
					topStrengthClickCreateResume: true,
					upgrade: true,
					closePopup: true
	});

	function loadIntercom() {

	}

	AnalyticsActions.load.listen(function () {
					loadIntercom();
					AnalyticsActions.load.completed();
	});

	exports.default = AnalyticsActions;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _clamp2 = __webpack_require__(307);

	var _clamp3 = _interopRequireDefault(_clamp2);

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _Header = __webpack_require__(256);

	var _Header2 = _interopRequireDefault(_Header);

	var _text = __webpack_require__(577);

	var _LayoutItem = __webpack_require__(258);

	var _LayoutItem2 = _interopRequireDefault(_LayoutItem);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	var _ResumeStyle = __webpack_require__(20);

	var _ResumeStyle2 = _interopRequireDefault(_ResumeStyle);

	var _immutableTools = __webpack_require__(196);

	var _ = __webpack_require__(269);

	var ResumeRecords = _interopRequireWildcard(_);

	var _AuthStore = __webpack_require__(8);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var LayoutRow = function (_Immutable$Record) {
		_inherits(LayoutRow, _Immutable$Record);

		function LayoutRow() {
			_classCallCheck(this, LayoutRow);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return LayoutRow;
	}(_immutable2.default.Record({
		itemIndexes: _immutable2.default.List(),
		height: 0
	}));

	var Resume = function (_Immutable$Record2) {
		_inherits(Resume, _Immutable$Record2);

		function Resume() {
			_classCallCheck(this, Resume);

			return _possibleConstructorReturn(this, _Immutable$Record2.apply(this, arguments));
		}

		Resume.prototype.id = function id() {
			return this._localId || this._id;
		};

		Resume.prototype.findSectionIndex = function findSectionIndex(record) {
			return this.sections.findIndex(function (section) {
				return section.record === record;
			});
		};

		Resume.prototype.findSection = function findSection(record) {
			return this.sections.find(function (section) {
				return section.record === record;
			});
		};

		Resume.prototype.findEnabledSection = function findEnabledSection(record) {
			return this.sections.find(function (section) {
				return section.record === record && section.enabled === true;
			});
		};

		Resume.prototype.toggleLayoutFeature = function toggleLayoutFeature(feature, toggle) {
			if (toggle) {
				return this.update('lockedFeatures', function (lockedFeatures) {
					return lockedFeatures.add(feature);
				});
			} else {
				return this.update('lockedFeatures', function (lockedFeatures) {
					return lockedFeatures.remove(feature);
				});
			}
		};

		Resume.prototype.isUserResumeLocked = function isUserResumeLocked(userSubscriptionStatus) {
			return userSubscriptionStatus === _AuthStore.SUBSCRIPTION_CANCELED && !this.lockedFeatures.isEmpty();
		};

		Resume.prototype.exceedsMaxItems = function exceedsMaxItems(plan, sectionRecord) {
			var sections = this.sections.filter(function (section) {
				return section.enabled;
			});
			var items = sections.flatMap(function (section) {
				return section.items;
			});

			if (sectionRecord) {
				var section = new ResumeRecords[sectionRecord]();
				return items.count() + section.items.count() > plan.maxItems;
			}

			return items.count() + 1 > plan.maxItems;
		};

		Resume.prototype.withLockedFeatures = function withLockedFeatures(plan) {
			var sections = this.sections.filter(function (section) {
				return section.enabled;
			});
			var sectionRecords = sections.map(function (section) {
				return section.record;
			});
			var items = sections.flatMap(function (section) {
				return section.items;
			});
			var icons = items.filter(function (item) {
				return item.icon;
			}).map(function (item) {
				return item.icon;
			});
			var colors = this.style.colors;
			var background = this.style.background;
			var fonts = _immutable2.default.List([this.style.fontBody, this.style.fontHeading]);

			var lockedSections = sectionRecords.filter(plan.isSectionLocked.bind(plan));
			var lockedIcons = icons.filter(plan.isIconLocked.bind(plan));
			var lockedFonts = fonts.filter(plan.isFontLocked.bind(plan));
			var LOCKED_FEATURE = _ResumeConfig2.default.LOCKED_FEATURE;

			return this.toggleLayoutFeature(LOCKED_FEATURE.SECTIONS, !lockedSections.isEmpty()).toggleLayoutFeature(LOCKED_FEATURE.ICONS, !lockedIcons.isEmpty()).toggleLayoutFeature(LOCKED_FEATURE.FONTS, !lockedFonts.isEmpty()).toggleLayoutFeature(LOCKED_FEATURE.COLORS, plan.isColorLocked(colors.toArray())).toggleLayoutFeature(LOCKED_FEATURE.BACKGROUNDS, plan.isBackgroundLocked(background)).toggleLayoutFeature(LOCKED_FEATURE.MAX_ITEMS, items.count() > plan.maxItems).toggleLayoutFeature(LOCKED_FEATURE.META, this.style.isMetaDataDisabled && !plan.isMetaDataDisabled).toggleLayoutFeature(LOCKED_FEATURE.LAYOUT, plan.isLayoutLocked(this.style.layout));
		};

		Resume.prototype.removeLockedFeatures = function removeLockedFeatures(plan) {
			var itemsLeft = plan.maxItems;
			var resume = null;

			resume = this.update('sections', function (sections) {
				return sections.map(function (section) {
					return section.set('enabled', !plan.isSectionLocked(section.record) && section.enabled);
				});
			});

			resume = resume.update('sections', function (sections) {
				return sections.map(function (section) {
					if (section.enabled) {
						if (itemsLeft <= 0) {
							section = section.set('enabled', false);
						} else {
							section = section.update('items', function (items) {
								return items.slice(0, itemsLeft);
							});
							itemsLeft = Math.max(0, itemsLeft - section.items.count());
						}
					}
					return section;
				});
			});

			resume = resume.update('sections', function (sections) {
				return sections.map(function (section) {
					return section.update('items', function (items) {
						return items.map(function (item) {
							if (item.icon && plan.isIconLocked(item.icon)) {
								return item.delete('fa');
							}
							return item;
						});
					});
				});
			});

			if (plan.isColorLocked(this.style.colors.toArray())) {
				resume = resume.deleteIn(['style', 'colors']);
			}

			if (plan.isFontLocked(this.style.fontBody)) {
				resume = resume.deleteIn(['style', 'fontBody']);
			}

			if (plan.isFontLocked(this.style.fontHeading)) {
				resume = resume.deleteIn(['style', 'fontHeading']);
			}

			if (plan.isBackgroundLocked(this.style.background)) {
				resume = resume.deleteIn(['style', 'background']);
			}

			if (plan.isLayoutLocked(this.style.layout)) {
				resume = resume.deleteIn(['style', 'layout']);
			}

			resume = resume.setIn(['style', 'isMetaDataDisabled'], plan.isMetaDataDisabled);

			return resume;
		};

		Resume.prototype.withLayout = function withLayout() {
			var layout = _immutable2.default.List().concat(this.getColumnLayoutItems(0)).concat(this.getColumnLayoutItems(1));

			return this.set('layout', layout);
		};

		Resume.prototype.addSection = function addSection(record) {
			var _this3 = this;

			var sectionIndex = this.findSectionIndex(record);
			var column = this.getShortestColumn();

			if (sectionIndex !== -1) {
				return this.setIn(['sections', sectionIndex, 'enabled'], true).setIn(['sections', sectionIndex, 'column'], column).updateIn(['sections'], (0, _immutableTools.moveListItem)(sectionIndex, this.sections.count() - 1));
			} else {
				var _ret = function () {
					var section = new ResumeRecords[record]({ column: column });

					return {
						v: _this3.update('sections', function (sections) {
							return sections.push(section);
						})
					};
				}();

				if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
			}
		};

		Resume.prototype.addSectionItem = function addSectionItem(sectionIndex) {
			var section = this.sections.get(sectionIndex);
			var ItemRecord = section.constructor.ITEM;
			var item = new ItemRecord({ id: (0, _text.uniqueId)() });

			return this.updateIn(['sections', sectionIndex, 'items'], function (items) {
				return items.push(item);
			});
		};

		Resume.prototype.moveSectionToIndex = function moveSectionToIndex(index, toIndex) {
			if (this.sections.has(index) && this.sections.has(toIndex)) {
				return this.setIn(['sections', index, 'column'], this.getIn(['sections', toIndex, 'column'])).updateIn(['sections'], (0, _immutableTools.moveListItem)(index, toIndex));
			}
		};

		Resume.prototype.moveSectionToColumn = function moveSectionToColumn(index, page, column) {
			var _this4 = this;

			if (!this.sections.has(index)) {
				return this;
			}

			var to = this.layout.filter(function (layoutItem) {
				return layoutItem.page <= page && (_this4.style.layout === _ResumeStyle2.default.SINGLE ? true : layoutItem.column === column);
			}).last();

			var result = this.setIn(['sections', index, 'column'], column);

			if (to) {
				result = result.updateIn(['sections'], (0, _immutableTools.moveListItem)(index, to.sectionIndex + 1));
			}
			return result;
		};

		Resume.prototype.getColumnHeight = function getColumnHeight(column) {
			return this.layout.filter(function (layoutItem) {
				return layoutItem.column === column;
			}).map(function (layoutItem) {
				return layoutItem.height;
			}).reduce(function (prev, current) {
				return prev + current;
			}, 0);
		};

		Resume.prototype.getShortestColumn = function getShortestColumn() {
			var height0 = this.getColumnHeight(0);
			var height1 = this.getColumnHeight(1);

			return height0 > height1 ? 1 : 0;
		};

		Resume.prototype.getItemsPerLine = function getItemsPerLine(size, column) {
			if (this.style.layout === _ResumeStyle2.default.SINGLE) {
				return size.SINGLE;
			} else {
				return size.MULTI[column];
			}
		};

		Resume.prototype.getRows = function getRows(items, itemsPerLine) {
			return items.map(function (item, index) {
				return [index, item.height];
			}).groupBy(function (item, index) {
				return Math.floor(index / itemsPerLine);
			}).map(function (group) {
				return new LayoutRow({
					itemIndexes: group.map(function (params) {
						return params[0];
					}),
					height: group.map(function (params) {
						return params[1];
					}).max()
				});
			});
		};

		Resume.prototype.getLayoutColumn = function getLayoutColumn(column) {
			return (0, _clamp3.default)(0, this.style.layout === _ResumeStyle2.default.SINGLE ? 0 : 1, Number(column));
		};

		Resume.prototype.getColumnLayoutItems = function getColumnLayoutItems(column) {
			var _this5 = this;

			var layout = _immutable2.default.List();
			var page = 0;
			var y = this.header.height;

			this.sections.forEach(function (section, sectionIndex) {
				if (section.enabled && _this5.getLayoutColumn(section.column) === column) {
					y = y + section.height;

					if (section.items.count()) {
						var itemsPerLine = _this5.getItemsPerLine(section.constructor.ITEM_SIZE, column);
						layout = layout.concat(_this5.getRows(section.items, itemsPerLine).groupBy(function (row, i) {
							y = y + row.height;
							if (y > _ResumeConfig2.default.PAGE_HEIGHT) {
								y = section.height + _ResumeConfig2.default.SECTION_PADDING + row.height;
								page = page + 1;
							}
							return page;
						}).map(function (group, groupPage) {
							var rowsHeight = group.map(function (row) {
								return row.height;
							}).reduce(function (prev, current) {
								return prev + current;
							}, 0);

							return new _LayoutItem2.default({
								sectionIndex: sectionIndex,
								column: section.column,
								page: Number(groupPage),
								height: section.height + _ResumeConfig2.default.SECTION_PADDING + rowsHeight,
								itemIndexes: group.toList().flatMap(function (row) {
									return row.itemIndexes;
								})
							});
						}));
					} else {
						layout = layout.push(new _LayoutItem2.default({
							sectionIndex: sectionIndex,
							column: section.column,
							page: page,
							height: section.height + _ResumeConfig2.default.SECTION_PADDING
						}));
					}

					y = y + _ResumeConfig2.default.SECTION_PADDING;
				}
			});

			return layout;
		};

		return Resume;
	}(_immutable2.default.Record({
		version: 2,
		title: '',
		record: 'Resume',
		_id: null,
		_localId: null,
		isNew: false,
		__v: 0,
		updatedAt: null,
		createdAt: null,
		isLastRevision: true,
		isFirstRevision: true,
		lockedFeatures: new _immutable2.default.Set(),
		style: new _ResumeStyle2.default(),
		sections: new _immutable2.default.List(),
		header: new _Header2.default(),
		layout: new _immutable2.default.List()
	}));

	exports.default = Resume;


	Resume.fromJS = (0, _immutableTools.fromJS)(ResumeRecords);

	Resume.generateLocalId = function () {
		return String(Math.floor(Math.random() * 10000000000000001));
	};

	Resume.FONT = _ResumeConfig2.default.FONT;
	Resume.SAVE_STATE = _ResumeConfig2.default.SAVE_STATE;
	Resume.ITEM_SIZE = _ResumeConfig2.default.ITEM_SIZE;
	Resume.POPOVER = _ResumeConfig2.default.POPOVER;
	Resume.PAGE_HEIGHT = _ResumeConfig2.default.PAGE_HEIGHT;
	Resume.LOCKED_FEATURE = _ResumeConfig2.default.LOCKED_FEATURE;
	Resume.DEFAULT_BULLETS = _ResumeConfig2.default.DEFAULT_BULLETS;

/***/ },
/* 16 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(471);


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _http = __webpack_require__(33);

	var _http2 = _interopRequireDefault(_http);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ResumeActions = _reflux2.default.createActions({
		reset: true,
		empty: true,
		import: true,
		scheduleSave: true,
		set: true,
		add: true,
		duplicate: true,
		removeUnsaved: true,
		setCurrentId: true,
		setCurrentIndex: true,
		setIncremental: true,
		setImmidiate: true,
		setId: true,
		addItem: true,
		addSection: true,
		moveItem: true,
		moveSectionToIndex: true,
		moveSectionToColumn: true,
		deleteItem: true,
		deleteSection: true,
		navigateHistory: true,
		removeLockedFeatures: true,
		flushSave: true,

		load: {
			children: ['completed', 'failed']
		},
		delete: {
			children: ['completed', 'failed']
		}
	});

	ResumeActions.load.listen(function () {
		_http2.default.get('resumes').then(ResumeActions.load.completed).catch(ResumeActions.load.failed);
	});

	ResumeActions.delete.listen(function (id) {
		_http2.default.delete('resumes/' + id).then(ResumeActions.delete.completed).catch(ResumeActions.delete.failed);
	});

	ResumeActions.removeUnsaved.sync = true;

	module.exports = ResumeActions;

/***/ },
/* 19 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DOUBLE = 'double';
	var SINGLE = 'single';
	var CONDENSED = 'condensed';

	var ResumeStyle = function (_Immutable$Record) {
		_inherits(ResumeStyle, _Immutable$Record);

		function ResumeStyle() {
			_classCallCheck(this, ResumeStyle);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return ResumeStyle;
	}(_immutable2.default.Record({
		record: 'ResumeStyle',
		layout: DOUBLE,
		colors: new _immutable2.default.List(["#000000", "#008CFF"]),
		background: null,
		fontBody: 'opensans',
		fontHeading: 'lato',
		isMetaDataDisabled: false
	}));

	exports.default = ResumeStyle;


	ResumeStyle.DOUBLE = DOUBLE;
	ResumeStyle.SINGLE = SINGLE;
	ResumeStyle.CONDENSED = CONDENSED;

/***/ },
/* 21 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

	'use strict';

	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }

	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;

	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }

	    var from = Object(nextSource);

	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }

	  return to;
	}

	module.exports = assign;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NotificationActions = _reflux2.default.createActions(['error', 'warning', 'success', 'dismiss']);

	module.exports = NotificationActions;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */

	'use strict';

	var emptyFunction = __webpack_require__(75);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (false) {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;

/***/ },
/* 24 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(233)('wks')
	  , uid        = __webpack_require__(145)
	  , Symbol     = __webpack_require__(16).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _omit2 = __webpack_require__(123);

	var _omit3 = _interopRequireDefault(_omit2);

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouter = __webpack_require__(12);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function Link(props) {
		var onClickBefore = props.onClickBefore,
		    afterLoginTo = props.afterLoginTo,
		    requireLogin = props.requireLogin,
		    router = props.router;

		var rest = (0, _omit3.default)(['onClickBefore', 'afterLoginTo', 'requireLogin', 'router'], props);

		if (props.disabled) {
			return _react2.default.createElement('button', _extends({ type: 'button' }, rest));
		} else {
			return _react2.default.createElement(_reactRouter.Link, _extends({}, rest, {
				onClick: function onClick(event) {
					if (onClickBefore) {
						onClickBefore(event);
					}

					if (requireLogin) {
						event.preventDefault();
						_ViewStateActions2.default.openPopup('Auth', {
							onAuthSuccess: function onAuthSuccess() {
								_ViewStateActions2.default.clear();
								router.push(afterLoginTo || props.to);
							}
						});
					} else if (props.onClick) {
						props.onClick(event);
					}
				} }));
		}
	}

	Link.propTypes = {
		disabled: _react2.default.PropTypes.bool,
		requireLogin: _react2.default.PropTypes.bool,
		onClickBefore: _react2.default.PropTypes.func,
		onClick: _react2.default.PropTypes.func,
		afterLoginTo: _react2.default.PropTypes.string
	};

	exports.default = (0, _reactRouter.withRouter)(Link);

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _omit2 = __webpack_require__(123);

	var _omit3 = _interopRequireDefault(_omit2);

	var _noop2 = __webpack_require__(217);

	var _noop3 = _interopRequireDefault(_noop2);

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	__webpack_require__(1322);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _TextareaAutosize = __webpack_require__(349);

	var _TextareaAutosize2 = _interopRequireDefault(_TextareaAutosize);

	var _AutosizeInput = __webpack_require__(521);

	var _AutosizeInput2 = _interopRequireDefault(_AutosizeInput);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	var _text = __webpack_require__(577);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var EditableField = function (_React$Component) {
		_inherits(EditableField, _React$Component);

		function EditableField(props) {
			_classCallCheck(this, EditableField);

			var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

			_this.state = {
				value: props.value || '',
				event: null
			};
			return _this;
		}

		EditableField.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
			if (this.startValue !== nextProps.value) {
				this.setState({ value: nextProps.value || '' });
				this.startValue = nextProps.value || '';
			}
		};

		EditableField.prototype.onChange = function onChange(event) {
			this.setState({ value: event.target.value });
		};

		EditableField.prototype.onFocus = function onFocus(event) {
			var _this2 = this;

			this.startValue = this.state.value;
			if (this.props.analyzerData && !this.props.analyzerData.isEmpty()) {
				_ViewStateActions2.default.set({
					analyzerItems: this.props.analyzerData.map(function (item) {
						return item.id;
					}),
					toolboxSelectedTab: 'tips'
				});
				setTimeout(function () {
					return _ViewStateActions2.default.scrollIntoView('analyzer-item-' + _this2.props.analyzerData.first().id);
				}, 1000);
			}
		};

		EditableField.prototype.onBlur = function onBlur(event) {
			_ViewStateActions2.default.set({
				analyzerItems: new _immutable2.default.List(),
				toolboxSelectedTab: 'askFriend'
			});

			if (this.startValue !== undefined && this.state.value !== this.startValue) {
				this.props.onChange(event);
			}
		};

		EditableField.prototype.onDrop = function onDrop(event) {
			event.preventDefault();
		};

		EditableField.prototype.onDragStart = function onDragStart(event) {
			event.preventDefault();
		};

		EditableField.prototype.getHighlights = function getHighlights() {
			var items = this.props.analyzerData.filter(function (item) {
				return item.valid && item.range;
			});
			var itemRanges = items.map(function (item) {
				return item.range.toArray();
			}).toArray();

			return { __html: (0, _text.highlight)(itemRanges, this.props.value) };
		};

		EditableField.prototype.render = function render() {
			var _this3 = this;

			var rest = (0, _omit3.default)(['autoSize', 'autoSizeInput', 'font', 'placeholderIsMinWidth', 'onResize'], this.props);

			var props = this.props.readOnly && this.props.onChange ? {} : {
				value: this.state.value,
				font: this.props.font,
				placeholderIsMinWidth: false,
				onFocus: function onFocus(event) {
					return _this3.onFocus(event);
				},
				onChange: function onChange(event) {
					return _this3.onChange(event);
				},
				onDrop: function onDrop(event) {
					return _this3.onDrop(event);
				},
				onDragStart: function onDragStart(event) {
					return _this3.onDragStart(event);
				},
				onResize: function onResize(event) {
					return setTimeout(function () {
						return _this3.onBlur(event);
					});
				},
				onBlur: function onBlur(event) {
					return _this3.onBlur(event);
				},
				autoComplete: 'off'
			};

			if (this.props.readOnly) {
				var value = this.props.value || this.props.placeholder;

				switch (this.props.type) {
					case 'url':
						return _react2.default.createElement(
							'a',
							{
								href: value,
								className: this.props.className },
							value
						);
					case 'email':
						return _react2.default.createElement(
							'a',
							{
								href: 'mailto:' + value,
								className: this.props.className },
							value
						);
					default:
						return _react2.default.createElement(
							'span',
							{ className: this.props.className },
							value
						);
				}
			} else if (!this.props.autoSize) {
				return _react2.default.createElement('input', _extends({}, rest, props));
			} else if (this.props.autoSizeInput) {
				return _react2.default.createElement(
					'div',
					{ className: 'editable-field-wrapper editable-field-wrapper-inline' },
					_react2.default.createElement(_AutosizeInput2.default, _extends({}, rest, props)),
					this.state.value === this.props.value && this.props.analyzerData && !this.props.analyzerData.isEmpty() ? _react2.default.createElement('div', {
						className: 'editable-field-highlights editable-field-highlights-inline ' + this.props.className,
						dangerouslySetInnerHTML: this.getHighlights() }) : null
				);
			} else {
				return _react2.default.createElement(
					'div',
					{ className: 'editable-field-wrapper' },
					_react2.default.createElement(_TextareaAutosize2.default, _extends({}, rest, props)),
					this.state.value === this.props.value && this.props.analyzerData && !this.props.analyzerData.isEmpty() ? _react2.default.createElement('div', {
						className: 'editable-field-highlights ' + this.props.className,
						dangerouslySetInnerHTML: this.getHighlights() }) : null
				);
			}
		};

		return EditableField;
	}(_react2.default.Component);

	exports.default = EditableField;


	EditableField.propTypes = {
		readOnly: _react2.default.PropTypes.bool,
		autoSize: _react2.default.PropTypes.bool,
		autoSizeInput: _react2.default.PropTypes.bool,
		analyzerData: _react2.default.PropTypes.instanceOf(_immutable2.default.List),
		maxLength: _react2.default.PropTypes.number
	};

	EditableField.defaultProps = {
		onChange: _noop3.default,
		autoSize: true,
		autoSizeInput: false
	};

/***/ },
/* 28 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Modal = function (_Immutable$Record) {
		_inherits(Modal, _Immutable$Record);

		function Modal() {
			_classCallCheck(this, Modal);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return Modal;
	}(_immutable2.default.Record({
		name: null,
		props: new _immutable2.default.Map()
	}));

	exports.default = Modal;


	Modal.LAYOUT_REORDER = 'layout_reorder';
	Modal.LOCKED_RESUME = 'locked_resume';
	Modal.LOCKED_FEATURE = 'locked_feature';
	Modal.ADD_LOCKED_SECTION = 'add_locked_section';
	Modal.DELETE_RESUME = 'delete_resume';
	Modal.REMOVE_LOCKED_FEATURES = 'remove_locked_features';
	Modal.PLAN_DETAILS_FREE = 'plan_details_free';
	Modal.PLAN_DETAILS_PRO = 'plan_details_pro';
	Modal.PLAN_DETAILS_STUDENT = 'plan_details_student';
	Modal.UNSUBSCRIBE = 'unsubscribe';
	Modal.DOWNGRADE = 'downgrade';
	Modal.INSPIRATION = 'inspiration';
	Modal.MAX_RESUMES = 'max_resumes';
	Modal.RESUME_SHARE = 'resume_share';
	Modal.VERIFY_STUDENT_EMAIL = 'verify_student_email';
	Modal.INVITE_STUDENTS = 'invite_students';

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(19)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(13)
	  , IE8_DOM_DEFINE = __webpack_require__(586)
	  , toPrimitive    = __webpack_require__(82)
	  , dP             = Object.defineProperty;

	exports.f = __webpack_require__(30) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(54);
	var isNil = __webpack_require__(89);
	var fail = __webpack_require__(1667);
	var stringify = __webpack_require__(726);

	function assert(guard, message) {
	  if (guard !== true) {
	    if (isFunction(message)) { // handle lazy messages
	      message = message();
	    }
	    else if (isNil(message)) { // use a default message
	      message = 'Assert failed (turn on "Pause on exceptions" in your Source panel)';
	    }
	    assert.fail(message);
	  }
	}

	assert.fail = fail;
	assert.stringify = stringify;

	module.exports = assert;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(1016);

	var _StoreService = __webpack_require__(135);

	var _StoreService2 = _interopRequireDefault(_StoreService);

	var _NotificationActions = __webpack_require__(22);

	var _NotificationActions2 = _interopRequireDefault(_NotificationActions);

	var _ravenJs = __webpack_require__(729);

	var _ravenJs2 = _interopRequireDefault(_ravenJs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var API_ENDPOINT = (app_url_lang) +'';

	function onFetchRequestReject(res) {
		_NotificationActions2.default.error(lbl_error_while_connecting);
		// return a promise, that is never resolved/rejected
		// to stop promise chain on connection interrupt
		return Promise.reject({ data: {}, xhr: res });
	}

	function onFetchRequestResolve(res) {
		if (res.ok) {
			return res.json().then(function (data) {
				return Promise.resolve({ data: data, xhr: res });
			}, function (res) {
				_NotificationActions2.default.error();
				_ravenJs2.default.captureException(res);
				// return a promise, that is never resolved/rejected
				// to stop promise chain on connection interrupt
				return new Promise(function () {});
			});
		} else {
			return res.text().then(function (data) {
				return Promise.reject({ data: { message: data }, xhr: res });
			});
		}
	}

	module.exports = {
		post: function post(url, data) {
			return fetch(API_ENDPOINT + url, {
				method: 'POST',
				body: JSON.stringify(data),
				headers: {
					'Content-Type': 'application/json',
					'Authorization': 'Bearer ' + _StoreService2.default.getItem('jwt'),
					'X-PACKAGE-VERSION': ("5.0.1"), // eslint-disable-line no-undef
					'X-GIT-COMMIT': ("undefined") },
				credentials: 'include',
				cache: 'no-store'
			}).then(onFetchRequestResolve, onFetchRequestReject);
		},

		get: function get(url) {
			return fetch(API_ENDPOINT + url, {
				method: 'GET',
				headers: {
					'Authorization': 'Bearer ' + _StoreService2.default.getItem('jwt')
				},
				credentials: 'include',
				cache: 'no-store'
			}).then(onFetchRequestResolve, onFetchRequestReject);
		},

		delete: function _delete(url) {
			return fetch(API_ENDPOINT + url, {
				method: 'DELETE',
				headers: {
					'Authorization': 'Bearer ' + _StoreService2.default.getItem('jwt')
				},
				credentials: 'include',
				cache: 'no-store'
			}).then(onFetchRequestResolve, onFetchRequestReject);
		}
	};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var t = __webpack_require__(1656);
	var fp = __webpack_require__(1651);

	var Plan = t.struct({
		id: t.Number,
		name: t.String,
		expTxt: t.String,
		download: t.Boolean,
		amount: t.refinement(t.Number, function (amount) {
			return amount >= 0;
		}),
		oamount: t.refinement(t.Number, function (oamount) {
			return oamount >= 0;
		}),
		maxItems: t.refinement(t.Number, function (items) {
			return items > 0;
		}),
		processorId: t.maybe(t.String),
		billingCycle: t.maybe(t.enums.of([lbl_Annually, lbl_Monthly])),
		icons: t.list(t.String),
		sections: t.list(t.String),
		fonts: t.list(t.String),
		layouts: t.list(t.String),
		maxResumes: t.refinement(t.Number, function (count) {
			return count >= 1;
		}),
		colors: t.list(t.list(t.String)),
		backgrounds: t.list(t.String),
		isMetaDataDisabled: t.Boolean,
	}, 'Plan');

	Plan.YEARLY = lbl_Annually;
	Plan.MONTHLY = lbl_Monthly
	Plan.MAX_RESUMES = 10;

	Plan.prototype.monthlyDiscountedAmount = function (discount) {
		const amount = this.billingCycle === Plan.YEARLY ? this.amount  : this.amount;
		return amount - amount * discount / 100;
	}

	Plan.prototype.discountedAmount = function (discount) {
		return this.amount - this.amount * discount / 100;
	};

	Plan.prototype.isIconLocked = function (value) {
		return !fp.includes(value, this.icons);
	};

	Plan.prototype.isLayoutLocked = function (value) {
		return !fp.includes(value, this.layouts);
	};

	Plan.prototype.isFontLocked = function (value) {
		return !fp.includes(value, this.fonts);
	};

	Plan.prototype.isSectionLocked = function (value) {
		return !fp.includes(value, this.sections);
	};

	Plan.prototype.isColorLocked = function (value) {
		return !fp.isEmpty(value) && !fp.find(fp.isEqual(value), this.colors);
	};

	Plan.prototype.isBackgroundLocked = function (value) {
		return !fp.includes(value || 'background1', this.backgrounds);
	};

	var icons = my_icons;

	var awards = my_icons2;

	var colors = my_colors;

	var sections = my_sections;

	var fonts = my_fonts;

	var layouts = my_templates;

	var backgrounds = my_background;

	var itemsForPlan = function (items, plan) {
		return fp.flow(
			fp.filter(function (item) {
				return fp.includes(plan, item[1]);
			}),
			fp.map(fp.head)
		)(items);
	};

	var plans = eval(my_packages);

	Plan.find = function (id) {
		return fp.find(function (plan) { return plan.id === id; }, plans);
	};

	Plan.icons = fp.map(fp.head, icons);
	Plan.awards = fp.map(fp.head, awards);
	Plan.colors = fp.map(fp.head, colors);
	Plan.fonts = fp.map(fp.head, fonts);
	Plan.layouts = fp.map(fp.head, layouts);
	Plan.backgrounds = fp.map(fp.head, backgrounds);
	Plan.sections = fp.map(fp.head, sections);
	Plan.all = plans;

	module.exports = Plan;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _AuthService = __webpack_require__(355);

	var _AuthService2 = _interopRequireDefault(_AuthService);

	var _asyncAction = __webpack_require__(166);

	var _asyncAction2 = _interopRequireDefault(_asyncAction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var AuthActions = _reflux2.default.createActions({
		'login': {
			children: ['completed', 'failure']
		},
		'signUp': {
			children: ['completed', 'failure']
		},
		'update': {
			children: ['completed', 'failure']
		},
		'photo': {
			children: ['completed', 'failure']
		},
		'sync': {
			children: ['completed', 'failure']
		},
		// Notice: this is separated in utils/directpopup to
		// workaround the popupblocking mechanism of the browsers
		'oAuthLogin': {
			children: ['completed', 'failure']
		},
		'resetPasswordEmail': {
			children: ['completed', 'failure']
		},
		'setNewPassword': {
			children: ['completed', 'failure']
		},
		'validateResetToken': {
			children: ['completed', 'failure']
		},
		'setOnboardingData': {
			children: ['completed', 'failure']
		},
		'deleteUser': {
			children: ['completed', 'failure']
		},
		'logout': {},
		'setRole': {},
		'setIndustry': {},
		'setExperience': {},
		'setIsFreelancer': {},
		'clearNotifications': _asyncAction2.default
	});

	AuthActions.login.listen(function (user, pass) {
		_AuthService2.default.login(user, pass).then(AuthActions.login.completed).catch(AuthActions.login.failure);
	});

	AuthActions.sync.listen(function (data) {
		_AuthService2.default.syncUser(data).then(AuthActions.sync.completed).catch(AuthActions.sync.failure);
	});

	AuthActions.resetPasswordEmail.listen(function (data) {
		_AuthService2.default.resetPasswordEmail(data).then(AuthActions.resetPasswordEmail.completed).catch(AuthActions.resetPasswordEmail.failure);
	});

	AuthActions.setNewPassword.listen(function (token, password) {
		_AuthService2.default.setNewPassword(token, password).then(AuthActions.setNewPassword.completed).catch(AuthActions.setNewPassword.failure);
	});

	AuthActions.signUp.listen(function (name, email, password, invitedBy) {
		_AuthService2.default.signUp(name, email, password, invitedBy).then(AuthActions.signUp.completed).catch(AuthActions.signUp.failure);
	});

	AuthActions.validateResetToken.listen(function (token) {
		_AuthService2.default.validateResetToken(token).then(AuthActions.validateResetToken.completed).catch(AuthActions.validateResetToken.failure);
	});

	AuthActions.setOnboardingData.listen(function (role, industry, experience, isFreelancer) {
		_AuthService2.default.setOnboardingData(role, industry, experience, isFreelancer).then(AuthActions.setOnboardingData.completed).catch(AuthActions.setOnboardingData.failure);
	});

	AuthActions.update.listen(function (data) {
		_AuthService2.default.update(data).then(AuthActions.update.completed).catch(AuthActions.update.failure);
	});

	AuthActions.photo.listen(function (data) {
		_AuthService2.default.photo(data).then(AuthActions.photo.completed).catch(AuthActions.photo.failure);
	});

	AuthActions.deleteUser.listen(function () {
		_AuthService2.default.deleteUser().then(AuthActions.deleteUser.completed).catch(AuthActions.deleteUser.failure);
	});

	AuthActions.clearNotifications.listen(function () {
		_AuthService2.default.clearNotifications().then(AuthActions.clearNotifications.completed).catch(AuthActions.clearNotifications.failed);
	});

	exports.default = AuthActions;

/***/ },
/* 36 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ToggleOption = function ToggleOption(name, label) {
		var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

		_classCallCheck(this, ToggleOption);

		this.name = name;
		this.label = label;
		this.isGlobal = config.isGlobal;
	};

	exports.default = ToggleOption;

/***/ },
/* 37 */
/***/ function(module, exports) {

	module.exports = {
	  'cap': false,
	  'curry': false,
	  'fixed': false,
	  'immutable': false,
	  'rearg': false
	};


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _concat2 = __webpack_require__(182);

	var _concat3 = _interopRequireDefault(_concat2);

	var _reduce2 = __webpack_require__(697);

	var _reduce3 = _interopRequireDefault(_reduce2);

	var _toPairs2 = __webpack_require__(440);

	var _toPairs3 = _interopRequireDefault(_toPairs2);

	var _map2 = __webpack_require__(46);

	var _map3 = _interopRequireDefault(_map2);

	var _keys2 = __webpack_require__(216);

	var _keys3 = _interopRequireDefault(_keys2);

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = loadStores;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _mixin = __webpack_require__(67);

	var _mixin2 = _interopRequireDefault(_mixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function loadStores(stores, Component) {
		var LoadResourceComponent = _react2.default.createClass({
			displayName: 'LoadResourceComponent',

			mixins: (0, _concat3.default)([_mixin2.default], (0, _map3.default)(function (store) {
				return _reflux2.default.connect(store[1], store[0]);
			}, (0, _toPairs3.default)(stores))),

			allLoaded: false,

			animationTimeout: undefined,

			componentWillMount: function componentWillMount() {
				if (this.isAllLoaded()) {
					this.setState({ animationFinished: true });
				}
			},

			componentWillUnmount: function componentWillUnmount() {
				clearTimeout(this.animationTimeout);
			},

			isAllLoaded: function isAllLoaded() {
				var _this = this;

				if (!this.allLoaded) {
					var storesLoaded = (0, _map3.default)(function (name) {
						if (_this.state[name] instanceof _immutable2.default.Record) {
							return !_this.state[name].has('loaded') || _this.state[name].loaded;
						} else {
							return Boolean(_this.state[name]);
						}
					}, (0, _keys3.default)(stores));
					var allStoresLoaded = (0, _reduce3.default)(function (result, value) {
						return result && value;
					}, true, storesLoaded);

					this.allLoaded = allStoresLoaded;

					if (allStoresLoaded) {
						this.animationTimeout = setTimeout(function () {
							_this.setState({ animationFinished: true });
						}, 300);
					}
				}

				return this.allLoaded;
			},

			render: function render() {
				if (this.state.animationFinished) {
					return _react2.default.createElement(Component, _extends({}, this.props, this.state));
				} else {
					var animationClass = this.isAllLoaded() ? 'fadeOut' : null;

					return _react2.default.createElement(
						'div',
						{ className: ' ' + animationClass }
					);
				}
			}
		});

		return LoadResourceComponent;
	}

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(118)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('get', __webpack_require__(441));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var hasOwn = __webpack_require__(221);
	var forIn = __webpack_require__(452);

	    /**
	     * Similar to Array/forEach but works over object properties and fixes Don't
	     * Enum bug on IE.
	     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation
	     */
	    function forOwn(obj, fn, thisObj){
	        forIn(obj, function(val, key){
	            if (hasOwn(obj, key)) {
	                return fn.call(thisObj, obj[key], key, obj);
	            }
	        });
	    }

	    module.exports = forOwn;




/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = routerWarning;
	exports._resetWarned = _resetWarned;

	var _warning = __webpack_require__(516);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var warned = {};

	function routerWarning(falseToWarn, message) {
	  // Only issue deprecation warnings once.
	  if (message.indexOf('deprecated') !== -1) {
	    if (warned[message]) {
	      return;
	    }

	    warned[message] = true;
	  }

	  message = '[react-router] ' + message;

	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }

	  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
	}

	function _resetWarned() {
	  warned = {};
	}

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.ModalContent = exports.ModalFooter = exports.ModalHeader = exports.ModalClose = exports.ModalBody = exports.ModalBtn = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _ModalBtn = __webpack_require__(530);

	Object.defineProperty(exports, 'ModalBtn', {
		enumerable: true,
		get: function get() {
			return _interopRequireDefault(_ModalBtn).default;
		}
	});

	var _ModalBody = __webpack_require__(886);

	Object.defineProperty(exports, 'ModalBody', {
		enumerable: true,
		get: function get() {
			return _interopRequireDefault(_ModalBody).default;
		}
	});

	var _ModalClose = __webpack_require__(531);

	Object.defineProperty(exports, 'ModalClose', {
		enumerable: true,
		get: function get() {
			return _interopRequireDefault(_ModalClose).default;
		}
	});

	var _ModalHeader = __webpack_require__(889);

	Object.defineProperty(exports, 'ModalHeader', {
		enumerable: true,
		get: function get() {
			return _interopRequireDefault(_ModalHeader).default;
		}
	});

	var _ModalFooter = __webpack_require__(888);

	Object.defineProperty(exports, 'ModalFooter', {
		enumerable: true,
		get: function get() {
			return _interopRequireDefault(_ModalFooter).default;
		}
	});

	var _ModalContent = __webpack_require__(887);

	Object.defineProperty(exports, 'ModalContent', {
		enumerable: true,
		get: function get() {
			return _interopRequireDefault(_ModalContent).default;
		}
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Modal = __webpack_require__(29);

	var _Modal2 = _interopRequireDefault(_Modal);

	var _ViewState = __webpack_require__(79);

	var _ViewState2 = _interopRequireDefault(_ViewState);

	var _Dashboard = __webpack_require__(113);

	var _Dashboard2 = _interopRequireDefault(_Dashboard);

	var _Student = __webpack_require__(270);

	var _Student2 = _interopRequireDefault(_Student);

	var _AddLockedSection = __webpack_require__(877);

	var _AddLockedSection2 = _interopRequireDefault(_AddLockedSection);

	var _LockedResume = __webpack_require__(884);

	var _LockedResume2 = _interopRequireDefault(_LockedResume);

	var _LockedFeature = __webpack_require__(883);

	var _LockedFeature2 = _interopRequireDefault(_LockedFeature);

	var _LayoutReorder = __webpack_require__(882);

	var _LayoutReorder2 = _interopRequireDefault(_LayoutReorder);

	var _DeleteResume = __webpack_require__(878);

	var _DeleteResume2 = _interopRequireDefault(_DeleteResume);

	var _RemoveLockedFeatures = __webpack_require__(893);

	var _RemoveLockedFeatures2 = _interopRequireDefault(_RemoveLockedFeatures);

	var _PlanDetailsFree = __webpack_require__(890);

	var _PlanDetailsFree2 = _interopRequireDefault(_PlanDetailsFree);

	var _PlanDetailsPro = __webpack_require__(891);

	var _PlanDetailsPro2 = _interopRequireDefault(_PlanDetailsPro);

	var _PlanDetailsStudent = __webpack_require__(892);

	var _PlanDetailsStudent2 = _interopRequireDefault(_PlanDetailsStudent);

	var _Downgrade = __webpack_require__(879);

	var _Downgrade2 = _interopRequireDefault(_Downgrade);

	var _MaxResumes = __webpack_require__(885);

	var _MaxResumes2 = _interopRequireDefault(_MaxResumes);

	var _Unsubscribe = __webpack_require__(894);

	var _Unsubscribe2 = _interopRequireDefault(_Unsubscribe);

	var _Inspiration = __webpack_require__(880);

	var _Inspiration2 = _interopRequireDefault(_Inspiration);

	var _VerifyStudentEmail = __webpack_require__(895);

	var _VerifyStudentEmail2 = _interopRequireDefault(_VerifyStudentEmail);

	var _InviteStudents = __webpack_require__(881);

	var _InviteStudents2 = _interopRequireDefault(_InviteStudents);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function ModalView(_ref) {
		var viewState = _ref.viewState,
		    dashboard = _ref.dashboard,
		    isLoggedIn = _ref.isLoggedIn,
		    student = _ref.student;


		var modal = viewState.modal;

		switch (modal.name) {
			case _Modal2.default.LAYOUT_REORDER:
				return _react2.default.createElement(_LayoutReorder2.default, _extends({}, modal.props, { resume: dashboard.current(), reorderSection: viewState.reorderSection }));

			case _Modal2.default.LOCKED_RESUME:
				return _react2.default.createElement(_LockedResume2.default, _extends({}, modal.props, { isUserLoggedIn: isLoggedIn }));

			case _Modal2.default.LOCKED_FEATURE:
				return _react2.default.createElement(_LockedFeature2.default, _extends({}, modal.props, { isUserLoggedIn: isLoggedIn }));

			case _Modal2.default.ADD_LOCKED_SECTION:
				return _react2.default.createElement(_AddLockedSection2.default, _extends({}, modal.props, { isUserLoggedIn: isLoggedIn }));

			case _Modal2.default.DELETE_RESUME:
				return _react2.default.createElement(_DeleteResume2.default, modal.props);

			case _Modal2.default.REMOVE_LOCKED_FEATURES:
				return _react2.default.createElement(_RemoveLockedFeatures2.default, modal.props);

			case _Modal2.default.PLAN_DETAILS_FREE:
				return _react2.default.createElement(_PlanDetailsFree2.default, null);

			case _Modal2.default.PLAN_DETAILS_PRO:
				return _react2.default.createElement(_PlanDetailsPro2.default, null);

			case _Modal2.default.PLAN_DETAILS_STUDENT:
				return _react2.default.createElement(_PlanDetailsStudent2.default, null);

			case _Modal2.default.DOWNGRADE:
				return _react2.default.createElement(_Downgrade2.default, null);

			case _Modal2.default.UNSUBSCRIBE:
				return _react2.default.createElement(_Unsubscribe2.default, null);

			case _Modal2.default.INSPIRATION:
				return _react2.default.createElement(_Inspiration2.default, modal.props);

			case _Modal2.default.MAX_RESUMES:
				return _react2.default.createElement(_MaxResumes2.default, modal.props);

			case _Modal2.default.VERIFY_STUDENT_EMAIL:
				return _react2.default.createElement(_VerifyStudentEmail2.default, { student: student });

			case _Modal2.default.INVITE_STUDENTS:
				return _react2.default.createElement(_InviteStudents2.default, { invite: student.invite });

			default:
				return _react2.default.createElement('noscript', null);
		}
	}

	ModalView.propTypes = {
		viewState: _react2.default.PropTypes.instanceOf(_ViewState2.default),
		dashboard: _react2.default.PropTypes.instanceOf(_Dashboard2.default),
		student: _react2.default.PropTypes.instanceOf(_Student2.default),
		isLoggedIn: _react2.default.PropTypes.bool
	};

	exports.default = ModalView;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(73);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 45 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('map', __webpack_require__(1585));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _debounce2 = __webpack_require__(689);

	var _debounce3 = _interopRequireDefault(_debounce2);

	var _isEmpty2 = __webpack_require__(215);

	var _isEmpty3 = _interopRequireDefault(_isEmpty2);

	var _getOr2 = __webpack_require__(53);

	var _getOr3 = _interopRequireDefault(_getOr2);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _ResumeActions = __webpack_require__(18);

	var _ResumeActions2 = _interopRequireDefault(_ResumeActions);

	var _AnalyzerActions = __webpack_require__(131);

	var _AnalyzerActions2 = _interopRequireDefault(_AnalyzerActions);

	var _SaveActions = __webpack_require__(343);

	var _SaveActions2 = _interopRequireDefault(_SaveActions);

	var _AnalyticsActions = __webpack_require__(14);

	var _AnalyticsActions2 = _interopRequireDefault(_AnalyticsActions);

	var _AuthStore = __webpack_require__(8);

	var _AuthStore2 = _interopRequireDefault(_AuthStore);

	var _ImportResume = __webpack_require__(997);

	var _ImportResume2 = _interopRequireDefault(_ImportResume);

	var _Resume = __webpack_require__(15);

	var _Resume2 = _interopRequireDefault(_Resume);

	var _Analyzer = __webpack_require__(59);

	var _Analyzer2 = _interopRequireDefault(_Analyzer);

	var _Dashboard = __webpack_require__(113);

	var _Dashboard2 = _interopRequireDefault(_Dashboard);

	var _immutableTools = __webpack_require__(196);

	var _plan = __webpack_require__(34);

	var _plan2 = _interopRequireDefault(_plan);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var defaultItems = new _immutable2.default.List([(0, _ImportResume2.default)(new _Resume2.default({ isNew: true, _localId: _Resume2.default.generateLocalId() }))]);

	var ResumeStore = _reflux2.default.createStore({
		init: function init() {
			this.listenToMany(_ResumeActions2.default);
			this.listenTo(_AuthStore2.default, this.onUserChange);
			this.reset();
		},

		getInitialState: function getInitialState() {
			return this.state;
		},

		reset: function reset() {
			this.user = null;
			this.state = new _Dashboard2.default({ items: defaultItems });
		},

		onSetCurrentId: function onSetCurrentId(id) {

			this.state = this.state.setCurrentId(id);

			_SaveActions2.default.complete();
			this.trigger(this.state);
		},

		onSetCurrentIndex: function onSetCurrentIndex(currentIndex) {

			this.state = this.state.setCurrentIndex(currentIndex);

			_SaveActions2.default.complete();
			this.trigger(this.state);
		},

		onUserChange: function onUserChange(user) {
			var _this = this;

			this.user = user;
			this.state = this.state.updateItems(function (item) {
				return item.withLockedFeatures(_this.getPlan());
			});
			this.trigger(this.state);
		},

		onReset: function onReset() {
			this.reset();
			this.trigger(this.state);
		},

		getPlan: function getPlan() {
			return _plan2.default.find((0, _getOr3.default)(1, 'plan', this.user));
		},

		onLoadCompleted: function onLoadCompleted(response) {
			var _this2 = this;

			this.state = this.state.set('items', (0, _isEmpty3.default)(response.data) ? defaultItems : _Resume2.default.fromJS(response.data)).set('loaded', true).updateItems(function (item) {
				return item.withLayout().withLockedFeatures(_this2.getPlan());
			}).historyReset();

			_SaveActions2.default.complete();
			this.trigger(this.state);
		},

		onEmpty: function onEmpty() {
			this.state = this.state.set('loaded', true).updateCurrent(function (current) {
				return (0, _ImportResume2.default)(current, {});
			}).updateItems(function (item) {
				return item.withLayout();
			}).historyReset();

			_SaveActions2.default.empty();
			this.trigger(this.state);
		},

		onLoadFailed: function onLoadFailed() {
			this.state = this.state.set('loaded', true).updateCurrent(function (current) {
				return (0, _ImportResume2.default)(current, {}).withLayout();
			}).historyReset();

			_SaveActions2.default.failed();
			this.trigger(this.state);
		},

		onImport: function onImport() {
			var _this3 = this;

			this.state = this.state.set('loaded', true).updateCurrent(function (current) {
				return (0, _ImportResume2.default)(current, _this3.user).withLayout();
			}).historyReset();

			this.trigger(this.state);
			_SaveActions2.default.schedule(this.state.current());
		},

		onAdd: function onAdd() {
			this.state = this.state.filterUnsaved().addItem((0, _ImportResume2.default)(new _Resume2.default({ isNew: true, _localId: _Resume2.default.generateLocalId() }), this.user).withLayout()).historyReset();

			_SaveActions2.default.empty();
			this.trigger(this.state);
		},

		onDuplicate: function onDuplicate(id) {
			this.state = this.state.filterUnsaved().duplicateItemId(id).updateCurrent(function (current) {
				return current.set('_localId', _Resume2.default.generateLocalId());
			});

			_SaveActions2.default.schedule(this.state.current());
			this.trigger(this.state);
		},

		onRemoveUnsaved: function onRemoveUnsaved() {
			if (this.state.items.count() > 1) {
				this.state = this.state.filterUnsaved();
				_SaveActions2.default.complete();
				this.trigger(this.state);
			}
		},

		onDeleteCompleted: function onDeleteCompleted(response) {
			if (response.data._id) {
				this.state = this.state.deleteItemId(response.data._id);
				_AnalyticsActions2.default.resumesCountChange(this.state.filterUnsaved().items.count());
			}

			this.trigger(this.state);
		},

		triggerAndSave: function triggerAndSave(state) {
			this.trigger(state);
			this.save();
		},

		onSet: function onSet(path, value) {
			var _this4 = this;

			this.state = this.state.updateCurrent(function (current) {
				if (current.hasIn(path)) {
					return current.setIn(path, value).withLayout().withLockedFeatures(_this4.getPlan());
				} else {
					return current;
				}
			});

			this.triggerAndSave(this.state);
			_AnalyzerActions2.default.invalidate(_Analyzer2.default.convertPath(this.state.current(), path));
		},

		onSetIncremental: function onSetIncremental(path, value) {
			var oldState = this.state;

			this.state = this.state.updateIn(['items', this.state.currentIndex], function (current) {
				if (current.hasIn(path)) {
					var newState = current.setIn(path, value);
					return newState === current ? newState : newState.withLayout();
				} else {
					return current;
				}
			});

			if (oldState !== this.state) {
				_AnalyzerActions2.default.invalidate(path);
				this.trigger(this.state);
			}
		},

		onSetImmidiate: function onSetImmidiate(path, value) {
			this.state = this.state.updateCurrent(function (current) {
				return current.setIn(path, value);
			});
			this.trigger(this.state);

			if (this.user) {
				_SaveActions2.default.execute(this.state.current());
			}
		},

		save: (0, _debounce3.default)(function () {
			var _this5 = this;

			this.state = this.state.updateCurrent(function (current) {
				return current.withLockedFeatures(_this5.getPlan());
			});

			this.state = this.state.historyPush();
			this.trigger(this.state);

			if (this.user) {
				_SaveActions2.default.schedule(this.state.current());
				_AnalyticsActions2.default.resumeSave(this.state.current(), this.state.items.map(function (item) {
					return item.__v;
				}).max());
			}
		}, 200),

		onAddSection: function onAddSection(record) {
			this.state = this.state.updateCurrent(function (current) {
				return current.addSection(record).withLayout();
			});
			this.triggerAndSave(this.state);
		},

		onAddItem: function onAddItem(sectionIndex) {
			this.state = this.state.updateCurrent(function (current) {
				return current.addSectionItem(sectionIndex).withLayout();
			});
			this.triggerAndSave(this.state);
		},

		onMoveItem: function onMoveItem(sectionIndex, fromIndex, toIndex) {
			this.state = this.state.updateCurrent(function (current) {
				return current.updateIn(['sections', sectionIndex, 'items'], (0, _immutableTools.moveListItem)(fromIndex, toIndex)).withLayout();
			});

			this.triggerAndSave(this.state);
		},

		onDeleteSection: function onDeleteSection(sectionIndex) {
			this.state = this.state.updateCurrent(function (current) {
				return current.setIn(['sections', sectionIndex, 'enabled'], false).withLayout();
			});

			this.triggerAndSave(this.state);
		},

		onDeleteItem: function onDeleteItem(sectionIndex, itemIndex) {
			this.state = this.state.updateCurrent(function (current) {
				return current.deleteIn(['sections', sectionIndex, 'items', itemIndex]).withLayout();
			});

			this.triggerAndSave(this.state);
		},

		onSetId: function onSetId(localId, id, version) {

			var itemIndex = this.state.items.findIndex(function (item) {

				return item._id && item._id === id || item._localId && item._localId === localId;
			});

			itemIndex = itemIndex === -1 ? this.state.currentIndex : itemIndex;

			if (!this.state.getIn(['items', itemIndex, '_id'])) {
				_AnalyticsActions2.default.resumesCountChange(this.state.filterUnsaved().items.count());
			}

			this.state = this.state.setIn(['items', itemIndex, '_id'], id).setIn(['items', itemIndex, '__v'], version).delete(['items', itemIndex, 'isNew']);

			this.trigger(this.state);
		},

		onNavigateHistory: function onNavigateHistory(delta) {
			var _this6 = this;

			var history = this.state.history.go(delta);

			if (history !== this.history) {
				this.state = this.state.set('history', history).updateCurrent(function (current) {
					return history.current().set('__v', _this6.state.current().__v);
				});

				this.trigger(this.state);

				if (this.user) {
					_SaveActions2.default.schedule(this.state.current());
				}
			}
		},

		onMoveSectionToIndex: function onMoveSectionToIndex(index, toIndex) {
			this.state = this.state.updateCurrent(function (current) {
				return current.moveSectionToIndex(index, toIndex).withLayout();
			});

			this.triggerAndSave(this.state);
		},

		onMoveSectionToColumn: function onMoveSectionToColumn(index, page, column) {
			this.state = this.state.updateCurrent(function (current) {
				return current.moveSectionToColumn(index, page, column).withLayout();
			});

			this.triggerAndSave(this.state);
		},

		onRemoveLockedFeatures: function onRemoveLockedFeatures() {
			var _this7 = this;

			this.state = this.state.updateCurrent(function (current) {
				return current.removeLockedFeatures(_this7.getPlan()).withLayout();
			});

			this.triggerAndSave(this.state);
		}
	});

	exports.default = ResumeStore;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(668);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	var isType = __webpack_require__(55);
	var getFunctionName = __webpack_require__(223);

	module.exports = function getTypeName(ctor) {
	  if (isType(ctor)) {
	    return ctor.displayName;
	  }
	  return getFunctionName(ctor);
	};

/***/ },
/* 51 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ },
/* 52 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('getOr', __webpack_require__(441));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 54 */
/***/ function(module, exports) {

	module.exports = function isFunction(x) {
	  return typeof x === 'function';
	};

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(54);
	var isObject = __webpack_require__(104);

	module.exports = function isType(x) {
	  return isFunction(x) && isObject(x.meta);
	};

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMProperty = __webpack_require__(186);
	var ReactBrowserEventEmitter = __webpack_require__(323);
	var ReactCurrentOwner = __webpack_require__(107);
	var ReactDOMFeatureFlags = __webpack_require__(749);
	var ReactElement = __webpack_require__(68);
	var ReactEmptyComponentRegistry = __webpack_require__(756);
	var ReactInstanceHandles = __webpack_require__(187);
	var ReactInstanceMap = __webpack_require__(226);
	var ReactMarkupChecksum = __webpack_require__(759);
	var ReactPerf = __webpack_require__(77);
	var ReactReconciler = __webpack_require__(158);
	var ReactUpdateQueue = __webpack_require__(473);
	var ReactUpdates = __webpack_require__(78);

	var assign = __webpack_require__(21);
	var emptyObject = __webpack_require__(207);
	var containsNode = __webpack_require__(635);
	var instantiateReactComponent = __webpack_require__(480);
	var invariant = __webpack_require__(10);
	var setInnerHTML = __webpack_require__(330);
	var shouldUpdateReactComponent = __webpack_require__(483);
	var validateDOMNesting = __webpack_require__(485);
	var warning = __webpack_require__(23);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if (false) {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ?  false ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ?  false ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (false) {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}

	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);

	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);

	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    if (false) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);

	    if (false) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;

	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;

	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }

	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (false) {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if (false) {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    if (false) {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	     true ?  false ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },

	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;

	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },

	  ownerDocumentContextKey: ownerDocumentContextKey,

	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  getNodeFromInstance: getNodeFromInstance,

	  isValid: isValid,

	  purgeID: purgeID
	};

	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});

	module.exports = ReactMount;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(801);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _getOr2 = __webpack_require__(53);

	var _getOr3 = _interopRequireDefault(_getOr2);

	__webpack_require__(407);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _AuthStore = __webpack_require__(8);

	var _AuthStore2 = _interopRequireDefault(_AuthStore);

	var _BackButton = __webpack_require__(905);

	var _BackButton2 = _interopRequireDefault(_BackButton);

	var _reactRouter = __webpack_require__(12);

	var _Footer = __webpack_require__(132);

	var _Footer2 = _interopRequireDefault(_Footer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Overlay = _react2.default.createClass({
		displayName: 'Overlay',

		mixins: [_reflux2.default.connect(_AuthStore2.default, 'user')],

		propTypes: {
			className: _react2.default.PropTypes.string,
			back: _react2.default.PropTypes.bool,
			backStep: _react2.default.PropTypes.number,
			centerVertical: _react2.default.PropTypes.bool
		},

		getDefaultProps: function getDefaultProps() {
			return {
				className: '',
				back: true,
				backStep: 1,
				centerVertical: false
			};
		},

		componentWillMount: function componentWillMount() {
			document.querySelector('body').classList.add('overlay-page');
		},

		componentWillUnmount: function componentWillUnmount() {
			document.querySelector('body').classList.remove('overlay-page');
		},

		onClickClose: function onClickClose() {
			this.props.router.goBack();
		},

		render: function render() {
			var _this = this;

			var userPlan = (0, _getOr3.default)(1, 'user.plan', this.state);
			var isLoggedIn = Boolean(this.state.user);
			var centerVerticalClass = this.props.centerVertical ? 'vertical-center-container' : '';

			return _react2.default.createElement(
				'div',
				{ className: 'app ' + this.props.className },
				this.props.back ? _react2.default.createElement(_BackButton2.default, { onClick: function onClick(router) {
						return router.go(-_this.props.backStep);
					} }) : null,
				_react2.default.createElement(
					'button',
					{
						type: 'button',
						className: 'pos-top-right btn-muted-withRouter btn btn-link btn-close btn-xlg',
						onClick: function onClick() {
							return _this.onClickClose();
						} },
					_react2.default.createElement('i', { className: 'fa fa-close' })
				),
				_react2.default.createElement(
					'div',
					{ className: 'app-container container overlay ' + centerVerticalClass },
					this.props.children
				),
				_react2.default.createElement(_Footer2.default, {
					isLoggedIn: isLoggedIn,
					userPlan: userPlan })
			);
		}
	});

	exports.default = (0, _reactRouter.withRouter)(Overlay);

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _update2 = __webpack_require__(1569);

	var _update3 = _interopRequireDefault(_update2);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _Item = __webpack_require__(546);

	var _Item2 = _interopRequireDefault(_Item);

	var _ = __webpack_require__(1001);

	var AnalyzerRecords = _interopRequireWildcard(_);

	var _immutableTools = __webpack_require__(196);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var STATE_INITIAL = 'initial';
	var STATE_LOADING = 'loading';
	var STATE_LOADED = 'loaded';
	var STATE_ERROR = 'error';

	var Analyzer = function (_Immutable$Record) {
		_inherits(Analyzer, _Immutable$Record);

		function Analyzer() {
			_classCallCheck(this, Analyzer);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		Analyzer.prototype.invalidatePath = function invalidatePath(path) {
			return this.updateIn(path, (0, _immutableTools.updateRecursive)(_Item2.default, function (item) {
				return item.set('valid', false);
			}));
		};

		Analyzer.prototype.itemTypesCount = function itemTypesCount() {
			var errors = {};

			this.forEach((0, _immutableTools.traverseRecursive)(_Item2.default, [], function (item) {
				errors = (0, _update3.default)(item.type, function (count) {
					return count ? count + 1 : 1;
				}, errors);
			}));

			return errors;
		};

		Analyzer.prototype.firstItemPath = function firstItemPath() {
			var firstItem = null;

			this.forEach((0, _immutableTools.traverseRecursive)(_Item2.default, [], function (item, path) {
				if (!firstItem) {
					firstItem = path;
				}
			}));

			return firstItem;
		};

		return Analyzer;
	}(_immutable2.default.Record({
		record: 'Analyzer',
		state: STATE_INITIAL,
		enabled: false,
		sections: new _immutable2.default.Map(),
		header: new _immutable2.default.Map()
	}));

	exports.default = Analyzer;


	Analyzer.STATE_INITIAL = STATE_INITIAL;
	Analyzer.STATE_LOADING = STATE_LOADING;
	Analyzer.STATE_LOADED = STATE_LOADED;
	Analyzer.STATE_ERROR = STATE_ERROR;

	Analyzer.convertPath = function (resume, path) {
		var conveted = path;

		if (path[0] === 'sections' && path[1]) {
			conveted[1] = resume.sections.get(path[1]).record;
		}

		return conveted;
	};

	Analyzer.fromJS = (0, _immutableTools.fromJS)(AnalyzerRecords);

/***/ },
/* 60 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(31)
	  , createDesc = __webpack_require__(117);
	module.exports = __webpack_require__(30) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(16)
	  , hide      = __webpack_require__(61)
	  , has       = __webpack_require__(52)
	  , SRC       = __webpack_require__(145)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);

	__webpack_require__(94).inspectSource = function(it){
	  return $toString.call(it);
	};

	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(3)
	  , fails   = __webpack_require__(19)
	  , defined = __webpack_require__(73)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(198)
	  , defined = __webpack_require__(73);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 65 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var assert = __webpack_require__(32);
	var isString = __webpack_require__(317);
	var isFunction = __webpack_require__(54);
	var forbidNewOperator = __webpack_require__(222);

	module.exports = function irreducible(name, predicate) {

	  if (false) {
	    assert(isString(name), function () { return 'Invalid argument name ' + assert.stringify(name) + ' supplied to irreducible(name, predicate) (expected a string)'; });
	    assert(isFunction(predicate), 'Invalid argument predicate ' + assert.stringify(predicate) + ' supplied to irreducible(name, predicate) (expected a function)');
	  }

	  function Irreducible(value, path) {

	    if (false) {
	      forbidNewOperator(this, Irreducible);
	      path = path || [name];
	      assert(predicate(value), function () { return 'Invalid value ' + assert.stringify(value) + ' supplied to ' + path.join(project_name+'/dashboard'); });
	    }

	    return value;
	  }

	  Irreducible.meta = {
	    kind: 'irreducible',
	    name: name,
	    predicate: predicate,
	    identity: true
	  };

	  Irreducible.displayName = name;

	  Irreducible.is = predicate;

	  return Irreducible;
	};


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _function = __webpack_require__(733);

	var _function2 = _interopRequireDefault(_function);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  shouldComponentUpdate: _function2.default
	};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(107);

	var assign = __webpack_require__(21);
	var canDefineProperty = __webpack_require__(328);

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }

	  return element;
	};

	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);

	  if (false) {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }

	  return newElement;
	};

	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(199)
	  , createDesc     = __webpack_require__(117)
	  , toIObject      = __webpack_require__(64)
	  , toPrimitive    = __webpack_require__(82)
	  , has            = __webpack_require__(52)
	  , IE8_DOM_DEFINE = __webpack_require__(586)
	  , gOPD           = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(30) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(52)
	  , toObject    = __webpack_require__(44)
	  , IE_PROTO    = __webpack_require__(339)('IE_PROTO')
	  , ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var isNil = __webpack_require__(89);
	var isString = __webpack_require__(317);

	module.exports = function isTypeName(name) {
	  return isNil(name) || isString(name);
	};

/***/ },
/* 72 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 73 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(19);

	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 75 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */

	"use strict";

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 76 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);

	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}

	module.exports = arrayMap;


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (false) {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (false) {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(466);
	var PooledClass = __webpack_require__(128);
	var ReactPerf = __webpack_require__(77);
	var ReactReconciler = __webpack_require__(158);
	var Transaction = __webpack_require__(327);

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(10);

	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}

	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _Popup = __webpack_require__(575);

	var _Popup2 = _interopRequireDefault(_Popup);

	var _Modal = __webpack_require__(29);

	var _Modal2 = _interopRequireDefault(_Modal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ViewState = function (_Immutable$Record) {
		_inherits(ViewState, _Immutable$Record);

		function ViewState() {
			_classCallCheck(this, ViewState);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return ViewState;
	}(_immutable2.default.Record({
		popup: new _Popup2.default(),
		modal: new _Modal2.default(),
		notificationsShown: false,
		menuSlideoutShown: false,
		toolbox: null,
		section: null,
		item: null,
		popover: null,
		scrollIntoView: null,
		analyzerItems: new _immutable2.default.List(),
		reorderSection: null,
		activeTopStrengthItemId: null,
		showToolboxTabs: true,
		toolboxSelectedTab: null
	}));

	exports.default = ViewState;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(95)
	  , IObject  = __webpack_require__(198)
	  , toObject = __webpack_require__(44)
	  , toLength = __webpack_require__(39)
	  , asc      = __webpack_require__(1027);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(3)
	  , core    = __webpack_require__(94)
	  , fails   = __webpack_require__(19);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(24);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(341)('wks')
	  , uid        = __webpack_require__(283)
	  , Symbol     = __webpack_require__(119).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(1431),
	    baseMatchesProperty = __webpack_require__(1432),
	    identity = __webpack_require__(124),
	    isArray = __webpack_require__(28),
	    property = __webpack_require__(1594);

	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}

	module.exports = baseIteratee;


/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(442),
	    isLength = __webpack_require__(443);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(649),
	    baseKeys = __webpack_require__(424),
	    isArrayLike = __webpack_require__(86);

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}

	module.exports = keys;


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(660);

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ },
/* 89 */
/***/ function(module, exports) {

	module.exports = function isNil(x) {
	  return x === null || x === void 0;
	};

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.capitalize = capitalize;
	exports.callbackName = callbackName;
	exports.isObject = isObject;
	exports.extend = extend;
	exports.isFunction = isFunction;
	exports.object = object;
	exports.isArguments = isArguments;
	exports.throwIf = throwIf;

	function capitalize(string) {
	    return string.charAt(0).toUpperCase() + string.slice(1);
	}

	function callbackName(string, prefix) {
	    prefix = prefix || "on";
	    return prefix + exports.capitalize(string);
	}

	/*
	 * isObject, extend, isFunction, isArguments are taken from undescore/lodash in
	 * order to remove the dependency
	 */

	function isObject(obj) {
	    var type = typeof obj;
	    return type === "function" || type === "object" && !!obj;
	}

	function extend(obj) {
	    if (!isObject(obj)) {
	        return obj;
	    }
	    var source, prop;
	    for (var i = 1, length = arguments.length; i < length; i++) {
	        source = arguments[i];
	        for (prop in source) {
	            if (Object.getOwnPropertyDescriptor && Object.defineProperty) {
	                var propertyDescriptor = Object.getOwnPropertyDescriptor(source, prop);
	                Object.defineProperty(obj, prop, propertyDescriptor);
	            } else {
	                obj[prop] = source[prop];
	            }
	        }
	    }
	    return obj;
	}

	function isFunction(value) {
	    return typeof value === "function";
	}

	exports.EventEmitter = __webpack_require__(1280);

	exports.nextTick = function (callback) {
	    setTimeout(callback, 0);
	};

	function object(keys, vals) {
	    var o = {},
	        i = 0;
	    for (; i < keys.length; i++) {
	        o[keys[i]] = vals[i];
	    }
	    return o;
	}

	function isArguments(value) {
	    return typeof value === "object" && "callee" in value && typeof value.length === "number";
	}

	function throwIf(val, msg) {
	    if (val) {
	        throw Error(msg || val);
	    }
	}

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _asyncAction = __webpack_require__(166);

	var _asyncAction2 = _interopRequireDefault(_asyncAction);

	var _http = __webpack_require__(33);

	var _http2 = _interopRequireDefault(_http);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var PaymentActions = _reflux2.default.createActions({
		'execute': _asyncAction2.default,
		'promocodeAdd': _asyncAction2.default,
		'clientToken': _asyncAction2.default,
		'unsubscribe': _asyncAction2.default,
		'getPaymentInfo': _asyncAction2.default,
		'updatePaymentMethod': _asyncAction2.default,
		'getInvoice': _asyncAction2.default
	});

	PaymentActions.promocodeAdd.listen(function (promocode) {
		_http2.default.post('users/payment/check_promocode', { promocode: promocode }).then(PaymentActions.promocodeAdd.completed).catch(PaymentActions.promocodeAdd.failed);
	});

	PaymentActions.clientToken.listen(function (customerId) {
		_http2.default.get('users/payment/client_token?customerId=' + (customerId ? customerId : '')).then(PaymentActions.clientToken.completed).catch(PaymentActions.clientToken.failed);
	});

	PaymentActions.execute.listen(function (data) {
		_http2.default.post('users/payment/execute', data).then(PaymentActions.execute.completed).catch(PaymentActions.execute.failed);
	});

	PaymentActions.unsubscribe.listen(function () {
		_http2.default.post('users/payment/unsubscribe').then(PaymentActions.unsubscribe.completed).catch(PaymentActions.unsubscribe.failed);
	});

	PaymentActions.getPaymentInfo.listen(function (data) {
		_http2.default.get('users/payment/payment_info?details=' + (data && data.details ? 'true' : '')).then(PaymentActions.getPaymentInfo.completed).catch(PaymentActions.getPaymentInfo.failed);
	});

	PaymentActions.updatePaymentMethod.listen(function (data) {
		_http2.default.post('users/payment/update_payment_method', data).then(PaymentActions.updatePaymentMethod.completed).catch(PaymentActions.updatePaymentMethod.failed);
	});

	exports.default = PaymentActions;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _range2 = __webpack_require__(1563);

	var _range3 = _interopRequireDefault(_range2);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DateRange = function (_Immutable$Record) {
		_inherits(DateRange, _Immutable$Record);

		function DateRange() {
			_classCallCheck(this, DateRange);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		DateRange.prototype.getFromYears = function getFromYears() {
			return (0, _range3.default)(this.toYear || new Date().getFullYear(), 1950);
		};

		DateRange.prototype.getToYears = function getToYears() {
			return (0, _range3.default)(this.fromYear || 1950, new Date().getFullYear() + 5);
		};

		DateRange.prototype.hasFrom = function hasFrom() {
			return this.fromYear || this.fromMonth;
		};

		DateRange.prototype.hasTo = function hasTo() {
			return this.toYear || this.toMonth;
		};

		return DateRange;
	}(_immutable2.default.Record({
		record: 'DateRange',
		fromYear: '',
		fromMonth: '',
		toMonth: '',
		toYear: '',
		isOngoing: false
	}));

	exports.default = DateRange;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = ReactCSSTransitionGroup;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactAddonsCssTransitionGroup = __webpack_require__(105);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function ReactCSSTransitionGroup(props) {
		var adjustedProps = {};

		var isIE = navigator && navigator.appVersion.indexOf('Trident/') > 0;

		if (isIE) {
			var IE_11_TRANSITION_FIX = 200;

			if (props.transitionAppearTimeout) {
				adjustedProps.transitionAppearTimeout += IE_11_TRANSITION_FIX;
			}

			if (props.transitionEnterTimeout) {
				adjustedProps.transitionEnterTimeout += IE_11_TRANSITION_FIX;
			}

			if (props.transitionLeaveTimeout) {
				adjustedProps.transitionLeaveTimeout += IE_11_TRANSITION_FIX;
			}
		}

		adjustedProps = Object.assign({}, props, adjustedProps);

		return _react2.default.createElement(_reactAddonsCssTransitionGroup2.default, adjustedProps);
	}

	ReactCSSTransitionGroup.propTypes = {
		transitionAppearTimeout: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.number]),
		transitionEnterTimeout: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.number]),
		transitionLeaveTimeout: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.number])
	};

/***/ },
/* 94 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(60);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(602)
	  , $export = __webpack_require__(3)
	  , shared  = __webpack_require__(233)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(605)));

	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};

	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(30)){
	  var LIBRARY             = __webpack_require__(138)
	    , global              = __webpack_require__(16)
	    , fails               = __webpack_require__(19)
	    , $export             = __webpack_require__(3)
	    , $typed              = __webpack_require__(281)
	    , $buffer             = __webpack_require__(386)
	    , ctx                 = __webpack_require__(95)
	    , anInstance          = __webpack_require__(137)
	    , propertyDesc        = __webpack_require__(117)
	    , hide                = __webpack_require__(61)
	    , redefineAll         = __webpack_require__(142)
	    , toInteger           = __webpack_require__(118)
	    , toLength            = __webpack_require__(39)
	    , toIndex             = __webpack_require__(144)
	    , toPrimitive         = __webpack_require__(82)
	    , has                 = __webpack_require__(52)
	    , same                = __webpack_require__(599)
	    , classof             = __webpack_require__(197)
	    , isObject            = __webpack_require__(24)
	    , toObject            = __webpack_require__(44)
	    , isArrayIter         = __webpack_require__(372)
	    , create              = __webpack_require__(139)
	    , getPrototypeOf      = __webpack_require__(70)
	    , gOPN                = __webpack_require__(140).f
	    , getIterFn           = __webpack_require__(388)
	    , uid                 = __webpack_require__(145)
	    , wks                 = __webpack_require__(25)
	    , createArrayMethod   = __webpack_require__(80)
	    , createArrayIncludes = __webpack_require__(272)
	    , speciesConstructor  = __webpack_require__(380)
	    , ArrayIterators      = __webpack_require__(389)
	    , Iterators           = __webpack_require__(170)
	    , $iterDetect         = __webpack_require__(278)
	    , setSpecies          = __webpack_require__(143)
	    , arrayFill           = __webpack_require__(365)
	    , arrayCopyWithin     = __webpack_require__(579)
	    , $DP                 = __webpack_require__(31)
	    , $GOPD               = __webpack_require__(69)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';

	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });

	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });

	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });

	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };

	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };

	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };

	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };

	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };

	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };

	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };

	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };

	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };

	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });

	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };

	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };

	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };

	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };

	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };

	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };

	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }

	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });

	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }

	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });

	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }

	    O[NAME] = TypedArray;

	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });

	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

	    $export($export.P, NAME, proto);

	    setSpecies(NAME);

	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});

	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});

	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});

	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 98 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('includes', __webpack_require__(1575));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var isType = __webpack_require__(55);
	var getFunctionName = __webpack_require__(223);
	var assert = __webpack_require__(32);
	var stringify = __webpack_require__(726);

	// creates an instance of a type, handling the optional new operator
	module.exports = function create(type, value, path) {
	  if (isType(type)) {
	    return !type.meta.identity && typeof value === 'object' && value !== null ? new type(value, path): type(value, path);
	  }

	  if (false) {
	    // here type should be a class constructor and value some instance, just check membership and return the value
	    path = path || [getFunctionName(type)];
	    assert(value instanceof type, function () { return 'Invalid value ' + stringify(value) + ' supplied to ' + path.join(project_name+'/dashboard'); });
	  }

	  return value;
	};

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var isType = __webpack_require__(55);

	// returns true if x is an instance of type
	module.exports = function is(x, type) {
	  if (isType(type)) {
	    return type.is(x);
	  }
	  return x instanceof type; // type should be a class constructor
	};


/***/ },
/* 102 */
/***/ function(module, exports) {

	module.exports = function isArray(x) {
	  return Array.isArray ? Array.isArray(x) : x instanceof Array;
	};

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	var assert = __webpack_require__(32);
	var Boolean = __webpack_require__(717);
	var isType = __webpack_require__(55);
	var getTypeName = __webpack_require__(50);

	// return true if the type constructor behaves like the identity function
	module.exports = function isIdentity(type) {
	  if (isType(type)) {
	    if (false) {
	      assert(Boolean.is(type.meta.identity), function () { return 'Invalid meta identity ' + assert.stringify(type.meta.identity) + ' supplied to type ' + getTypeName(type); });
	    }
	    return type.meta.identity;
	  }
	  // for tcomb the other constructors, like ES6 classes, are identity-like
	  return true;
	};

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var isNil = __webpack_require__(89);
	var isArray = __webpack_require__(102);

	module.exports = function isObject(x) {
	  return !isNil(x) && typeof x === 'object' && !isArray(x);
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1763);

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(289);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 107 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 108 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _http = __webpack_require__(33);

	var _http2 = _interopRequireDefault(_http);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var FeedbackActions = _reflux2.default.createActions({
		'addPoint': {},
		'selectPoint': {},
		'triggerChange': {},
		'filterByUser': {},
		'toggleResolved': {},
		'resolvePoint': {
			children: ['completed', 'failed']
		},
		'removePoint': {
			children: ['completed', 'failed']
		},
		'updatePointText': {
			children: ['completed', 'failed']
		},
		'load': {
			children: ['completed', 'failed']
		},
		'loadAll': {},
		'loadAllByResumeId': {},
		'reset': {}
	});

	FeedbackActions.updatePointText.listen(function (linkToken, item) {
		_http2.default.post('resumeFeedback/add/' + linkToken, {
			item: item.toJS()
		}).then(function () {
			return FeedbackActions.updatePointText.completed(item);
		}).catch(FeedbackActions.updatePointText.failed);
	});

	FeedbackActions.resolvePoint.listen(function (linkToken, pointId) {
		_http2.default.get('resumeFeedback/resolve/' + linkToken + '/' + pointId).then(function (response) {
			return FeedbackActions.resolvePoint.completed(pointId);
		}).catch(FeedbackActions.resolvePoint.failed);
	});

	FeedbackActions.removePoint.listen(function (linkToken, pointId) {
		_http2.default.post('resumeFeedback/remove/' + linkToken, {
			itemId: pointId
		}).then(function (response) {
			return FeedbackActions.removePoint.completed(pointId, response);
		}).catch(FeedbackActions.removePoint.failed);
	});

	FeedbackActions.load.listen(function (linkToken, mergeList) {
		_http2.default.get('resumeFeedback/view/' + linkToken).then(function (response) {
			return FeedbackActions.load.completed(response, mergeList, true);
		}).catch(function (response) {
			return FeedbackActions.load.failed(response, true, linkToken, mergeList);
		});
	});

	FeedbackActions.loadAllByResumeId.listen(function (resumeId) {
		_http2.default.get('resumeFeedback/viewAllByResumeId/' + resumeId).then(FeedbackActions.load.completed).catch(FeedbackActions.load.failed);
	});

	exports.default = FeedbackActions;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _http = __webpack_require__(33);

	var _http2 = _interopRequireDefault(_http);

	var _NotificationActions = __webpack_require__(22);

	var _NotificationActions2 = _interopRequireDefault(_NotificationActions);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	var _asyncAction = __webpack_require__(166);

	var _asyncAction2 = _interopRequireDefault(_asyncAction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var StudentActions = _reflux2.default.createActions({
		'invite': _asyncAction2.default,
		'loadUniversity': _asyncAction2.default,
		'verifyEmail': _asyncAction2.default,
		'requestAccess': _asyncAction2.default
	});

	StudentActions.invite.listen(function (emails) {
		_http2.default.post(project_name+'/studentVerification/invite', { emails: emails }).then(StudentActions.invite.completed).catch(StudentActions.invite.failed);
	});

	StudentActions.loadUniversity.listen(function () {
		_http2.default.get('users/studentVerification/status').then(StudentActions.loadUniversity.completed).catch(StudentActions.loadUniversity.failed);
	});

	StudentActions.verifyEmail.listen(function (email) {
		_http2.default.post('users/studentVerification/send', { email: email }).then(StudentActions.verifyEmail.completed).catch(StudentActions.verifyEmail.failed);
	});

	StudentActions.requestAccess.listen(function (email) {
		_http2.default.post('users/studentVerification/requestAccess', { email: email }).then(StudentActions.requestAccess.completed).catch(StudentActions.requestAccess.failed);
	});

	exports.default = StudentActions;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	__webpack_require__(1315);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _ViewState = __webpack_require__(79);

	var _ViewState2 = _interopRequireDefault(_ViewState);

	var _Link = __webpack_require__(26);

	var _Link2 = _interopRequireDefault(_Link);

	var _Nav = __webpack_require__(133);

	var _Nav2 = _interopRequireDefault(_Nav);

	var _NavUser = __webpack_require__(900);

	var _NavUser2 = _interopRequireDefault(_NavUser);

	var _Logo = __webpack_require__(896);

	var _Logo2 = _interopRequireDefault(_Logo);

	var _reactSticky = __webpack_require__(465);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function onClickHamburger(event) {
		_ViewStateActions2.default.set({ menuSlideoutShown: true });
	}

	function Navbar(_ref) {
		var children = _ref.children,
		    user = _ref.user,
		    viewState = _ref.viewState,
		    fixed = _ref.fixed,
		    type = _ref.type,
		    logo = _ref.logo,
		    className = _ref.className,
		    hideButtons = _ref.hideButtons,
		    hideMobileMenu = _ref.hideMobileMenu,
		    hideMobileButtons = _ref.hideMobileButtons;

		var isLoggedIn = Boolean(user);
		var typeCass = 'navbar-' + type;

		var navbarContent = _react2.default.createElement(
			'nav',
			{ className: 'navbar ' + typeCass + ' ' + className },
			_react2.default.createElement(
				'div',
				{ className: 'container-fluid' },
				_react2.default.createElement(
					'div',
					{ className: 'navbar-header' },
					logo ? _react2.default.createElement(_Logo2.default, { inverted: type === 'inverse' }) : null,
					!hideMobileMenu ? _react2.default.createElement(
						'button',
						{
							type: 'button',
							onClick: function onClick() {
								return onClickHamburger();
							},
							className: 'navbar-toggle' },
						_react2.default.createElement('span', { className: 'icon-bar' }),
						_react2.default.createElement('span', { className: 'icon-bar' }),
						_react2.default.createElement('span', { className: 'icon-bar' })
					) : null
				),
				!hideButtons ? _react2.default.createElement(
					'div',
					{ className: 'hidden-xs' },
					_react2.default.createElement(
						_Nav2.default,
						{ align: 'center' },
						isLoggedIn && user && user.plan === 1 ? [_react2.default.createElement(
							'li',
							{ key: 'upgrade' },
							_react2.default.createElement(
								_Link2.default,
								{
									className: 'btn navbar-btn btn-link upgrade-btn',
									to: project_name+'/dashboard/plans' },
								upgrade
							)
						), _react2.default.createElement(
							'li',
							{ key: 'free' },
							_react2.default.createElement(
								_Link2.default,
								{
									className: 'btn navbar-btn btn-link invite-link-btn',
									to: project_name+'/dashboard/getInviteLink' },
								Get1_free_month
							)
						)] : null
					),
					_react2.default.createElement(
						_Nav2.default,
						{ align: 'right' },
						_react2.default.createElement(
							'li',
							null,
							_react2.default.createElement(_NavUser2.default, {
								user: user,
								viewState: viewState })
						)
					),
					children
				) : _react2.default.createElement(
					'div',
					{ className: hideMobileButtons ? 'hidden-xs' : '' },
					children
				)
			)
		);

		if (fixed) {
			return _react2.default.createElement(
				_reactSticky.Sticky,
				{
					topOffset: 30,
					className: 'navbar-container',
					stickyClassName: 'navbar-sticky' },
				navbarContent
			);
		} else {
			return navbarContent;
		}
	}

	Navbar.propTypes = {
		user: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.object, _react2.default.PropTypes.bool]),
		viewState: _react2.default.PropTypes.instanceOf(_ViewState2.default),
		logo: _react2.default.PropTypes.bool,
		fixed: _react2.default.PropTypes.bool,
		type: _react2.default.PropTypes.string,
		className: _react2.default.PropTypes.string,
		hideButtons: _react2.default.PropTypes.bool,
		hideMobileMenu: _react2.default.PropTypes.bool,
		hideMobileButtons: _react2.default.PropTypes.bool
	};

	Navbar.defaultProps = {
		collapsed: false,
		fixed: false,
		logo: true,
		type: 'default',
		className: '',
		hideButtons: false,
		hideMobileMenu: false,
		hideMobileButtons: true
	};

	exports.default = Navbar;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.FeedbackState = exports.FeedbackUser = exports.FeedbackItem = exports.CurrentItem = undefined;

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	var _FeedbackActions = __webpack_require__(109);

	var _FeedbackActions2 = _interopRequireDefault(_FeedbackActions);

	var _generateRandomId = __webpack_require__(1019);

	var _generateRandomId2 = _interopRequireDefault(_generateRandomId);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var COLORS = ['#0087FF', '#FF004E', '#FF9500', '#A600B6', '#56D700', '#7A4600', '#A7957F', '#666666', '#885372', '#FF4900', '#FF00B6', '#2F00DA', '#00CAFF', '#003F00', '#9B6E38'];

	var CurrentItem = exports.CurrentItem = function (_Immutable$Record) {
		_inherits(CurrentItem, _Immutable$Record);

		function CurrentItem() {
			_classCallCheck(this, CurrentItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return CurrentItem;
	}(_immutable2.default.Record({
		id: null,
		isChanged: false
	}));

	var FeedbackItem = exports.FeedbackItem = function (_Immutable$Record2) {
		_inherits(FeedbackItem, _Immutable$Record2);

		function FeedbackItem() {
			_classCallCheck(this, FeedbackItem);

			return _possibleConstructorReturn(this, _Immutable$Record2.apply(this, arguments));
		}

		return FeedbackItem;
	}(_immutable2.default.Record({
		x: 0,
		y: 0,
		text: '',
		id: null,
		userId: undefined,
		isResolved: false
	}));

	var FeedbackUser = exports.FeedbackUser = function (_Immutable$Record3) {
		_inherits(FeedbackUser, _Immutable$Record3);

		function FeedbackUser() {
			_classCallCheck(this, FeedbackUser);

			return _possibleConstructorReturn(this, _Immutable$Record3.apply(this, arguments));
		}

		return FeedbackUser;
	}(_immutable2.default.Record({
		_id: null,
		name: null,
		color: null
	}));

	var FeedbackState = exports.FeedbackState = function (_Immutable$Record4) {
		_inherits(FeedbackState, _Immutable$Record4);

		function FeedbackState() {
			_classCallCheck(this, FeedbackState);

			return _possibleConstructorReturn(this, _Immutable$Record4.apply(this, arguments));
		}

		FeedbackState.prototype.getFilteredItems = function getFilteredItems() {
			if (this.showResolved) {
				return this.items;
			}

			return this.items.filter(function (item) {
				return !item.get('isResolved');
			});
		};

		FeedbackState.prototype.getOpenedItem = function getOpenedItem() {
			var openedItemId = this.getIn(['openedItem', 'id'], null);
			return this.getFilteredItems().get(openedItemId, null);
		};

		return FeedbackState;
	}(_immutable2.default.Record({
		items: _immutable2.default.List(),
		users: _immutable2.default.List(),
		openedItem: CurrentItem,
		filterByUser: null,
		linkToken: null,
		showResolved: false,
		isEnabled: false,
		isLoading: false }));

	var FeedbackStore = _reflux2.default.createStore({
		init: function init() {
			this.state = new FeedbackState();
			this.listenToMany(_FeedbackActions2.default);
		},

		getInitialState: function getInitialState() {
			return this.state;
		},

		_removeEmpty: function _removeEmpty() {
			this.state = this.state.updateIn(['items'], function (arr) {
				return arr.filter(function (item) {
					return item.get('text');
				});
			});
		},

		toggleResolved: function toggleResolved() {
			this.state = this.state.set('showResolved', !this.state.get('showResolved'));
			this.trigger(this.state);
		},

		filterByUser: function filterByUser(userId) {
			this.state = this.state.set('filterByUser', userId).set('openedItem', new CurrentItem());
			this.trigger(this.state);
		},

		addPoint: function addPoint(x, y) {
			this._removeEmpty();
			this.state = this.state.updateIn(['items'], function (arr) {
				return arr.push(new FeedbackItem({
					x: x,
					y: y,
					id: (0, _generateRandomId2.default)()
				}));
			});
			this.state = this.state.set('openedItem', new CurrentItem({
				id: this.state.get('items').size - 1
			}));
			this.trigger(this.state);
		},

		resolvePointCompleted: function resolvePointCompleted(pointId) {
			var itemIndex = this.state.get('items').findIndex(function (item) {
				return item.get('id') === pointId;
			});

			this.state = this.state.setIn(['items', itemIndex, 'isResolved'], true).set('openedItem', new CurrentItem());
			this.trigger(this.state);
		},

		removePointCompleted: function removePointCompleted(pointId, res) {
			var itemId = this.state.get('items').findIndex(function (item) {
				return item.get('id') === pointId;
			});

			this.state = this.state.deleteIn(['items', itemId]).set('openedItem', new CurrentItem());
			this.trigger(this.state);
		},

		selectPoint: function selectPoint(pointId) {
			this._removeEmpty();
			this.state = this.state.set('openedItem', new CurrentItem({
				id: pointId
			}));
			this.trigger(this.state);
		},

		updatePointTextCompleted: function updatePointTextCompleted(newItem) {
			var itemId = this.state.get('items').findIndex(function (item) {
				return item.get('id') === newItem.get('id');
			});

			this.state = this.state.setIn(['items', itemId], newItem).set('openedItem', new CurrentItem());
			this.trigger(this.state);
		},

		reset: function reset() {
			this.state = new FeedbackState();
			this.trigger(this.state);
		},

		load: function load(linkToken, mergeList) {
			if (!mergeList) {
				this.reset();
			}
		},

		loadAllByResumeId: function loadAllByResumeId() {
			this.state = this.state.set('isLoading', true).set('isEnabled', true);
			this.trigger(this.state);
		},

		loadCompleted: function loadCompleted(res, mergeList, shouldAddExample) {
			var result = _immutable2.default.fromJS(res.data);

			var users = result.get('users', _immutable2.default.List()).map(function (user, index) {
				return new FeedbackUser(user.set('color', COLORS[index]));
			});

			var items = result.get('items');
			if (mergeList) {
				items = items.concat(mergeList);
			}

			if (items.size === 0) {
				return this.loadFailed({}, shouldAddExample);
			}

			items = items.map(function (item) {
				return new FeedbackItem(item);
			});

			this.state = this.state.set('items', items).set('users', users).set('isLoading', false).set('isEnabled', true);

			if (result.get('linkToken')) {
				this.state = this.state.set('linkToken', result.get('linkToken'));
			}

			this.trigger(this.state);
		},

		loadFailed: function loadFailed(res, shouldAddExample, linkToken, mergeList) {
			this.state = this.state.set('isEnabled', true).set('isLoading', false);
			// if the load request fails, but there are already items
			if (mergeList) {
				this.state = this.state.set('items', mergeList);
				this.trigger(this.state);
				return;
			}

			if (!shouldAddExample) {
				_ViewStateActions2.default.set({
					toolbox: 'FeedbackState'
				});
				this.trigger(this.state);
				return;
			}

			var temporaryId = (0, _generateRandomId2.default)();
			var items = _immutable2.default.List().set('0', new FeedbackItem({
				x: 330,
				y: 170,
				id: temporaryId,
				text: ''
			}));

			this.state = this.state.set('items', items).set('openedItem', new CurrentItem({
				id: 0,
				isChanged: true
			}));

			if (linkToken) {
				this.state = this.state.set('linkToken', linkToken);
			}

			this.trigger(this.state);
		},

		triggerChange: function triggerChange() {
			this.state = this.state.setIn(['openedItem', 'isChanged'], true);
			this.trigger(this.state);
		}
	});

	exports.default = FeedbackStore;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _clamp2 = __webpack_require__(307);

	var _clamp3 = _interopRequireDefault(_clamp2);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _History = __webpack_require__(559);

	var _History2 = _interopRequireDefault(_History);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Dashboard = function (_Immutable$Record) {
		_inherits(Dashboard, _Immutable$Record);

		function Dashboard() {
			_classCallCheck(this, Dashboard);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		Dashboard.prototype.setCurrentId = function setCurrentId(id) {
			var index = this.items.findIndex(function (item) {
				$('#btn-download-main-page').addClass('disabled2');
				setTimeout(function(){
						demoFromHTML(item._id);
				},2000);
				return item._id === id;
			});

			if (index !== -1 && this.currentIndex !== index) {
				return this.set('currentIndex', index).historyReset();
			} else {
				return this;
			}
		};

		Dashboard.prototype.setCurrentIndex = function setCurrentIndex(index) {
			var boundedIndex = (0, _clamp3.default)(0, this.items.count() - 1, index);

			if (this.currentIndex !== boundedIndex) {
				return this.set('currentIndex', boundedIndex).historyReset();
			} else {
				return this;
			}
		};

		Dashboard.prototype.isLoaded = function isLoaded() {
			return this.items.filter(function (item) {
				return item._id;
			}).count() > 0;
		};

		Dashboard.prototype.findItem = function findItem(id) {
			return this.items.find(function (item) {
				return item._id === id;
			});
		};

		Dashboard.prototype.filterUnsaved = function filterUnsaved() {
			var dashboard = this.update('items', function (items) {
				return items.filter(function (item) {
					return !item.isNew;
				});
			});
			return dashboard.set('currentIndex', (0, _clamp3.default)(0, dashboard.items.count() - 1, dashboard.currentIndex));
		};

		Dashboard.prototype.addItem = function addItem(item) {
			var dashboard = this.update('items', function (items) {
				return items.unshift(item);
			});
			return dashboard.set('currentIndex', 0);
		};

		Dashboard.prototype.duplicateItemId = function duplicateItemId(id) {
			return this.addItem(this.findItem(id).delete('_id').delete('share').deleteIn(['style', 'fontBody']));
		};

		Dashboard.prototype.deleteItemId = function deleteItemId(id) {
			var index = this.items.findIndex(function (item) {
				return item._id === id;
			});
			if (index !== -1) {
				var dashboard = this.update('items', function (items) {
					return items.delete(index);
				});
				return dashboard.set('currentIndex', (0, _clamp3.default)(0, dashboard.items.count() - 1, this.currentIndex - 1));
			} else {
				return this;
			}
		};

		Dashboard.prototype.updateCurrent = function updateCurrent(updater) {
			return this.updateIn(['items', this.currentIndex], updater).deleteIn(['items', this.currentIndex, 'isNew']);
		};

		Dashboard.prototype.updateItems = function updateItems(updater) {
			return this.update('items', function (items) {
				return items.map(updater);
			});
		};

		Dashboard.prototype.canAdd = function canAdd(plan) {
			return this.items.count() < plan.maxResumes;
		};

		Dashboard.prototype.current = function current() {
			return this.items.get(this.currentIndex);
		};

		Dashboard.prototype.next = function next() {
			if (this.currentIndex < this.items.count() - 1) {
				return this.items.get(this.currentIndex + 1);
			}
		};

		Dashboard.prototype.prev = function prev() {
			if (this.currentIndex > 0) {
				return this.items.get(this.currentIndex - 1);
			}
		};

		Dashboard.prototype.historyReset = function historyReset() {
			var _this2 = this;

			return this.update('history', function (history) {
				return history.reset(_this2.current());
			});
		};

		Dashboard.prototype.historyPush = function historyPush() {
			var _this3 = this;

			return this.update('history', function (history) {
				return history.push(_this3.current());
			});
		};

		return Dashboard;
	}(_immutable2.default.Record({
		history: new _History2.default(),
		loaded: false,
		currentIndex: 0,
		items: new _immutable2.default.List([])
	}));

	exports.default = Dashboard;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	var _FeedbackActions = __webpack_require__(109);

	var _FeedbackActions2 = _interopRequireDefault(_FeedbackActions);

	var _AnalyticsActions = __webpack_require__(14);

	var _AnalyticsActions2 = _interopRequireDefault(_AnalyticsActions);

	var _ViewStateRecords = __webpack_require__(1011);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ViewStateStore = _reflux2.default.createStore({
		init: function init() {
			this.state = new _ViewStateRecords.ViewState();
			this.listenToMany(_ViewStateActions2.default);
		},

		getInitialState: function getInitialState() {
			return this.state;
		},

		onOpenPopup: function onOpenPopup(name, props) {
			this.state = this.state.set('popup', new _ViewStateRecords.Popup({ name: name, props: new _immutable2.default.Map(props) }));
			this.trigger(this.state);
			_AnalyticsActions2.default.popup(name);
		},

		onClosePopup: function onClosePopup() {
			_AnalyticsActions2.default.closePopup();
			this.state = this.state.delete('popup').delete('modal');
			this.trigger(this.state);
		},

		onScrollIntoView: function onScrollIntoView(id) {
			var element = document.getElementById(id);
			if (element) {
				element.scrollIntoView({ behavior: 'smooth' });
			}
		},

		onModal: function onModal(name, props) {
			this.state = this.state.set('modal', new _ViewStateRecords.Modal({ name: name, props: props }));
			this.trigger(this.state);
			_AnalyticsActions2.default.popup(name);
		},

		onSet: function onSet(set) {
			_FeedbackActions2.default.selectPoint(null);
			this.state = this.state.merge(set);
			this.trigger(this.state);
		},

		onClear: function onClear(removeFeedbackEnabled) {
			this.state = this.state.clear();

			this.trigger(this.state);
		}
	});

	module.exports = ViewStateStore;

/***/ },
/* 115 */
/***/ function(module, exports) {

	"use strict";

	module.exports = {
		ENTER: 13,
		BACKSPACE: 8,
		TAB: 9,
		DELETE: 46,
		ARROW_UP: 38,
		ARROW_DOWN: 40,
		ARROW_LEFT: 37,
		ARROW_RIGHT: 39,
		COMMA: 188,
		ESC: 27,
		S_KEY: 83
	};

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(145)('meta')
	  , isObject = __webpack_require__(24)
	  , has      = __webpack_require__(52)
	  , setDesc  = __webpack_require__(31).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(19)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 117 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 118 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 119 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(173)
	  , IE8_DOM_DEFINE = __webpack_require__(610)
	  , toPrimitive    = __webpack_require__(402)
	  , dP             = Object.defineProperty;

	exports.f = __webpack_require__(146) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 121 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";

	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(183);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = toKey;


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('omit', __webpack_require__(1590));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 124 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}

	module.exports = identity;


/***/ },
/* 125 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(1620);
	var prop = __webpack_require__(705);
	var deepMatches = __webpack_require__(707);

	    /**
	     * Converts argument into a valid iterator.
	     * Used internally on most array/object/collection methods that receives a
	     * callback/iterator providing a shortcut syntax.
	     */
	    function makeIterator(src, thisObj){
	        if (src == null) {
	            return identity;
	        }
	        switch(typeof src) {
	            case 'function':
	                // function is the first to improve perf (most common case)
	                // also avoid using `Function#call` if not needed, which boosts
	                // perf a lot in some cases
	                return (typeof thisObj !== 'undefined')? function(val, i, arr){
	                    return src.call(thisObj, val, i, arr);
	                } : src;
	            case 'object':
	                return function(val){
	                    return deepMatches(val, src);
	                };
	            case 'string':
	            case 'number':
	                return prop(src);
	        }
	    }

	    module.exports = makeIterator;




/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function isValidChild(object) {
	  return object == null || _react2.default.isValidElement(object);
	}

	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}

	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}

	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);

	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);

	    if (childRoutes.length) route.childRoutes = childRoutes;

	    delete route.children;
	  }

	  return route;
	}

	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];

	  _react2.default.Children.forEach(children, function (element) {
	    if (_react2.default.isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);

	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });

	  return routes;
	}

	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }

	  return routes;
	}

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(10);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;

/***/ },
/* 129 */
/***/ function(module, exports) {

	/**
	 * The default argument placeholder value for methods.
	 *
	 * @type {Object}
	 */
	module.exports = {};


/***/ },
/* 130 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _http = __webpack_require__(33);

	var _http2 = _interopRequireDefault(_http);

	var _asyncAction = __webpack_require__(166);

	var _asyncAction2 = _interopRequireDefault(_asyncAction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var AnalyzerActions = _reflux2.default.createActions({
		load: _asyncAction2.default,
		reload: true,
		reset: true,
		enable: true,
		disable: true,
		invalidate: true,
		focusFirstItem: true,
		favorite: true,
		unfavorite: true
	});

	AnalyzerActions.load.listen(function (id) {
		_http2.default.get(project_name+'/content/analyze/' + id).then(AnalyzerActions.load.completed).catch(AnalyzerActions.load.failed);
	});

	exports.default = AnalyzerActions;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = Footer;

	__webpack_require__(1283);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _AuthActions = __webpack_require__(35);

	var _AuthActions2 = _interopRequireDefault(_AuthActions);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	var _AuthStore = __webpack_require__(8);

	var _AuthStore2 = _interopRequireDefault(_AuthStore);

	var _Link = __webpack_require__(26);

	var _Link2 = _interopRequireDefault(_Link);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function onClickLogout(event) {
		_ViewStateActions2.default.clear.sync = true;
		_ViewStateActions2.default.clear();
		_AuthActions2.default.logout.sync = true;
		_AuthActions2.default.logout();
	}

	function Footer(_ref) {
		var className = _ref.className,
		    isInverted = _ref.isInverted,
		    userPlan = _ref.userPlan,
		    isLoggedIn = _ref.isLoggedIn;

		var invertedClass = isInverted ? 'inverted' : '';

		return _react2.default.createElement(
			'div',
			{ className: 'footer ' + invertedClass + ' ' + className },
			_react2.default.createElement(
				'div',
				{ className: 'row' },
				_react2.default.createElement(
					'div',
					{ className: 'col-sm-3 text-center-sm' },
					_react2.default.createElement(
						'div',
						{ className: 'muted bottom-sm' },
						lbl_2017_copyrights
					)
				),
				_react2.default.createElement(
					'div',
					{ className: 'col-sm-6 text-center' },
					_react2.default.createElement(
						'ul',
						{ className: 'list-inline footer-list bottom-sm' },
						_react2.default.createElement(
							'li',
							null,
							_react2.default.createElement(
								'a',
								{
									href:  'https://stylingcv.com/'+LANG_+'examples',
 									target: '_blank' },
								lbl_examples
							)
						),
						userPlan === 1 ? _react2.default.createElement(
							'li',
							null,
							_react2.default.createElement(
								_Link2.default,
								{
									requireLogin: !isLoggedIn,
									to: project_name+'/dashboard/plans' },
								upgrade
							)
						) : null,
						_react2.default.createElement(
							'li',
							null,
							_react2.default.createElement(
								'a',
								{
									href:  'https://stylingcv.com/'+LANG_+'terms',
 									target: '_blank' },
								lbl_Terms
							)
						),
						_react2.default.createElement(
							'li',
							null,
							_react2.default.createElement(
								'a',
								{
									href:  'https://stylingcv.com/'+LANG_+'privacy-policy',
 									target: '_blank' },
								lbl_Privacy
							)
						),
						_react2.default.createElement(
							'li',
							null,
							_react2.default.createElement(
								'a',
								{
									href:  'https://stylingcv.com/'+LANG_+'blog',

 									target: '_blank' },
								lbl_blog
							)
						),
						isLoggedIn ? _react2.default.createElement(
							'li',
							null,
							_react2.default.createElement(
								_Link2.default,
								{
									onClick: onClickLogout,
									to: project_name+'/onboarding/logout' },
								lbl_Logout
							)
						) : null
					)
				),
				_react2.default.createElement(
					'div',
					{ className: 'col-sm-3 text-center-sm text-right' },
					_react2.default.createElement(
						'div',
						{ className: 'muted bottom-sm' },
						'V.2.0.9'
					)
				)
			)
		);
	}

	Footer.defaultProps = {
		isInverted: true,
		className: '',
		isLoggedIn: false
	};

	Footer.propTypes = {
		isInverted: _react2.default.PropTypes.bool,
		isLoggedIn: _react2.default.PropTypes.bool,
		className: _react2.default.PropTypes.string,
		userPlan: _react2.default.PropTypes.number
	};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = Nav;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function Nav(_ref) {
		var align = _ref.align,
		    children = _ref.children;

		var alignClass = align ? 'navbar-' + align : '';
		if(align == 'center'){
			return _react2.default.createElement(
				'ul',
				{ className: 'nav navbar-nav ' + alignClass },
				children,_react2.default.createElement('li',{ className: 'my-language-changer'},
					_react2.default.createElement('span',{ className: 'lang-text'},lang_text),
					_react2.default.createElement('a',
					{ className: 'lang-navigation','data-attr': lang_go},
						_react2.default.createElement('img',{ className: 'lang-flag-img', src: lang_flag})
					)
				)
			);
		}else{
			return _react2.default.createElement(
				'ul',
				{ className: 'nav navbar-nav ' + alignClass },
				children
			);
		}
	}

	Nav.propTypes = {
		align: _react2.default.PropTypes.string
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	__webpack_require__(628);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ToggleOptionView = function ToggleOptionView(_ref) {
		var value = _ref.value,
		    label = _ref.label,
		    onChange = _ref.onChange;

		return _react2.default.createElement(
			'div',
			{ className: 'switch-button switch-button-binary' },
			_react2.default.createElement(
				'span',
				{ className: 'switch-button-label' },
				label
			),
			_react2.default.createElement(
				'div',
				{
					className: 'switch-button-all',
					onClick: function onClick() {
						return onChange(!value);
					} },
				_react2.default.createElement('div', { className: 'option ' + (!value ? 'selected secondary' : 'invisible') }),
				_react2.default.createElement('div', { className: 'option ' + (value ? 'selected' : 'invisible') })
			),
			_react2.default.createElement('div', { style: { clear: 'both' } })
		);
	};

	ToggleOptionView.PropTypes = {
		value: _react2.default.PropTypes.bool.isRequired,
		label: _react2.default.PropTypes.string.isRequired,
		onChange: _react2.default.PropTypes.func.isRequired
	};

	exports.default = ToggleOptionView;

/***/ },
/* 135 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * If localStorage is enabled/supported by the browser
	 *
	 * @return {boolean}
	 */
	function isLocalStorageNameSupported() {
		var testKey = 'test';
		try {
			window.localStorage.setItem(testKey, '1');
			window.localStorage.removeItem(testKey);
			return !!window.localStorage;
		} catch (error) {
			return false;
		}
	}

	/**
	 * Fallback store, if local storage is not enabled
	 */
	function VariableStore() {
		this.store = {};
	}

	VariableStore.prototype.setItem = function (key, value) {
		this.store[key] = value;
	};

	VariableStore.prototype.getItem = function (key) {
		return this.store[key];
	};

	VariableStore.prototype.removeItem = function (key) {
		this.store[key] = null;
	};

	/**
	 * Fallbacks to VariableStore if local storage is not supported
	 */
	function StoreService() {
		if (isLocalStorageNameSupported()) {
			this.store = localStorage;
		} else {
			this.store = new VariableStore();
		}
	}

	StoreService.prototype.setItem = function (key, value) {
		this.store.setItem(key, value);
	};

	StoreService.prototype.getItem = function (key) {
		return this.store.getItem(key);
	};

	StoreService.prototype.removeItem = function (key) {
		return this.store.removeItem(key);
	};

	module.exports = new StoreService();

/***/ },
/* 136 */
/***/ function(module, exports) {

	"use strict";

	module.exports = {
		addClass: function addClass(elem, cls) {
			if (elem && !this.hasClass(elem, cls)) {
				var oldCls = elem.className;
				if (oldCls) {
					oldCls += " ";
				}
				elem.className = oldCls + cls;
			}
		},

		removeClass: function removeClass(elem, cls) {
			if (elem) {
				var str = " " + elem.className + " ";
				elem.className = str.replace(" " + cls + " ", " ").replace(/^\s+|\s+$/g, "");
			}
		},

		hasClass: function hasClass(elem, cls) {
			var str = " " + elem.className + " ";
			var testCls = " " + cls + " ";
			return str.indexOf(testCls) !== -1;
		},

		toggleClass: function toggleClass(elem, cls) {
			if (elem && this.hasClass(elem, cls)) {
				this.removeClass(elem, cls);
			} else {
				this.addClass(elem, cls);
			}
		},

		hasParentWithClass: function hasParentWithClass(elem, cls) {
			if (this.hasClass(elem, cls)) {
				return true;
			}
			return elem.parentNode && this.hasParentWithClass(elem.parentNode, cls);
		}
	};

/***/ },
/* 137 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 138 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(13)
	  , dPs         = __webpack_require__(592)
	  , enumBugKeys = __webpack_require__(368)
	  , IE_PROTO    = __webpack_require__(339)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(367)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(370).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(594)
	  , hiddenKeys = __webpack_require__(368).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(594)
	  , enumBugKeys = __webpack_require__(368);

	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(62);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(16)
	  , dP          = __webpack_require__(31)
	  , DESCRIPTORS = __webpack_require__(30)
	  , SPECIES     = __webpack_require__(25)('species');

	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(118)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 145 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(201)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(119)
	  , core      = __webpack_require__(98)
	  , ctx       = __webpack_require__(393)
	  , hide      = __webpack_require__(174)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;

/***/ },
/* 148 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(611)
	  , defined = __webpack_require__(394);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 151 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';

	exports.__esModule = true;
	var PUSH = 'PUSH';

	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';

	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';

	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.extractPath = extractPath;
	exports.parsePath = parsePath;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(84);

	var _warning2 = _interopRequireDefault(_warning);

	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);

	  if (match == null) return string;

	  return string.substring(match[0].length);
	}

	function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';

	   false ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }

	  if (pathname === '') pathname = project_name+'/';

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(124),
	    overRest = __webpack_require__(678),
	    setToString = __webpack_require__(437);

	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}

	module.exports = baseRest;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(1428),
	    getValue = __webpack_require__(1486);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('flow', __webpack_require__(1544));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('isEqual', __webpack_require__(1580));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
	exports.falsy = falsy;

	var _react = __webpack_require__(1);

	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var arrayOf = _react.PropTypes.arrayOf;
	var oneOfType = _react.PropTypes.oneOfType;
	var element = _react.PropTypes.element;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}

	var history = exports.history = shape({
	  listen: func.isRequired,
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired
	});

	var component = exports.component = oneOfType([func, string]);
	var components = exports.components = oneOfType([component, object]);
	var route = exports.route = oneOfType([object, element]);
	var routes = exports.routes = oneOfType([route, arrayOf(route)]);

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(1782);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(128);

	var assign = __webpack_require__(21);
	var emptyFunction = __webpack_require__(75);
	var warning = __webpack_require__(23);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _ = __webpack_require__(90),
	    maker = __webpack_require__(775).instanceJoinCreator;

	/**
	 * Extract child listenables from a parent from their
	 * children property and return them in a keyed Object
	 *
	 * @param {Object} listenable The parent listenable
	 */
	var mapChildListenables = function mapChildListenables(listenable) {
	    var i = 0,
	        children = {},
	        childName;
	    for (; i < (listenable.children || []).length; ++i) {
	        childName = listenable.children[i];
	        if (listenable[childName]) {
	            children[childName] = listenable[childName];
	        }
	    }
	    return children;
	};

	/**
	 * Make a flat dictionary of all listenables including their
	 * possible children (recursively), concatenating names in camelCase.
	 *
	 * @param {Object} listenables The top-level listenables
	 */
	var flattenListenables = function flattenListenables(listenables) {
	    var flattened = {};
	    for (var key in listenables) {
	        var listenable = listenables[key];
	        var childMap = mapChildListenables(listenable);

	        // recursively flatten children
	        var children = flattenListenables(childMap);

	        // add the primary listenable and chilren
	        flattened[key] = listenable;
	        for (var childKey in children) {
	            var childListenable = children[childKey];
	            flattened[key + _.capitalize(childKey)] = childListenable;
	        }
	    }

	    return flattened;
	};

	/**
	 * A module of methods related to listening.
	 */
	module.exports = {

	    /**
	     * An internal utility function used by `validateListening`
	     *
	     * @param {Action|Store} listenable The listenable we want to search for
	     * @returns {Boolean} The result of a recursive search among `this.subscriptions`
	     */
	    hasListener: function hasListener(listenable) {
	        var i = 0,
	            j,
	            listener,
	            listenables;
	        for (; i < (this.subscriptions || []).length; ++i) {
	            listenables = [].concat(this.subscriptions[i].listenable);
	            for (j = 0; j < listenables.length; j++) {
	                listener = listenables[j];
	                if (listener === listenable || listener.hasListener && listener.hasListener(listenable)) {
	                    return true;
	                }
	            }
	        }
	        return false;
	    },

	    /**
	     * A convenience method that listens to all listenables in the given object.
	     *
	     * @param {Object} listenables An object of listenables. Keys will be used as callback method names.
	     */
	    listenToMany: function listenToMany(listenables) {
	        var allListenables = flattenListenables(listenables);
	        for (var key in allListenables) {
	            var cbname = _.callbackName(key),
	                localname = this[cbname] ? cbname : this[key] ? key : undefined;
	            if (localname) {
	                this.listenTo(allListenables[key], localname, this[cbname + "Default"] || this[localname + "Default"] || localname);
	            }
	        }
	    },

	    /**
	     * Checks if the current context can listen to the supplied listenable
	     *
	     * @param {Action|Store} listenable An Action or Store that should be
	     *  listened to.
	     * @returns {String|Undefined} An error message, or undefined if there was no problem.
	     */
	    validateListening: function validateListening(listenable) {
	        if (listenable === this) {
	            return "Listener is not able to listen to itself";
	        }
	        if (!_.isFunction(listenable.listen)) {
	            return listenable + " is missing a listen method";
	        }
	        if (listenable.hasListener && listenable.hasListener(this)) {
	            return "Listener cannot listen to this listenable because of circular loop";
	        }
	    },

	    /**
	     * Sets up a subscription to the given listenable for the context object
	     *
	     * @param {Action|Store} listenable An Action or Store that should be
	     *  listened to.
	     * @param {Function|String} callback The callback to register as event handler
	     * @param {Function|String} defaultCallback The callback to register as default handler
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is the object being listened to
	     */
	    listenTo: function listenTo(listenable, callback, defaultCallback) {
	        var desub,
	            unsubscriber,
	            subscriptionobj,
	            subs = this.subscriptions = this.subscriptions || [];
	        _.throwIf(this.validateListening(listenable));
	        this.fetchInitialState(listenable, defaultCallback);
	        desub = listenable.listen(this[callback] || callback, this);
	        unsubscriber = function () {
	            var index = subs.indexOf(subscriptionobj);
	            _.throwIf(index === -1, "Tried to remove listen already gone from subscriptions list!");
	            subs.splice(index, 1);
	            desub();
	        };
	        subscriptionobj = {
	            stop: unsubscriber,
	            listenable: listenable
	        };
	        subs.push(subscriptionobj);
	        return subscriptionobj;
	    },

	    /**
	     * Stops listening to a single listenable
	     *
	     * @param {Action|Store} listenable The action or store we no longer want to listen to
	     * @returns {Boolean} True if a subscription was found and removed, otherwise false.
	     */
	    stopListeningTo: function stopListeningTo(listenable) {
	        var sub,
	            i = 0,
	            subs = this.subscriptions || [];
	        for (; i < subs.length; i++) {
	            sub = subs[i];
	            if (sub.listenable === listenable) {
	                sub.stop();
	                _.throwIf(subs.indexOf(sub) !== -1, "Failed to remove listen from subscriptions list!");
	                return true;
	            }
	        }
	        return false;
	    },

	    /**
	     * Stops all subscriptions and empties subscriptions array
	     */
	    stopListeningToAll: function stopListeningToAll() {
	        var remaining,
	            subs = this.subscriptions || [];
	        while (remaining = subs.length) {
	            subs[0].stop();
	            _.throwIf(subs.length !== remaining - 1, "Failed to remove listen from subscriptions list!");
	        }
	    },

	    /**
	     * Used in `listenTo`. Fetches initial data from a publisher if it has a `getInitialState` method.
	     * @param {Action|Store} listenable The publisher we want to get initial state from
	     * @param {Function|String} defaultCallback The method to receive the data
	     */
	    fetchInitialState: function fetchInitialState(listenable, defaultCallback) {
	        defaultCallback = defaultCallback && this[defaultCallback] || defaultCallback;
	        var me = this;
	        if (_.isFunction(defaultCallback) && _.isFunction(listenable.getInitialState)) {
	            var data = listenable.getInitialState();
	            if (data && _.isFunction(data.then)) {
	                data.then(function () {
	                    defaultCallback.apply(me, arguments);
	                });
	            } else {
	                defaultCallback.call(this, data);
	            }
	        }
	    },

	    /**
	     * The callback will be called once all listenables have triggered at least once.
	     * It will be invoked with the last emission from each listenable.
	     * @param {...Publishers} publishers Publishers that should be tracked.
	     * @param {Function|String} callback The method to call when all publishers have emitted
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables
	     */
	    joinTrailing: maker("last"),

	    /**
	     * The callback will be called once all listenables have triggered at least once.
	     * It will be invoked with the first emission from each listenable.
	     * @param {...Publishers} publishers Publishers that should be tracked.
	     * @param {Function|String} callback The method to call when all publishers have emitted
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables
	     */
	    joinLeading: maker("first"),

	    /**
	     * The callback will be called once all listenables have triggered at least once.
	     * It will be invoked with all emission from each listenable.
	     * @param {...Publishers} publishers Publishers that should be tracked.
	     * @param {Function|String} callback The method to call when all publishers have emitted
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables
	     */
	    joinConcat: maker("all"),

	    /**
	     * The callback will be called once all listenables have triggered.
	     * If a callback triggers twice before that happens, an error is thrown.
	     * @param {...Publishers} publishers Publishers that should be tracked.
	     * @param {Function|String} callback The method to call when all publishers have emitted
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables
	     */
	    joinStrict: maker("strict")
	};

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(1848),
	    getValue = __webpack_require__(1884);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	var baseConvert = __webpack_require__(1940),
	    util = __webpack_require__(1942);

	/**
	 * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
	 * version with conversion `options` applied. If `name` is an object its methods
	 * will be converted.
	 *
	 * @param {string} name The name of the function to wrap.
	 * @param {Function} [func] The function to wrap.
	 * @param {Object} [options] The options object. See `baseConvert` for more details.
	 * @returns {Function|Object} Returns the converted function or object.
	 */
	function convert(name, func, options) {
	  return baseConvert(util, name, func, options);
	}

	module.exports = convert;


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = Page;

	__webpack_require__(1286);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _KeyMap = __webpack_require__(115);

	var _KeyMap2 = _interopRequireDefault(_KeyMap);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function onKeyDown(event) {
		if (event.keyCode === _KeyMap2.default.ENTER && !("allowNewLine" in event.target.dataset)) {
			event.preventDefault();
		}
	}

	function Page(_ref) {
		var className = _ref.className,
		    children = _ref.children;


		return _react2.default.createElement(
			'div',
			{
				id: 'page',
				onKeyDown: onKeyDown },
			_react2.default.createElement(
				'div',
				{ className: 'app ' + className },
				children

			)

		);

	}

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = Title;

	__webpack_require__(407);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function Title(_ref) {
		var children = _ref.children,
		    className = _ref.className;

		return _react2.default.createElement(
			'div',
			{ className: "header-container text-center " + (className || '') },
			children
		);
	}

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = EditableFieldWithIcon;

	__webpack_require__(626);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _EditableField = __webpack_require__(27);

	var _EditableField2 = _interopRequireDefault(_EditableField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function EditableFieldWithIcon(_ref) {
		var iconClassName = _ref.iconClassName,
		    editableClassName = _ref.editableClassName,
		    readOnly = _ref.readOnly,
		    placeholder = _ref.placeholder,
		    onChange = _ref.onChange,
		    value = _ref.value,
		    isSmall = _ref.isSmall,
		    showIcon = _ref.showIcon,
		    font = _ref.font,
		    type = _ref.type,
		    maxLength = _ref.maxLength,
		    forceInput = _ref.forceInput,
		    className = _ref.className,
		    analyzerData = _ref.analyzerData;

		var isSmallClass = isSmall ? 'btn btn-resume-data no-pointer ' : '';

		isSmallClass += type === 'url' ? 'url-link' : '';

		var autoSizeInput = isSmall;

		if (forceInput) {
			autoSizeInput = true;
		}

		return _react2.default.createElement(
			'div',
			{ className: 'with-icon ' + isSmallClass + ' ' + className },
			showIcon ? _react2.default.createElement('i', { className: 'fa ' + iconClassName }) : null,
			_react2.default.createElement(_EditableField2.default, {
				readOnly: readOnly,
				maxLength: maxLength,
				font: font,
				type: type,
				autoSizeInput: autoSizeInput,
				analyzerData: analyzerData,
				className: 'editable-field ' + editableClassName,
				placeholder: placeholder,
				onChange: onChange,
				value: value })
		);
	}

	EditableFieldWithIcon.defaultProps = {
		className: '',
		iconClassName: '',
		editableClassName: '',
		showIcon: true,
		forceInput: false
	};

	EditableFieldWithIcon.propTypes = {
		analyzerData: _react2.default.PropTypes.instanceOf(_immutable2.default.List),
		className: _react2.default.PropTypes.string,
		iconClassName: _react2.default.PropTypes.string,
		editableClassName: _react2.default.PropTypes.string,
		readOnly: _react2.default.PropTypes.bool,
		isSmall: _react2.default.PropTypes.bool,
		showIcon: _react2.default.PropTypes.bool,
		placeholder: _react2.default.PropTypes.string,
		onChange: _react2.default.PropTypes.func,
		value: _react2.default.PropTypes.string,
		font: _react2.default.PropTypes.string,
		type: _react2.default.PropTypes.string,
		maxLength: _react2.default.PropTypes.number,
		forceInput: _react2.default.PropTypes.bool
	};

/***/ },
/* 166 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = { children: ['completed', 'failed'] };

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = openPopup;

	var _popupTools = __webpack_require__(728);

	function openPopup(event, onClose) {
		var url = event.currentTarget.getAttribute('href');

		(0, _popupTools.popup)(url, 'Popup', {}, function (err) {
			if (err && typeof onClose === 'function') {
				onClose();
			}
		});

		event.preventDefault();
	}

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(25)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(61)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(95)
	  , call        = __webpack_require__(588)
	  , isArrayIter = __webpack_require__(372)
	  , anObject    = __webpack_require__(13)
	  , toLength    = __webpack_require__(39)
	  , getIterFn   = __webpack_require__(388)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 170 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(31).f
	  , has = __webpack_require__(52)
	  , TAG = __webpack_require__(25)('toStringTag');

	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(3)
	  , defined = __webpack_require__(73)
	  , fails   = __webpack_require__(19)
	  , spaces  = __webpack_require__(384)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');

	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};

	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};

	module.exports = exporter;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(202);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(120)
	  , createDesc = __webpack_require__(205);
	module.exports = __webpack_require__(146) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 175 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(49);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ },
/* 177 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}

	module.exports = apply;


/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(176),
	    getRawTag = __webpack_require__(1485),
	    objectToString = __webpack_require__(1516);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  value = Object(value);
	  return (symToStringTag && symToStringTag in value)
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(28),
	    isKey = __webpack_require__(434),
	    stringToPath = __webpack_require__(685),
	    toString = __webpack_require__(88);

	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}

	module.exports = castPath;


/***/ },
/* 180 */
/***/ function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;

	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}

	module.exports = copyArray;


/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(420),
	    baseAssignValue = __webpack_require__(421);

	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});

	  var index = -1,
	      length = props.length;

	  while (++index < length) {
	    var key = props[index];

	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;

	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}

	module.exports = copyObject;


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('concat', __webpack_require__(687));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(178),
	    isObjectLike = __webpack_require__(125);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(447);

	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;

	  return result === result ? (remainder ? result - remainder : result) : 0;
	}

	module.exports = toInteger;


/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;

	var _invariant = __webpack_require__(48);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}

	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];

	  var match = void 0,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
	    }

	    if (match[1]) {
	      regexpSource += '([^/]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '(.*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '(.*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    }

	    tokens.push(match[0]);

	    lastIndex = matcher.lastIndex;
	  }

	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
	  }

	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}

	var CompiledPatternsCache = Object.create(null);

	function compilePattern(pattern) {
	  if (!CompiledPatternsCache[pattern]) CompiledPatternsCache[pattern] = _compilePattern(pattern);

	  return CompiledPatternsCache[pattern];
	}

	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 *  The function calls callback(error, matched) when finished.
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	function matchPattern(pattern, pathname) {
	  // Ensure pattern starts with leading slash for consistency with pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }

	  var _compilePattern2 = compilePattern(pattern);

	  var regexpSource = _compilePattern2.regexpSource;
	  var paramNames = _compilePattern2.paramNames;
	  var tokens = _compilePattern2.tokens;


	  if (pattern.charAt(pattern.length - 1) !== '/') {
	    regexpSource += '/?'; // Allow optional path separator at end.
	  }

	  // Special-case patterns like '*' for catch-all routes.
	  if (tokens[tokens.length - 1] === '*') {
	    regexpSource += '$';
	  }

	  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
	  if (match == null) {
	    return null;
	  }

	  var matchedPath = match[0];
	  var remainingPathname = pathname.substr(matchedPath.length);

	  if (remainingPathname) {
	    // Require that the match ends at a path separator, if we didn't match
	    // the full path, so any remaining pathname is a new path segment.
	    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
	      return null;
	    }

	    // If there is a remaining pathname, treat the path separator as part of
	    // the remaining pathname for properly continuing the match.
	    remainingPathname = '/' + remainingPathname;
	  }

	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: match.slice(1).map(function (v) {
	      return v && decodeURIComponent(v);
	    })
	  };
	}

	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}

	function getParams(pattern, pathname) {
	  var match = matchPattern(pattern, pathname);
	  if (!match) {
	    return null;
	  }

	  var paramNames = match.paramNames;
	  var paramValues = match.paramValues;

	  var params = {};

	  paramNames.forEach(function (paramName, index) {
	    params[paramName] = paramValues[index];
	  });

	  return params;
	}

	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	function formatPattern(pattern, params) {
	  params = params || {};

	  var _compilePattern3 = compilePattern(pattern);

	  var tokens = _compilePattern3.tokens;

	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0;

	  var token = void 0,
	      paramName = void 0,
	      paramValue = void 0;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];

	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;

	      !(paramValue != null || parenCount > 0) ?  false ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;

	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenCount += 1;
	    } else if (token === ')') {
	      parenCount -= 1;
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];

	      !(paramValue != null || parenCount > 0) ?  false ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;

	      if (paramValue != null) pathname += encodeURIComponent(paramValue);
	    } else {
	      pathname += token;
	    }
	  }

	  return pathname.replace(/\/+/g, '/');
	}

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(10);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };

	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ?  false ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ?  false ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;

	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	'use strict';

	var ReactRootIndex = __webpack_require__(764);

	var invariant = __webpack_require__(10);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ?  false ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ?  false ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ?  false ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ?  false ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ?  false ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ?  false ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(57);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ },
/* 189 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	var isValidPayment = __webpack_require__(1968);
	var OnboardingData = __webpack_require__(1966);
	var firstName = __webpack_require__(1967);
	var lastName = __webpack_require__(1969);

	module.exports = {
		isValidPayment: isValidPayment,
		OnboardingData: OnboardingData,
		firstName: firstName,
		lastName: lastName,
	};


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _omit2 = __webpack_require__(123);

	var _omit3 = _interopRequireDefault(_omit2);

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(17);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _Tooltip = __webpack_require__(524);

	var _Tooltip2 = _interopRequireDefault(_Tooltip);

	var _getTooltipPosition = __webpack_require__(1020);

	var _getTooltipPosition2 = _interopRequireDefault(_getTooltipPosition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TooltipTrigger = function (_React$Component) {
		_inherits(TooltipTrigger, _React$Component);

		function TooltipTrigger(props) {
			_classCallCheck(this, TooltipTrigger);

			var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

			_this.showTooltipTimeout = null;
			_this.fixedTooltipStyle = {};
			_this.state = {
				showTooltip: false,
				fixedCurrentEvent: null,
				fixedCurrentTarget: null,
				placement: 'top'
			};
			return _this;
		}

		TooltipTrigger.prototype.componentWillUpdate = function componentWillUpdate(nextProps, nextState) {
			if (!nextProps.disabled && nextProps.isFixed && nextState.fixedCurrentTarget) {
				var tooltipElem = nextState.fixedCurrentTarget.parentElement.getElementsByClassName("tooltip")[0];
				var result = (0, _getTooltipPosition2.default)(nextState.fixedCurrentEvent, nextState.fixedCurrentTarget, tooltipElem, nextState.placement, 'solid', {});

				if (result.isNewState) {
					// Switch to reverse placement
					return this.setState(result.newState);
				}

				this.fixedTooltipStyle = result.position;
				this.fixedTooltipStyle.position = 'fixed';
			}
		};

		TooltipTrigger.prototype.componentWillUnmount = function componentWillUnmount() {
			clearTimeout(this.showTooltipTimeout);
		};

		TooltipTrigger.prototype.onMouseEnter = function onMouseEnter(e) {
			var _this2 = this;

			clearTimeout(this.showTooltipTimeout);

			var currentEvent = e.nativeEvent;
			var currentTarget = e.currentTarget;

			this.showTooltipTimeout = setTimeout(function () {
				if (_this2.props.isFixed) {
					_this2.setState({
						fixedCurrentEvent: currentEvent,
						fixedCurrentTarget: currentTarget,
						placement: _this2.props.placement,
						showTooltip: true
					});
				} else {
					_this2.setState({
						placement: _this2.props.placement,
						showTooltip: true
					});
				}
			}, this.props.delay);
		};

		TooltipTrigger.prototype.onMouseLeave = function onMouseLeave() {
			clearTimeout(this.showTooltipTimeout);
			this.setState({ showTooltip: false });
		};

		TooltipTrigger.prototype.getTooltipStyle = function getTooltipStyle(placement, isFixed, disabled) {
			if (disabled) {
				return false;
			}

			if (isFixed) {
				return this.fixedTooltipStyle;
			}

			switch (placement) {
				case 'right':
					return {
						top: '50%',
						transform: 'translate(100%, -50%)',
						right: 0
					};
				case 'top':
					return {
						top: 0,
						left: '50%',
						transform: 'translate(-50%, -100%)'
					};
				case 'left':
					return {
						top: '50%',
						transform: 'translate(-100%, -50%)',
						left: 0
					};
				case 'bottom':
					return {
						bottom: 0,
						left: '50%',
						transform: 'translate(-50%, 100%)'
					};
			}
		};

		TooltipTrigger.prototype.render = function render() {
			var _this3 = this;

			var tooltipStyle = this.getTooltipStyle(this.state.placement, this.props.isFixed, this.props.disabled);
			var style = Object.assign(this.props.style || {}, { position: 'relative' });
			var fixedTooltipClass = this.state.showTooltip || this.props.showTooltip ? 'fade in' : 'hidden-tooltip';
			var rest = (0, _omit3.default)(['tooltip', 'placement', 'idKey', 'showTooltip', 'isFixed', 'delay'], this.props);

			return _react2.default.createElement(
				'span',
				null,
				_react2.default.createElement(
					'span',
					_extends({}, rest, {
						onMouseEnter: function onMouseEnter(e) {
							return _this3.onMouseEnter(e);
						},
						onMouseLeave: function onMouseLeave(e) {
							return _this3.onMouseLeave(e);
						},
						style: style }),
					this.props.children,
					!this.props.disabled && !this.props.isFixed && (this.state.showTooltip || this.props.showTooltip) ? _react2.default.createElement(
						_Tooltip2.default,
						{
							placement: this.props.placement,
							style: tooltipStyle,
							className: 'fade in' },
						this.props.tooltip
					) : null
				),
				!this.props.disabled && this.props.isFixed ? _react2.default.createElement(
					_Tooltip2.default,
					{
						placement: this.props.placement,
						style: tooltipStyle,
						className: fixedTooltipClass },
					this.props.tooltip
				) : null
			);
		};

		return TooltipTrigger;
	}(_react2.default.Component);

	exports.default = TooltipTrigger;


	TooltipTrigger.propTypes = {
		placement: _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left']),
		isFixed: _react2.default.PropTypes.bool,
		tooltip: _react2.default.PropTypes.string,
		delay: _react2.default.PropTypes.number,
		showTooltip: _react2.default.PropTypes.bool
	};

	TooltipTrigger.defaultProps = {
		placement: 'top',
		idKey: '',
		showTooltip: false,
		isFixed: false,
		delay: 300
	};

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _slice2 = __webpack_require__(1565);

	var _slice3 = _interopRequireDefault(_slice2);

	var _toUpper2 = __webpack_require__(1568);

	var _toUpper3 = _interopRequireDefault(_toUpper2);

	var _join2 = __webpack_require__(308);

	var _join3 = _interopRequireDefault(_join2);

	var _map2 = __webpack_require__(46);

	var _map3 = _interopRequireDefault(_map2);

	var _get2 = __webpack_require__(40);

	var _get3 = _interopRequireDefault(_get2);

	var _words2 = __webpack_require__(1571);

	var _words3 = _interopRequireDefault(_words2);

	exports.default = Avatar;

	__webpack_require__(1311);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function firstChar(word) {
		return word.charAt(0);
	}

	function initials(name) {
		return (0, _toUpper3.default)((0, _join3.default)('', (0, _map3.default)(firstChar, (0, _slice3.default)(0, 2, (0, _words3.default)(name)))));
	}

	function Avatar(_ref) {
		var user = _ref.user,
		    className = _ref.className,
		    style = _ref.style;

		if (!className) {
			className = '';
		}

		if (!style) {
			style = { opacity: 1 };
		}

		if (user.photo) {
			style.background = 'url(' + user.photo + ') no-repeat 0 0';
			style.backgroundSize = 'cover';

			return _react2.default.createElement('span', {
				className: 'img-circle avatar-icon ' + className,
				style: style });
		} else {
			return _react2.default.createElement(
				'span',
				{
					className: 'img-circle avatar-icon avatar-initials ' + className,
					style: style },
				initials(user.name)
			);
		}
	}

	Avatar.propTypes = {
		user: _react2.default.PropTypes.object.isRequired,
		className: _react2.default.PropTypes.string,
		style: _react2.default.PropTypes.object
	};

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _omit2 = __webpack_require__(123);

	var _omit3 = _interopRequireDefault(_omit2);

	var _getOr2 = __webpack_require__(53);

	var _getOr3 = _interopRequireDefault(_getOr2);

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	__webpack_require__(626);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _DateRange = __webpack_require__(92);

	var _DateRange2 = _interopRequireDefault(_DateRange);

	var _highOrder = __webpack_require__(11);

	var _highOrder2 = _interopRequireDefault(_highOrder);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

	function DateRangeView(props) {
		var dateRange = props.dateRange,
		    isSmall = props.isSmall;

		var rest = (0, _omit3.default)(['dateRange', 'isSmall'], props);

		return _react2.default.createElement(
			'a',
			_extends({
				href: '',
				role: 'button',
				className: 'btn btn-sm btn-resume-data btn-link with-icon'
			}, rest),
			!isSmall ? _react2.default.createElement('i', { className: 'fa fa-calendar3' }) : null,
			dateRange.hasFrom() ? _react2.default.createElement(
				'span',
				null,
				(0, _getOr3.default)('', dateRange.fromMonth, MONTHS),
				' ',
				dateRange.fromYear,
				dateRange.isOngoing ? _react2.default.createElement(
					'span',
					null,
					' - ongoing'
				) : dateRange.hasTo() ? _react2.default.createElement(
					'span',
					null,
					' - ',
					(0, _getOr3.default)('', dateRange.toMonth, MONTHS),
					' ',
					dateRange.toYear
				) : null
			) : _react2.default.createElement(
				'span',
				null,
				'Date period'
			)
		);
	}

	DateRangeView.PropTypes = {
		dateRange: _react2.default.PropTypes.instanceOf(_DateRange2.default),
		isSingleDate: _react2.default.PropTypes.bool,
		isSmall: _react2.default.PropTypes.bool
	};

	exports.default = (0, _highOrder2.default)(DateRangeView);

/***/ },
/* 194 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var SelectOption = function SelectOption(name, label, options) {
		var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

		_classCallCheck(this, SelectOption);

		this.name = name;
		this.label = label;
		this.options = options;
		this.isGlobal = config.isGlobal;
		this.setter = config.setter;
	};

	exports.default = SelectOption;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.SaveState = undefined;

	var _throttle2 = __webpack_require__(1608);

	var _throttle3 = _interopRequireDefault(_throttle2);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _SaveActions = __webpack_require__(343);

	var _SaveActions2 = _interopRequireDefault(_SaveActions);

	var _AnalyzerActions = __webpack_require__(131);

	var _AnalyzerActions2 = _interopRequireDefault(_AnalyzerActions);

	var _ResumeActions = __webpack_require__(18);

	var _ResumeActions2 = _interopRequireDefault(_ResumeActions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SaveState = exports.SaveState = function (_Immutable$Record) {
		_inherits(SaveState, _Immutable$Record);

		function SaveState() {
			_classCallCheck(this, SaveState);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return SaveState;
	}(_immutable2.default.Record({
		state: 'empty'
	}));

	function execute(resume) {
		_SaveActions2.default.execute(resume.toJS());
	}

	var scheduleExecute = (0, _throttle3.default)(execute, 4000, { leading: false });

	SaveState.EMPTY = 'empty';
	SaveState.RUNNING = 'running';
	SaveState.PENDING = 'pending';
	SaveState.COMPLETED = 'completed';
	SaveState.FAILED = 'failed';

	var SaveStore = _reflux2.default.createStore({
		init: function init() {
			this.listenToMany(_SaveActions2.default);
			this.state = new SaveState();
		},

		getInitialState: function getInitialState() {
			return this.state;
		},

		onComplete: function onComplete() {
			this.state = this.state.set('state', SaveState.COMPLETED);
			this.trigger(this.state);
		},

		onFailed: function onFailed(resume) {
			this.state = this.state.set('state', SaveState.FAILED);
			this.trigger(this.state);
		},

		onEmpty: function onEmpty() {
			this.state = this.state.set('state', SaveState.EMPTY);
			this.trigger(this.state);
		},

		onSchedule: function onSchedule(resume) {
			this.state = this.state.set('state', SaveState.RUNNING);

			this.trigger(this.state);
			scheduleExecute(resume);
		},

		onExecute: function onExecute() {
			this.state = this.state.set('state', SaveState.RUNNING);
			this.trigger(this.state);
		},

		onFlushExecute: function onFlushExecute() {
			scheduleExecute.flush();
		},

		onExecuteCompleted: function onExecuteCompleted(response) {
			_ResumeActions2.default.setId.sync = true;
			_ResumeActions2.default.setId(response.data._localId, response.data._id, response.data.__v);

			_AnalyzerActions2.default.reload(response.data._id);
			$('#btn-download-main-page').addClass('disabled2');
			demoFromHTML(response.data._id);
			this.state = this.state.set('state', SaveState.COMPLETED);
			this.trigger(this.state);
		},

		onExecuteFailed: function onExecuteFailed(response) {
			// If conflict or not logged in anymore, reload
			if (response.xhr.status === 409 || response.xhr.status === 401) {
				window.location.reload(true);
			}

			this.state = this.state.set('state', SaveState.FAILED);
			this.trigger(this.state);
		}
	});

	exports.default = SaveStore;

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.fromJS = exports.moveListItem = exports.updateRecursive = exports.traverseRecursive = undefined;

	var _concat2 = __webpack_require__(687);

	var _concat3 = _interopRequireDefault(_concat2);

	var _curry2 = __webpack_require__(688);

	var _curry3 = _interopRequireDefault(_curry2);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function moveListItemBase(fromIndex, toIndex, list) {
		var from = list.get(fromIndex);
		list = list.delete(fromIndex);

		return list.insert(toIndex, from);
	}

	function fromJSBase(recordClasses, data) {
		return _immutable2.default.fromJS(data, function (key, value) {
			var record = value.get('record');

			if (record) {
				if (!recordClasses[record]) {
					throw new Error('Record class ' + record + ' not found');
				}

				return new recordClasses[record](value.toObject());
			} else {
				return _immutable2.default.Iterable.isIndexed(value) ? value.toList() : value.toMap();
			}
		});
	}

	function updateRecursiveBase(Item, updater, item) {
		if (item instanceof Item) {
			return item.update(updater);
		} else if (item instanceof _immutable2.default.List || item instanceof _immutable2.default.Map) {
			return item.map(updateRecursive(Item, updater));
		} else {
			return item;
		}
	}

	function traverseRecursiveBase(Item, path, callback, item, key) {
		var currentPath = (0, _concat3.default)(path, [key]);

		if (item instanceof Item) {
			callback(item, currentPath);
			return item;
		} else if (item instanceof _immutable2.default.List || item instanceof _immutable2.default.Map) {
			return item.map(traverseRecursive(Item, currentPath, callback));
		} else {
			return item;
		}
	}

	var traverseRecursive = exports.traverseRecursive = (0, _curry3.default)(traverseRecursiveBase);
	var updateRecursive = exports.updateRecursive = (0, _curry3.default)(updateRecursiveBase);
	var moveListItem = exports.moveListItem = (0, _curry3.default)(moveListItemBase);
	var fromJS = exports.fromJS = (0, _curry3.default)(fromJSBase);

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(72)
	  , TAG = __webpack_require__(25)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};

	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(72);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 199 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _assign = __webpack_require__(1208);

	var _assign2 = _interopRequireDefault(_assign);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

/***/ },
/* 201 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 202 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 203 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(615)
	  , enumBugKeys = __webpack_require__(395);

	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 205 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _propertyUtils = __webpack_require__(1274);

	var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;

	var getComputedStyleX = void 0;

	function force(x, y) {
	  return x + y;
	}

	function css(el, name, v) {
	  var value = v;
	  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
	    for (var i in name) {
	      if (name.hasOwnProperty(i)) {
	        css(el, i, name[i]);
	      }
	    }
	    return undefined;
	  }
	  if (typeof value !== 'undefined') {
	    if (typeof value === 'number') {
	      value = value + 'px';
	    }
	    el.style[name] = value;
	    return undefined;
	  }
	  return getComputedStyleX(el, name);
	}

	function getClientPosition(elem) {
	  var box = void 0;
	  var x = void 0;
	  var y = void 0;
	  var doc = elem.ownerDocument;
	  var body = doc.body;
	  var docElem = doc && doc.documentElement;
	  // Ã¦ Â¹Ã¦ÂÂ® GBS Ã¦Å“â‚¬Ã¦â€“Â°Ã¦â€¢Â°Ã¦ÂÂ®Ã¯Â¼Å’A-Grade Browsers Ã©Æ’Â½Ã¥Â·Â²Ã¦â€Â¯Ã¦Å’Â getBoundingClientRect Ã¦â€“Â¹Ã¦Â³â€¢Ã¯Â¼Å’Ã¤Â¸ÂÃ§â€Â¨Ã¥â€ ÂÃ¨â‚¬Æ’Ã¨â„¢â€˜Ã¤Â¼ Ã§Â»Å¸Ã§Å¡â€žÃ¥Â®Å¾Ã§Å½Â°Ã¦â€“Â¹Ã¥Â¼Â
	  box = elem.getBoundingClientRect();

	  // Ã¦Â³Â¨Ã¯Â¼Å¡jQuery Ã¨Â¿ËœÃ¨â‚¬Æ’Ã¨â„¢â€˜Ã¥â€¡ÂÃ¥Å½Â» docElem.clientLeft/clientTop
	  // Ã¤Â½â€ Ã¦Âµâ€¹Ã¨Â¯â€¢Ã¥Ââ€˜Ã§Å½Â°Ã¯Â¼Å’Ã¨Â¿â„¢Ã¦ Â·Ã¥ÂÂÃ¨â‚¬Å’Ã¤Â¼Å¡Ã¥Â¯Â¼Ã¨â€¡Â´Ã¥Â½â€œ html Ã¥â€™Å’ body Ã¦Å“â€°Ã¨Â¾Â¹Ã¨Â·Â/Ã¨Â¾Â¹Ã¦Â¡â€ Ã¦ Â·Ã¥Â¼ÂÃ¦â€”Â¶Ã¯Â¼Å’Ã¨Å½Â·Ã¥Ââ€“Ã§Å¡â€žÃ¥â‚¬Â¼Ã¤Â¸ÂÃ¦Â­Â£Ã§Â¡Â®
	  // Ã¦Â­Â¤Ã¥Â¤â€“Ã¯Â¼Å’ie6 Ã¤Â¼Å¡Ã¥Â¿Â½Ã§â€¢Â¥ html Ã§Å¡â€ž margin Ã¥â‚¬Â¼Ã¯Â¼Å’Ã¥Â¹Â¸Ã¨Â¿ÂÃ¥Å“Â°Ã¦ËœÂ¯Ã¦Â²Â¡Ã¦Å“â€°Ã¨Â°ÂÃ¤Â¼Å¡Ã¥Å½Â»Ã¨Â®Â¾Ã§Â½Â® html Ã§Å¡â€ž margin

	  x = box.left;
	  y = box.top;

	  // In IE, most of the time, 2 extra pixels are added to the top and left
	  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
	  // IE6 standards mode, this border can be overridden by setting the
	  // document element's border to zero -- thus, we cannot rely on the
	  // offset always being 2 pixels.

	  // In quirks mode, the offset can be determined by querying the body's
	  // clientLeft/clientTop, but in standards mode, it is found by querying
	  // the document element's clientLeft/clientTop.  Since we already called
	  // getClientBoundingRect we have already forced a reflow, so it is not
	  // too expensive just to query them all.

	  // ie Ã¤Â¸â€¹Ã¥Âºâ€Ã¨Â¯Â¥Ã¥â€¡ÂÃ¥Å½Â»Ã§Âªâ€”Ã¥ÂÂ£Ã§Å¡â€žÃ¨Â¾Â¹Ã¦Â¡â€ Ã¥ÂÂ§Ã¯Â¼Å’Ã¦Â¯â€¢Ã§Â«Å¸Ã©Â»ËœÃ¨Â®Â¤ absolute Ã©Æ’Â½Ã¦ËœÂ¯Ã§â€ºÂ¸Ã¥Â¯Â¹Ã§Âªâ€”Ã¥ÂÂ£Ã¥Â®Å¡Ã¤Â½ÂÃ§Å¡â€ž
	  // Ã§Âªâ€”Ã¥ÂÂ£Ã¨Â¾Â¹Ã¦Â¡â€ Ã¦ â€¡Ã¥â€¡â€ Ã¦ËœÂ¯Ã¨Â®Â¾ documentElement ,quirks Ã¦â€”Â¶Ã¨Â®Â¾Ã§Â½Â® body
	  // Ã¦Å“â‚¬Ã¥Â¥Â½Ã§Â¦ÂÃ¦Â­Â¢Ã¥Å“Â¨ body Ã¥â€™Å’ html Ã¤Â¸Å Ã¨Â¾Â¹Ã¦Â¡â€  Ã¯Â¼Å’Ã¤Â½â€  ie < 9 html Ã©Â»ËœÃ¨Â®Â¤Ã¦Å“â€° 2px Ã¯Â¼Å’Ã¥â€¡ÂÃ¥Å½Â»
	  // Ã¤Â½â€ Ã¦ËœÂ¯Ã©ÂÅ¾ ie Ã¤Â¸ÂÃ¥ÂÂ¯Ã¨Æ’Â½Ã¨Â®Â¾Ã§Â½Â®Ã§Âªâ€”Ã¥ÂÂ£Ã¨Â¾Â¹Ã¦Â¡â€ Ã¯Â¼Å’body html Ã¤Â¹Å¸Ã¤Â¸ÂÃ¦ËœÂ¯Ã§Âªâ€”Ã¥ÂÂ£ ,ie Ã¥ÂÂ¯Ã¤Â»Â¥Ã©â‚¬Å¡Ã¨Â¿â€¡ html,body Ã¨Â®Â¾Ã§Â½Â®
	  // Ã¦ â€¡Ã¥â€¡â€  ie Ã¤Â¸â€¹ docElem.clientTop Ã¥Â°Â±Ã¦ËœÂ¯ border-top
	  // ie7 html Ã¥ÂÂ³Ã§Âªâ€”Ã¥ÂÂ£Ã¨Â¾Â¹Ã¦Â¡â€ Ã¦â€Â¹Ã¥ÂËœÃ¤Â¸ÂÃ¤Âºâ€ Ã£â‚¬â€šÃ¦Â°Â¸Ã¨Â¿Å“Ã¤Â¸Âº 2
	  // Ã¤Â½â€ Ã¦ â€¡Ã¥â€¡â€  firefox/chrome/ie9 Ã¤Â¸â€¹ docElem.clientTop Ã¦ËœÂ¯Ã§Âªâ€”Ã¥ÂÂ£Ã¨Â¾Â¹Ã¦Â¡â€ Ã¯Â¼Å’Ã¥ÂÂ³Ã¤Â½Â¿Ã¨Â®Â¾Ã¤Âºâ€  border-top Ã¤Â¹Å¸Ã¤Â¸Âº 0

	  x -= docElem.clientLeft || body.clientLeft || 0;
	  y -= docElem.clientTop || body.clientTop || 0;

	  return {
	    left: x,
	    top: y
	  };
	}

	function getScroll(w, top) {
	  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
	  var method = 'scroll' + (top ? 'Top' : 'Left');
	  if (typeof ret !== 'number') {
	    var d = w.document;
	    // ie6,7,8 standard mode
	    ret = d.documentElement[method];
	    if (typeof ret !== 'number') {
	      // quirks mode
	      ret = d.body[method];
	    }
	  }
	  return ret;
	}

	function getScrollLeft(w) {
	  return getScroll(w);
	}

	function getScrollTop(w) {
	  return getScroll(w, true);
	}

	function getOffset(el) {
	  var pos = getClientPosition(el);
	  var doc = el.ownerDocument;
	  var w = doc.defaultView || doc.parentWindow;
	  pos.left += getScrollLeft(w);
	  pos.top += getScrollTop(w);
	  return pos;
	}
	function _getComputedStyle(elem, name, cs) {
	  var computedStyle = cs;
	  var val = '';
	  var d = elem.ownerDocument;
	  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null);

	  // https://github.com/kissyteam/kissy/issues/61
	  if (computedStyle) {
	    val = computedStyle.getPropertyValue(name) || computedStyle[name];
	  }

	  return val;
	}

	var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
	var RE_POS = /^(top|right|bottom|left)$/;
	var CURRENT_STYLE = 'currentStyle';
	var RUNTIME_STYLE = 'runtimeStyle';
	var LEFT = 'left';
	var PX = 'px';

	function _getComputedStyleIE(elem, name) {
	  // currentStyle maybe null
	  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
	  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];

	  // Ã¥Â½â€œ width/height Ã¨Â®Â¾Ã§Â½Â®Ã¤Â¸ÂºÃ§â„¢Â¾Ã¥Ë†â€ Ã¦Â¯â€Ã¦â€”Â¶Ã¯Â¼Å’Ã©â‚¬Å¡Ã¨Â¿â€¡ pixelLeft Ã¦â€“Â¹Ã¥Â¼ÂÃ¨Â½Â¬Ã¦ÂÂ¢Ã§Å¡â€ž width/height Ã¥â‚¬Â¼
	  // Ã¤Â¸â‚¬Ã¥Â¼â‚¬Ã¥Â§â€¹Ã¥Â°Â±Ã¥Â¤â€žÃ§Ââ€ Ã¤Âºâ€ ! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook Ã¨Â§Â£Ã¥â€ Â³@2011-08-19
	  // Ã¥Å“Â¨ ie Ã¤Â¸â€¹Ã¤Â¸ÂÃ¥Â¯Â¹Ã¯Â¼Å’Ã©Å“â‚¬Ã¨Â¦ÂÃ§â€ºÂ´Ã¦Å½Â¥Ã§â€Â¨ offset Ã¦â€“Â¹Ã¥Â¼Â
	  // borderWidth Ã§Â­â€°Ã¥â‚¬Â¼Ã¤Â¹Å¸Ã¦Å“â€°Ã©â€”Â®Ã©Â¢ËœÃ¯Â¼Å’Ã¤Â½â€ Ã¨â‚¬Æ’Ã¨â„¢â€˜Ã¥Ë†Â° borderWidth Ã¨Â®Â¾Ã¤Â¸ÂºÃ§â„¢Â¾Ã¥Ë†â€ Ã¦Â¯â€Ã§Å¡â€žÃ¦Â¦â€šÃ§Å½â€¡Ã¥Â¾Ë†Ã¥Â°ÂÃ¯Â¼Å’Ã¨Â¿â„¢Ã©â€¡Å’Ã¥Â°Â±Ã¤Â¸ÂÃ¨â‚¬Æ’Ã¨â„¢â€˜Ã¤Âºâ€ 

	  // From the awesome hack by Dean Edwards
	  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
	  // If we're not dealing with a regular pixel number
	  // but a number that has a weird ending, we need to convert it to pixels
	  // exclude left right for relativity
	  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
	    // Remember the original values
	    var style = elem.style;
	    var left = style[LEFT];
	    var rsLeft = elem[RUNTIME_STYLE][LEFT];

	    // prevent flashing of content
	    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];

	    // Put in the new values to get a computed value out
	    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
	    ret = style.pixelLeft + PX;

	    // Revert the changed values
	    style[LEFT] = left;

	    elem[RUNTIME_STYLE][LEFT] = rsLeft;
	  }
	  return ret === '' ? 'auto' : ret;
	}

	if (typeof window !== 'undefined') {
	  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
	}

	function getOffsetDirection(dir, option) {
	  if (dir === 'left') {
	    return option.useCssRight ? 'right' : dir;
	  }
	  return option.useCssBottom ? 'bottom' : dir;
	}

	function oppositeOffsetDirection(dir) {
	  if (dir === 'left') {
	    return 'right';
	  } else if (dir === 'right') {
	    return 'left';
	  } else if (dir === 'top') {
	    return 'bottom';
	  } else if (dir === 'bottom') {
	    return 'top';
	  }
	}

	// Ã¨Â®Â¾Ã§Â½Â® elem Ã§â€ºÂ¸Ã¥Â¯Â¹ elem.ownerDocument Ã§Å¡â€žÃ¥ÂÂÃ¦ â€¡
	function setLeftTop(elem, offset, option) {
	  // set position first, in-case top/left are set even on static elem
	  if (css(elem, 'position') === 'static') {
	    elem.style.position = 'relative';
	  }
	  var presetH = -999;
	  var presetV = -999;
	  var horizontalProperty = getOffsetDirection('left', option);
	  var verticalProperty = getOffsetDirection('top', option);
	  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
	  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);

	  if (horizontalProperty !== 'left') {
	    presetH = 999;
	  }

	  if (verticalProperty !== 'top') {
	    presetV = 999;
	  }
	  var originalTransition = '';
	  var originalOffset = getOffset(elem);
	  if ('left' in offset || 'top' in offset) {
	    originalTransition = (0, _propertyUtils.getTransitionProperty)(elem) || '';
	    (0, _propertyUtils.setTransitionProperty)(elem, 'none');
	  }
	  if ('left' in offset) {
	    elem.style[oppositeHorizontalProperty] = '';
	    elem.style[horizontalProperty] = presetH + 'px';
	  }
	  if ('top' in offset) {
	    elem.style[oppositeVerticalProperty] = '';
	    elem.style[verticalProperty] = presetV + 'px';
	  }
	  var old = getOffset(elem);
	  var originalStyle = {};
	  for (var key in offset) {
	    if (offset.hasOwnProperty(key)) {
	      var dir = getOffsetDirection(key, option);
	      var preset = key === 'left' ? presetH : presetV;
	      var off = originalOffset[key] - old[key];
	      if (dir === key) {
	        originalStyle[dir] = preset + off;
	      } else {
	        originalStyle[dir] = preset - off;
	      }
	    }
	  }
	  css(elem, originalStyle);
	  // force relayout
	  force(elem.offsetTop, elem.offsetLeft);
	  if ('left' in offset || 'top' in offset) {
	    (0, _propertyUtils.setTransitionProperty)(elem, originalTransition);
	  }
	  var ret = {};
	  for (var _key in offset) {
	    if (offset.hasOwnProperty(_key)) {
	      var _dir = getOffsetDirection(_key, option);
	      var _off = offset[_key] - originalOffset[_key];
	      if (_key === _dir) {
	        ret[_dir] = originalStyle[_dir] + _off;
	      } else {
	        ret[_dir] = originalStyle[_dir] - _off;
	      }
	    }
	  }
	  css(elem, ret);
	}

	function setTransform(elem, offset) {
	  var originalOffset = getOffset(elem);
	  var originalXY = (0, _propertyUtils.getTransformXY)(elem);
	  var resultXY = { x: originalXY.x, y: originalXY.y };
	  if ('left' in offset) {
	    resultXY.x = originalXY.x + offset.left - originalOffset.left;
	  }
	  if ('top' in offset) {
	    resultXY.y = originalXY.y + offset.top - originalOffset.top;
	  }
	  (0, _propertyUtils.setTransformXY)(elem, resultXY);
	}

	function setOffset(elem, offset, option) {
	  if (option.useCssRight || option.useCssBottom) {
	    setLeftTop(elem, offset, option);
	  } else if (option.useCssTransform && (0, _propertyUtils.getTransformName)() in document.body.style) {
	    setTransform(elem, offset, option);
	  } else {
	    setLeftTop(elem, offset, option);
	  }
	}

	function each(arr, fn) {
	  for (var i = 0; i < arr.length; i++) {
	    fn(arr[i]);
	  }
	}

	function isBorderBoxFn(elem) {
	  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
	}

	var BOX_MODELS = ['margin', 'border', 'padding'];
	var CONTENT_INDEX = -1;
	var PADDING_INDEX = 2;
	var BORDER_INDEX = 1;
	var MARGIN_INDEX = 0;

	function swap(elem, options, callback) {
	  var old = {};
	  var style = elem.style;
	  var name = void 0;

	  // Remember the old values, and insert the new ones
	  for (name in options) {
	    if (options.hasOwnProperty(name)) {
	      old[name] = style[name];
	      style[name] = options[name];
	    }
	  }

	  callback.call(elem);

	  // Revert the old values
	  for (name in options) {
	    if (options.hasOwnProperty(name)) {
	      style[name] = old[name];
	    }
	  }
	}

	function getPBMWidth(elem, props, which) {
	  var value = 0;
	  var prop = void 0;
	  var j = void 0;
	  var i = void 0;
	  for (j = 0; j < props.length; j++) {
	    prop = props[j];
	    if (prop) {
	      for (i = 0; i < which.length; i++) {
	        var cssProp = void 0;
	        if (prop === 'border') {
	          cssProp = '' + prop + which[i] + 'Width';
	        } else {
	          cssProp = prop + which[i];
	        }
	        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
	      }
	    }
	  }
	  return value;
	}

	/**
	 * A crude way of determining if an object is a window
	 * @member util
	 */
	function isWindow(obj) {
	  // must use == for ie8
	  /* eslint eqeqeq:0 */
	  return obj !== null && obj !== undefined && obj == obj.window;
	}

	var domUtils = {};

	each(['Width', 'Height'], function (name) {
	  domUtils['doc' + name] = function (refWin) {
	    var d = refWin.document;
	    return Math.max(
	    // firefox chrome documentElement.scrollHeight< body.scrollHeight
	    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
	    d.documentElement['scroll' + name],
	    // quirks : documentElement.scrollHeight Ã¦Å“â‚¬Ã¥Â¤Â§Ã§Â­â€°Ã¤ÂºÅ½Ã¥ÂÂ¯Ã¨Â§â€ Ã§Âªâ€”Ã¥ÂÂ£Ã¥Â¤Å¡Ã¤Â¸â‚¬Ã§â€šÂ¹Ã¯Â¼Å¸
	    d.body['scroll' + name], domUtils['viewport' + name](d));
	  };

	  domUtils['viewport' + name] = function (win) {
	    // pc browser includes scrollbar in window.innerWidth
	    var prop = 'client' + name;
	    var doc = win.document;
	    var body = doc.body;
	    var documentElement = doc.documentElement;
	    var documentElementProp = documentElement[prop];
	    // Ã¦ â€¡Ã¥â€¡â€ Ã¦Â¨Â¡Ã¥Â¼ÂÃ¥Ââ€“ documentElement
	    // backcompat Ã¥Ââ€“ body
	    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
	  };
	});

	/*
	 Ã¥Â¾â€”Ã¥Ë†Â°Ã¥â€¦Æ’Ã§Â´ Ã§Å¡â€žÃ¥Â¤Â§Ã¥Â°ÂÃ¤Â¿Â¡Ã¦ÂÂ¯
	 @param elem
	 @param name
	 @param {String} [extra]  'padding' : (css width) + padding
	 'border' : (css width) + padding + border
	 'margin' : (css width) + padding + border + margin
	 */
	function getWH(elem, name, ex) {
	  var extra = ex;
	  if (isWindow(elem)) {
	    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
	  } else if (elem.nodeType === 9) {
	    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
	  }
	  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
	  var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;
	  var computedStyle = getComputedStyleX(elem);
	  var isBorderBox = isBorderBoxFn(elem, computedStyle);
	  var cssBoxValue = 0;
	  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
	    borderBoxValue = undefined;
	    // Fall back to computed then un computed css if necessary
	    cssBoxValue = getComputedStyleX(elem, name);
	    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
	      cssBoxValue = elem.style[name] || 0;
	    }
	    // Normalize '', auto, and prepare for extra
	    cssBoxValue = parseFloat(cssBoxValue) || 0;
	  }
	  if (extra === undefined) {
	    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
	  }
	  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
	  var val = borderBoxValue || cssBoxValue;
	  if (extra === CONTENT_INDEX) {
	    if (borderBoxValueOrIsBorderBox) {
	      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);
	    }
	    return cssBoxValue;
	  } else if (borderBoxValueOrIsBorderBox) {
	    if (extra === BORDER_INDEX) {
	      return val;
	    }
	    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle));
	  }
	  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);
	}

	var cssShow = {
	  position: 'absolute',
	  visibility: 'hidden',
	  display: 'block'
	};

	// fix #119 : https://github.com/kissyteam/kissy/issues/119
	function getWHIgnoreDisplay() {
	  for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
	    args[_key2] = arguments[_key2];
	  }

	  var val = void 0;
	  var elem = args[0];
	  // in case elem is window
	  // elem.offsetWidth === undefined
	  if (elem.offsetWidth !== 0) {
	    val = getWH.apply(undefined, args);
	  } else {
	    swap(elem, cssShow, function () {
	      val = getWH.apply(undefined, args);
	    });
	  }
	  return val;
	}

	each(['width', 'height'], function (name) {
	  var first = name.charAt(0).toUpperCase() + name.slice(1);
	  domUtils['outer' + first] = function (el, includeMargin) {
	    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
	  };
	  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];

	  domUtils[name] = function (elem, v) {
	    var val = v;
	    if (val !== undefined) {
	      if (elem) {
	        var computedStyle = getComputedStyleX(elem);
	        var isBorderBox = isBorderBoxFn(elem);
	        if (isBorderBox) {
	          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
	        }
	        return css(elem, name, val);
	      }
	      return undefined;
	    }
	    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
	  };
	});

	function mix(to, from) {
	  for (var i in from) {
	    if (from.hasOwnProperty(i)) {
	      to[i] = from[i];
	    }
	  }
	  return to;
	}

	var utils = {
	  getWindow: function getWindow(node) {
	    if (node && node.document && node.setTimeout) {
	      return node;
	    }
	    var doc = node.ownerDocument || node;
	    return doc.defaultView || doc.parentWindow;
	  },
	  offset: function offset(el, value, option) {
	    if (typeof value !== 'undefined') {
	      setOffset(el, value, option || {});
	    } else {
	      return getOffset(el);
	    }
	  },

	  isWindow: isWindow,
	  each: each,
	  css: css,
	  clone: function clone(obj) {
	    var i = void 0;
	    var ret = {};
	    for (i in obj) {
	      if (obj.hasOwnProperty(i)) {
	        ret[i] = obj[i];
	      }
	    }
	    var overflow = obj.overflow;
	    if (overflow) {
	      for (i in obj) {
	        if (obj.hasOwnProperty(i)) {
	          ret.overflow[i] = obj.overflow[i];
	        }
	      }
	    }
	    return ret;
	  },

	  mix: mix,
	  getWindowScrollLeft: function getWindowScrollLeft(w) {
	    return getScrollLeft(w);
	  },
	  getWindowScrollTop: function getWindowScrollTop(w) {
	    return getScrollTop(w);
	  },
	  merge: function merge() {
	    var ret = {};

	    for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
	      args[_key3] = arguments[_key3];
	    }

	    for (var i = 0; i < args.length; i++) {
	      utils.mix(ret, args[i]);
	    }
	    return ret;
	  },

	  viewportWidth: 0,
	  viewportHeight: 0
	};

	mix(utils, domUtils);

	exports["default"] = utils;
	module.exports = exports['default'];

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */

	'use strict';

	var emptyObject = {};

	if (false) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ },
/* 208 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(653),
	    createBaseEach = __webpack_require__(1469);

	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);

	module.exports = baseEach;


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(179),
	    toKey = __webpack_require__(122);

	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);

	  var index = 0,
	      length = path.length;

	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}

	module.exports = baseGet;


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(652),
	    baseIsNaN = __webpack_require__(1427),
	    strictIndexOf = __webpack_require__(1527);

	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  return value === value
	    ? strictIndexOf(array, value, fromIndex)
	    : baseFindIndex(array, baseIsNaN, fromIndex);
	}

	module.exports = baseIndexOf;


/***/ },
/* 212 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(306),
	    isArrayLike = __webpack_require__(86),
	    isIndex = __webpack_require__(212),
	    isObject = __webpack_require__(65);

	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}

	module.exports = isIterateeCall;


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('capitalize', __webpack_require__(1534), __webpack_require__(37));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('isEmpty', __webpack_require__(1579), __webpack_require__(37));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('keys', __webpack_require__(87), __webpack_require__(37));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('noop', __webpack_require__(701), __webpack_require__(37));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(7),
	    func = convert('trim', __webpack_require__(1612));

	func.placeholder = __webpack_require__(6);
	module.exports = func;


/***/ },
/* 219 */
/***/ function(module, exports) {



	    /**
	     * Create slice of source array or array-like object
	     */
	    function slice(arr, start, end){
	        var len = arr.length;

	        if (start == null) {
	            start = 0;
	        } else if (start < 0) {
	            start = Math.max(len + start, 0);
	        } else {
	            start = Math.min(start, len);
	        }

	        if (end == null) {
	            end = len;
	        } else if (end < 0) {
	            end = Math.max(len + end, 0);
	        } else {
	            end = Math.min(end, len);
	        }

	        var result = [];
	        while (start < end) {
	            result.push(arr[start++]);
	        }

	        return result;
	    }

	    module.exports = slice;




/***/ },
/* 220 */
/***/ function(module, exports) {



	    /**
	     * Checks if the value is created by the `Object` constructor.
	     */
	    function isPlainObject(value) {
	        return (!!value && typeof value === 'object' &&
	            value.constructor === Object);
	    }

	    module.exports = isPlainObject;




/***/ },
/* 221 */
/***/ function(module, exports) {



	    /**
	     * Safer Object.hasOwnProperty
	     */
	     function hasOwn(obj, prop){
	         return Object.prototype.hasOwnProperty.call(obj, prop);
	     }

	     module.exports = hasOwn;




/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var assert = __webpack_require__(32);
	var getTypeName = __webpack_require__(50);

	module.exports = function forbidNewOperator(x, type) {
	  assert(!(x instanceof type), function () { return 'Cannot use the new operator to instantiate the type ' + getTypeName(type); });
	};

/***/ },
/* 223 */
/***/ function(module, exports) {

	module.exports = function getFunctionName(f) {
	  return f.displayName || f.name || '<function' + f.length + '>';
	};

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(745);
	var EventPluginUtils = __webpack_require__(1759);
	var ReactErrorUtils = __webpack_require__(757);

	var accumulateInto = __webpack_require__(766);
	var forEachAccumulated = __webpack_require__(768);
	var invariant = __webpack_require__(10);
	var warning = __webpack_require__(23);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	   false ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (false) {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function () {
	      if (false) {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;

	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }

	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(106);
	var EventPluginHub = __webpack_require__(224);

	var warning = __webpack_require__(23);

	var accumulateInto = __webpack_require__(766);
	var forEachAccumulated = __webpack_require__(768);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

/***/ },
/* 226 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(159);

	var getEventTarget = __webpack_require__(478);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(188),
	    getRawTag = __webpack_require__(1883),
	    objectToString = __webpack_require__(1915);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(230);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = toKey;


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(228),
	    isObjectLike = __webpack_require__(189);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(779),
	    baseKeys = __webpack_require__(790),
	    isArrayLike = __webpack_require__(510);

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}

	module.exports = keys;


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(1857);

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var global = __webpack_require__(16),
	    SHARED = '__core-js_shared__',
	    store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Header = _react2.default.createClass({
		displayName: 'Header',

		propTypes: {
			label: _react2.default.PropTypes.string,
			backButton: _react2.default.PropTypes.bool,
			changeState: _react2.default.PropTypes.func,
			onClosePopup: _react2.default.PropTypes.func
		},

		_handleBackButton: function _handleBackButton(event) {
			event.preventDefault();
			if (this.props.changeState) {
				this.props.changeState('Default');
			}
		},

		render: function render() {
			var backButton = null;

			if (this.props.backButton) {
				backButton = _react2.default.createElement(
					'div',
					{ onClick: this._handleBackButton, className: 'back-button' },
					_react2.default.createElement('i', { className: 'fa '+back_button_icon })
				);
			}

			return _react2.default.createElement(
				'div',
				{ className: 'auth-header' },
				backButton,
				_react2.default.createElement(
					'div',
					{ className: 'auth-header-text' },
					this.props.label
				),
				_react2.default.createElement('i', { onClick: this.props.onClosePopup, className: 'fa fa-close close' })
			);
		}
	});

	exports.default = Header;

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	__webpack_require__(285);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _NotificationActions = __webpack_require__(22);

	var _NotificationActions2 = _interopRequireDefault(_NotificationActions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function onClickCopy(copyTextarea) {
		copyTextarea.select();

		try {
			var isSuccessful = document.execCommand('copy');
			if (!isSuccessful) {
				throw Error("Error while copying");
			}

			_NotificationActions2.default.success(lbl_copied_successfully);
		} catch (err) {
			_NotificationActions2.default.warning('Press CTRL (or CMD for Mac) + C to copy link.');
		}
	}

	var CopyLink = function (_React$Component) {
		_inherits(CopyLink, _React$Component);

		function CopyLink() {
			_classCallCheck(this, CopyLink);

			return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		}

		CopyLink.prototype.render = function render() {
			var _this2 = this;

			var link = this.props.link;

			return _react2.default.createElement(
				'div',
				{ className: 'input-group' },
				_react2.default.createElement('input', {
					type: 'text',
					ref: 'link',
					value: link,
					readOnly: true,
					className: 'form-control'
				}),
				_react2.default.createElement(
					'span',
					{ className: 'input-group-btn' },
					_react2.default.createElement(
						'button',
						{
							className: 'btn btn-primary',
							type: 'button',
							onClick: function onClick(e) {
								return onClickCopy(_this2.refs.link);
							} },
						lbl_Copy_link
					)
				)
			);
		};

		return CopyLink;
	}(_react2.default.Component);

	;

	CopyLink.propTypes = {
		link: _react2.default.PropTypes.string.isRequired
	};

	exports.default = CopyLink;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _getOr2 = __webpack_require__(53);

	var _getOr3 = _interopRequireDefault(_getOr2);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _Navbar = __webpack_require__(111);

	var _Navbar2 = _interopRequireDefault(_Navbar);

	var _Nav = __webpack_require__(133);

	var _Nav2 = _interopRequireDefault(_Nav);

	var _Footer = __webpack_require__(132);

	var _Footer2 = _interopRequireDefault(_Footer);

	var _Page = __webpack_require__(163);

	var _Page2 = _interopRequireDefault(_Page);

	var _AuthStore = __webpack_require__(8);

	var _AuthStore2 = _interopRequireDefault(_AuthStore);

	var _reactRouter = __webpack_require__(12);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Page404 = _react2.default.createClass({
		displayName: 'Page404',

		mixins: [_reflux2.default.connect(_AuthStore2.default, 'user')],

		render: function render() {
			var isLoggedIn = Boolean(this.state.user);
			var userPlan = (0, _getOr3.default)(1, 'user.plan', this.state);

			return _react2.default.createElement(
				_Page2.default,
				null,
				_react2.default.createElement(_Navbar2.default, {
					user: this.state.user,
					logo: true,
					className: 'text-center' }),
				_react2.default.createElement(
					'div',
					{ className: 'vertical-center-container app-container container' },
					_react2.default.createElement(
						'div',
						{ className: 'resume-not-found text-center' },
						_react2.default.createElement(
							'h1',
							null,
							'The resume you are looking for can not be found or is with restricted access.'
						),
						_react2.default.createElement(
							'a',
							{
								className: 'btn btn-light resume-controls-button-big top-sm bottom-sm',
								href: base_url },
							lbl_Homepage
						)
					)
				),
				_react2.default.createElement(_Footer2.default, {
					isLoggedIn: isLoggedIn,
					className: 'app-item',
					userPlan: this.state.user.plan,
					isInverted: false })
			);
		}
	});

	exports.default = Page404;

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function SelectablePill(props) {
		var selected = props.selected,
		    className = props.className,
		    other = _objectWithoutProperties(props, ['selected', 'className']);

		var selectedClass = selected ? 'selected' : '';

		return _react2.default.createElement(
			'button',
			_extends({
				type: 'button',
				className: 'btn btn-default btn-selectable ' + selectedClass + ' ' + className
			}, other),
			props.children
		);
	}

	SelectablePill.propTypes = {
		key: _react2.default.PropTypes.string,
		className: _react2.default.PropTypes.string,
		selected: _react2.default.PropTypes.bool,
		disabled: _react2.default.PropTypes.bool,
		onClick: _react2.default.PropTypes.func
	};

	SelectablePill.defaultProps = {
		selected: false,
		disabled: false,
		className: ''
	};

	exports.default = SelectablePill;

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var UnsavedChangesReminder = function (_React$Component) {
		_inherits(UnsavedChangesReminder, _React$Component);

		function UnsavedChangesReminder(props) {
			_classCallCheck(this, UnsavedChangesReminder);

			var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

			_this.onBeforeUnload = _this.onBeforeUnload.bind(_this);
			return _this;
		}

		UnsavedChangesReminder.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
			return false;
		};

		UnsavedChangesReminder.prototype.componentDidMount = function componentDidMount() {
			window.addEventListener("beforeunload", this.onBeforeUnload);
		};

		UnsavedChangesReminder.prototype.componentWillUnmount = function componentWillUnmount() {
			window.removeEventListener("beforeunload", this.onBeforeUnload);
		};

		UnsavedChangesReminder.prototype.onBeforeUnload = function onBeforeUnload(event) {
			if (this.props.active) {
				event = event || window.event;

				if (event) {
					event.returnValue = this.props.message;
				}

				return this.props.message;
			}
		};

		UnsavedChangesReminder.prototype.render = function render() {
			return false;
		};

		return UnsavedChangesReminder;
	}(_react2.default.Component);

	exports.default = UnsavedChangesReminder;


	UnsavedChangesReminder.propTypes = {
		message: _react2.default.PropTypes.string,
		active: _react2.default.PropTypes.bool.isRequired
	};

	UnsavedChangesReminder.defaultProps = {
		message: 'You have unsaved changes.',
		active: true
	};

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _QuoteItemView = __webpack_require__(930);

	Object.defineProperty(exports, 'QuoteItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_QuoteItemView).default;
	  }
	});

	var _AwardItemView = __webpack_require__(920);

	Object.defineProperty(exports, 'AwardItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AwardItemView).default;
	  }
	});

	var _CourseItemView = __webpack_require__(923);

	Object.defineProperty(exports, 'CourseItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CourseItemView).default;
	  }
	});

	var _CertificateItemView = __webpack_require__(922);

	Object.defineProperty(exports, 'CertificateItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CertificateItemView).default;
	  }
	});

	var _LanguageItemView = __webpack_require__(927);

	Object.defineProperty(exports, 'LanguageItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LanguageItemView).default;
	  }
	});

	var _DayofmylifeItemView = __webpack_require__(924);

	Object.defineProperty(exports, 'DayofmylifeItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DayofmylifeItemView).default;
	  }
	});

	var _ActivityItemView = __webpack_require__(919);

	Object.defineProperty(exports, 'ActivityItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ActivityItemView).default;
	  }
	});

	var _SkillItemView = __webpack_require__(932);

	Object.defineProperty(exports, 'SkillItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SkillItemView).default;
	  }
	});

	var _TalentItemView = __webpack_require__(934);

	Object.defineProperty(exports, 'TalentItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TalentItemView).default;
	  }
	});

	var _AchievementItemView = __webpack_require__(918);

	Object.defineProperty(exports, 'AchievementItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AchievementItemView).default;
	  }
	});

	var _TechnologyItemView = __webpack_require__(935);

	Object.defineProperty(exports, 'TechnologyItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TechnologyItemView).default;
	  }
	});

	var _VolunteerItemView = __webpack_require__(936);

	Object.defineProperty(exports, 'VolunteerItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_VolunteerItemView).default;
	  }
	});

	var _EducationItemView = __webpack_require__(925);

	Object.defineProperty(exports, 'EducationItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_EducationItemView).default;
	  }
	});

	var _ExperienceItemView = __webpack_require__(926);

	Object.defineProperty(exports, 'ExperienceItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ExperienceItemView).default;
	  }
	});

	var _PublicationItemView = __webpack_require__(929);

	Object.defineProperty(exports, 'PublicationItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PublicationItemView).default;
	  }
	});

	var _SummaryItemView = __webpack_require__(933);

	Object.defineProperty(exports, 'SummaryItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SummaryItemView).default;
	  }
	});

	var _BookItemView = __webpack_require__(921);

	Object.defineProperty(exports, 'BookItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_BookItemView).default;
	  }
	});

	var _PassionItemView = __webpack_require__(928);

	Object.defineProperty(exports, 'PassionItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PassionItemView).default;
	  }
	});

	var _ReferenceItemView = __webpack_require__(931);

	Object.defineProperty(exports, 'ReferenceItemView', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ReferenceItemView).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(1340);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _EditableField = __webpack_require__(27);

	var _EditableField2 = _interopRequireDefault(_EditableField);

	var _Resume = __webpack_require__(15);

	var _Resume2 = _interopRequireDefault(_Resume);

	var _KeyMap = __webpack_require__(115);

	var _KeyMap2 = _interopRequireDefault(_KeyMap);

	var _reactDom = __webpack_require__(17);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _caretPosition = __webpack_require__(1261);

	var _caretPosition2 = _interopRequireDefault(_caretPosition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Bullets = _react2.default.createClass({
		displayName: 'Bullets',

		propTypes: {
			bullets: _react2.default.PropTypes.instanceOf(_immutable2.default.List).isRequired,
			readOnly: _react2.default.PropTypes.bool,
			analyzerData: _react2.default.PropTypes.instanceOf(_immutable2.default.List),
			placeholder: _react2.default.PropTypes.string,
			font: _react2.default.PropTypes.string,
			onChange: _react2.default.PropTypes.func
		},

		onChangeBullet: function onChangeBullet(event, i) {
			var newBullets = this.props.bullets.set(i, event.target.value);
			this.props.onChange(newBullets);
		},

		focusBullet: function focusBullet(i) {
			var bullet = this.refs['item-' + i];
			if (bullet) {
				_reactDom2.default.findDOMNode(this.refs['item-' + i]).firstChild.focus();
			}
		},

		onKeyDownBullet: function onKeyDownBullet(event, i) {
			var _this = this;

			var keyCode = event.keyCode || event.which;

			switch (keyCode) {
				case _KeyMap2.default.BACKSPACE:
				case _KeyMap2.default.DELETE:
					if (event.target.value.length === 0 && this.props.bullets.count() > 1) {
						var _newBullets = this.props.bullets.delete(i);
						this.props.onChange(_newBullets);
						setTimeout(function () {
							_this.focusBullet(i - 1);
						}, 0);
						event.preventDefault();
					}
					break;

				case _KeyMap2.default.ARROW_UP:
					this.focusBullet(i - 1);
					event.preventDefault();
					break;

				case _KeyMap2.default.ARROW_DOWN:
					this.focusBullet(i + 1);
					event.preventDefault();
					break;

				case _KeyMap2.default.ENTER:
					var pos = _caretPosition2.default.get(event.target);
					var remainingValue = event.target.value.slice(0, pos.start);
					var newValue = event.target.value.slice(pos.start);

					var newBullets = this.props.bullets.set(i, remainingValue).insert(i + 1, newValue);
					this.props.onChange(newBullets);
					setTimeout(function () {
						_this.focusBullet(i + 1);
					}, 0);

					event.preventDefault();
					break;
			}
		},

		onKeyUpBullet: function onKeyUpBullet(event, i) {
			var keyCode = event.keyCode || event.which;

			if (keyCode === _KeyMap2.default.ENTER) {
				event.preventDefault();
			}
		},

		render: function render() {
			var _this2 = this;

			var bullets = this.props.bullets.isEmpty() ? _Resume2.default.DEFAULT_BULLETS : this.props.bullets;

			return _react2.default.createElement(
				'div',
				{ className: 'top-xty' },
				bullets.map(function (bullet, i) {
					return _react2.default.createElement(
						'div',
						{
							className: 'media top-xty no-bottom',
							key: i },
						_react2.default.createElement(
							'div',
							{ className: 'media-left media-left-xs' },
							_react2.default.createElement('i', { className: 'fa fa-circle bullet-dot' })
						),
						_react2.default.createElement(
							'div',
							{ className: 'media-body' },
							_react2.default.createElement(_EditableField2.default, {
								ref: 'item-' + i,
								className: 'editable-field editable-field-muted editable-field-sm',
								onKeyDown: function onKeyDown(event) {
									return _this2.onKeyDownBullet(event, i);
								},
								onKeyUp: function onKeyUp(event) {
									return _this2.onKeyUpBullet(event, i);
								},
								placeholder: _this2.props.placeholder,
								value: bullet,
								analyzerData: _this2.props.analyzerData ? _this2.props.analyzerData.get(i) : null,
								font: _this2.props.font,
								onChange: function onChange(event) {
									return _this2.onChangeBullet(event, i);
								},
								readOnly: _this2.props.readOnly })
						)
					);
				}).toArray()
			);
		}
	});

	module.exports = Bullets;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = Icon;

	__webpack_require__(1342);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function Icon(props) {
		var className = props.analyzerData.isEmpty() ? '' : 'icon-with-analyzer-error';

		return _react2.default.createElement(
			'div',
			{
				className: className,
				onClick: props.onClick },
			_react2.default.createElement('i', { className: "fa resume-second-color fa-" + props.icon })
		);
	}

	Icon.defaultProps = {
		analyzerData: new _immutable2.default.List()
	};

	Icon.propTypes = {
		onClick: _react2.default.PropTypes.func,
		icon: _react2.default.PropTypes.string,
		analyzerData: _react2.default.PropTypes.instanceOf(_immutable2.default.List)
	};

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _highOrder = __webpack_require__(11);

	var _highOrder2 = _interopRequireDefault(_highOrder);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function ResumeColors(_ref) {
		var resumeId = _ref.resumeId,
		    firstColor = _ref.firstColor,
		    secondColor = _ref.secondColor;

		var style = '\n\t\t#resume-' + resumeId + ' .resume-first-color {\n\t\t\tcolor: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-first-color::-webkit-input-placeholder,\n\t\t#resume-' + resumeId + ' .resume-first-color input::-webkit-input-placeholder {\n\t\t\tcolor: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-first-color:-moz-placeholder,\n\t\t#resume-' + resumeId + ' .resume-first-color input:-moz-placeholder {\n\t\t\tcolor: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-first-color::-moz-placeholder,\n\t\t#resume-' + resumeId + ' .resume-first-color input::-moz-placeholder {\n\t\t\tcolor: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-first-color:-ms-input-placeholder,\n\t\t#resume-' + resumeId + ' .resume-first-color input:-ms-input-placeholder {\n\t\t\tcolor: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-first-background {\n\t\t\tbackground-color: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-before-first-background::before {\n\t\t\tbackground-color: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-first-border {\n\t\t\tborder-color: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-first-fill {\n\t\t\tfill: ' + firstColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-first-stroke {\n\t\t\tstroke: ' + firstColor + ' !important;\n\t\t}\n\n\t\t#resume-' + resumeId + ' .resume-second-color {\n\t\t\tcolor: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-second-color::-webkit-input-placeholder,\n\t\t#resume-' + resumeId + ' .resume-second-color input::-webkit-input-placeholder {\n\t\t\tcolor: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-second-color:-moz-placeholder,\n\t\t#resume-' + resumeId + ' .resume-second-color input:-moz-placeholder {\n\t\t\tcolor: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-second-color::-moz-placeholder,\n\t\t#resume-' + resumeId + ' .resume-second-color input::-moz-placeholder {\n\t\t\tcolor: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-second-color:-ms-input-placeholder,\n\t\t#resume-' + resumeId + ' .resume-second-color input:-ms-input-placeholder {\n\t\t\tcolor: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-second-background {\n\t\t\tbackground-color: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-before-second-background::before {\n\t\t\tbackground-color: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-second-border {\n\t\t\tborder-color: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-second-fill {\n\t\t\tstroke: ' + secondColor + ' !important;\n\t\t}\n\t\t#resume-' + resumeId + ' .resume-second-stroke {\n\t\t\tstroke: ' + secondColor + ' !important;\n\t\t}\n\t';

		return _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: style } });
	}

	ResumeColors.propTypes = {
		firstColor: _react2.default.PropTypes.string,
		secondColor: _react2.default.PropTypes.string
	};

	exports.default = (0, _highOrder2.default)(ResumeColors);

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _values2 = __webpack_require__(1570);

	var _values3 = _interopRequireDefault(_values2);

	var _first2 = __webpack_require__(439);

	var _first3 = _interopRequireDefault(_first2);

	var _getOr2 = __webpack_require__(53);

	var _getOr3 = _interopRequireDefault(_getOr2);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Resume = __webpack_require__(15);

	var _Resume2 = _interopRequireDefault(_Resume);

	var _highOrder = __webpack_require__(11);

	var _highOrder2 = _interopRequireDefault(_highOrder);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function ResumeFonts(_ref) {
		var resumeId = _ref.resumeId,
		    fontHeading = _ref.fontHeading,
		    fontBody = _ref.fontBody;

		var heading = (0, _getOr3.default)((0, _first3.default)(_Resume2.default.FONT.HEADING), fontHeading, _Resume2.default.FONT.HEADING);
		var body = (0, _getOr3.default)((0, _first3.default)(_Resume2.default.FONT.BODY), fontBody, _Resume2.default.FONT.BODY);

		var style = '\n\t\t#resume-' + resumeId + ' .resume-heading-font {\n\t\t\tfont-family: "' + heading.name + '", Arial, Helvetica, sans-serif !important;\n\t\t}\n\n\t\t#resume-' + resumeId + '.resume-body-font {\n\t\t\tfont-family: "' + body.name + '", Arial, Helvetica, sans-serif !important;\n\t\t}\n\t';

		if (heading.weight) {
			style += '\n\t\t\t#resume-' + resumeId + ' .resume-heading-font {\n\t\t\t\tfont-weight: ' + heading.weight + ' !important;\n\t\t\t}\n\t\t';
		}

		if (body.weight) {
			style += '\n\t\t\t#resume-' + resumeId + '.resume-body-font {\n\t\t\t\tfont-weight: ' + body.weight + ' !important;\n\t\t\t}\n\t\t';
		}

		return _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: style } });
	}

	ResumeFonts.propTypes = {
		resumeId: _react2.default.PropTypes.string,
		fontHeading: _react2.default.PropTypes.oneOf((0, _values3.default)(_Resume2.default.FONT.HEADING)),
		fontBody: _react2.default.PropTypes.oneOf((0, _values3.default)(_Resume2.default.FONT.BODY))
	};

	exports.default = (0, _highOrder2.default)(ResumeFonts);

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _ref, _ref2, _ref3;

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _CertificateItem = __webpack_require__(251);

	var _CertificateItem2 = _interopRequireDefault(_CertificateItem);

	var _BookItem = __webpack_require__(250);

	var _BookItem2 = _interopRequireDefault(_BookItem);

	var _QuoteItem = __webpack_require__(261);

	var _QuoteItem2 = _interopRequireDefault(_QuoteItem);

	var _PublicationItem = __webpack_require__(260);

	var _PublicationItem2 = _interopRequireDefault(_PublicationItem);

	var _EducationItem = __webpack_require__(254);

	var _EducationItem2 = _interopRequireDefault(_EducationItem);

	var _DateRange = __webpack_require__(92);

	var _DateRange2 = _interopRequireDefault(_DateRange);

	var _ExperienceItem = __webpack_require__(255);

	var _ExperienceItem2 = _interopRequireDefault(_ExperienceItem);

	var _VolunteerItem = __webpack_require__(268);

	var _VolunteerItem2 = _interopRequireDefault(_VolunteerItem);

	var _ActivityItem = __webpack_require__(248);

	var _ActivityItem2 = _interopRequireDefault(_ActivityItem);

	var _AchievementItem = __webpack_require__(246);

	var _AchievementItem2 = _interopRequireDefault(_AchievementItem);

	var _TalentItem = __webpack_require__(265);

	var _TalentItem2 = _interopRequireDefault(_TalentItem);

	var _AwardItem = __webpack_require__(249);

	var _AwardItem2 = _interopRequireDefault(_AwardItem);

	var _LanguageItem = __webpack_require__(257);

	var _LanguageItem2 = _interopRequireDefault(_LanguageItem);

	var _SummaryItem = __webpack_require__(264);

	var _SummaryItem2 = _interopRequireDefault(_SummaryItem);

	var _SkillItem = __webpack_require__(263);

	var _SkillItem2 = _interopRequireDefault(_SkillItem);

	var _PassionItem = __webpack_require__(259);

	var _PassionItem2 = _interopRequireDefault(_PassionItem);

	var _CourseItem = __webpack_require__(252);

	var _CourseItem2 = _interopRequireDefault(_CourseItem);

	var _TechnologyItem = __webpack_require__(267);

	var _TechnologyItem2 = _interopRequireDefault(_TechnologyItem);

	var _DayofmylifeItem = __webpack_require__(253);

	var _DayofmylifeItem2 = _interopRequireDefault(_DayofmylifeItem);

	var _DayofmylifeSlice = __webpack_require__(358);

	var _DayofmylifeSlice2 = _interopRequireDefault(_DayofmylifeSlice);

	var _ReferenceItem = __webpack_require__(262);

	var _ReferenceItem2 = _interopRequireDefault(_ReferenceItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /* eslint-disable max-len */


	var Examples = {
		PublicationSection: eval(Publications_examples_arr),

		QuoteSection: eval(Quotes_examples_arr),

		BookSection: eval(Books_examples_arr),

		CertificateSection: eval(Certificates_examples_arr),

		EducationSection: eval(Education_examples_arr),

		ExperienceSection: eval(Experience_examples_arr),

		VolunteerSection: eval(Volunteer_examples_arr),

		ActivitySection: eval(Activity_examples_arr),

		AchievementSection: eval(Achievement_examples_arr),

		TalentSection: eval(Talent_examples_arr),

		AwardSection: eval(Award_examples_arr),

		ReferenceSection: eval(Reference_examples_arr),

		LanguageSection: eval(Language_examples_arr),

		SummarySection: eval(Summary_examples_arr),

		DayofmylifeSection: eval(Dayofmylife_examples_arr),

		TechnologySection: eval(Technology_examples_arr),

		SkillSection: eval(Skill_examples_arr),

		PassionSection: eval(Passion_examples_arr),

		CourseSection: eval(Course_examples_arr)
	};

	module.exports = Examples;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _pick2 = __webpack_require__(310);

	var _pick3 = _interopRequireDefault(_pick2);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _PaymentActions = __webpack_require__(91);

	var _PaymentActions2 = _interopRequireDefault(_PaymentActions);

	var _NotificationActions = __webpack_require__(22);

	var _NotificationActions2 = _interopRequireDefault(_NotificationActions);

	var _AnalyticsActions = __webpack_require__(14);

	var _AnalyticsActions2 = _interopRequireDefault(_AnalyticsActions);

	var _Payment = __webpack_require__(357);

	var _Payment2 = _interopRequireDefault(_Payment);

	var _InviterDiscount = __webpack_require__(549);

	var _InviterDiscount2 = _interopRequireDefault(_InviterDiscount);

	var _AuthStore = __webpack_require__(8);

	var _AuthStore2 = _interopRequireDefault(_AuthStore);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var PaymentStore = _reflux2.default.createStore({
		init: function init() {
			this.listenTo(_AuthStore2.default, this.onUserChange);
			this.listenToMany(_PaymentActions2.default);
			this.state = new _Payment2.default();
		},

		getInitialState: function getInitialState() {
			return this.state;
		},

		onUserChange: function onUserChange(newUser) {
			if (newUser) {
				this.state = this.state.mergeIn(['inviterDiscount'], newUser.inviterDiscount);
			}

			this.setDiscount();
			this.trigger(this.state);
		},

		setDiscount: function setDiscount() {
			if (this.state.inviterDiscount.discount > 0) {
				this.state = this.state.set('discount', this.state.inviterDiscount.discount);
			} else if (this.state.promocode.discount > 0) {
				this.state = this.state.set('discount', this.state.promocode.discount);
			}
		},

		onPromocodeAddFailed: function onPromocodeAddFailed(response) {
			_NotificationActions2.default.error(response.data.message);
		},

		onPromocodeAddCompleted: function onPromocodeAddCompleted(response) {
			this.state = this.state.mergeIn(['promocode'], (0, _pick3.default)(['discount', 'name', 'duration'], response.data));
			this.setDiscount();
			this.trigger(this.state);
			_NotificationActions2.default.success(lbl_promocode_added);
		}
	});

	exports.default = PaymentStore;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var AchievementItem = function (_Immutable$Record) {
		_inherits(AchievementItem, _Immutable$Record);

		function AchievementItem() {
			_classCallCheck(this, AchievementItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return AchievementItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'AchievementItem',
		icon: 'trophy',
		title: '',
		description: '',
		showDescription: true,
		height: 75
	}));

	exports.default = AchievementItem;


	AchievementItem.TITLE = 'What are you most proud of?';
	AchievementItem.DESCRIPTION = 'A bit about your achievement';
	AchievementItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description), new _ToggleOption2.default('showIcons', lbl_Show_Icons, { isGlobal: true })];
	AchievementItem.POPOVERS = [_ResumeConfig2.default.POPOVER.ICON_PICKER, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _AchievementItem = __webpack_require__(246);

	var _AchievementItem2 = _interopRequireDefault(_AchievementItem);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var AchievementSection = function (_Immutable$Record) {
		_inherits(AchievementSection, _Immutable$Record);

		function AchievementSection() {
			_classCallCheck(this, AchievementSection);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return AchievementSection;
	}(_immutable2.default.Record({
		record: 'AchievementSection',
		enabled: true,
		showIcons: true,
		name: '',
		column: 0,
		height: _ResumeConfig2.default.SECTION_HEIGHT,
		items: new _immutable2.default.List([new _AchievementItem2.default({ id: 0 }), new _AchievementItem2.default({ id: 1 })])
	}));

	exports.default = AchievementSection;


	AchievementSection.ICON = 'star';
	AchievementSection.ITEM_SIZE = _ResumeConfig2.default.ITEM_SIZE.MD;
	AchievementSection.NAME = 'ACHIVEMENTS';
	// eslint-disable-next-line max-len
	AchievementSection.USE = lbl_In_this_section_you;
	AchievementSection.ITEM = _AchievementItem2.default;

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _DateRange = __webpack_require__(92);

	var _DateRange2 = _interopRequireDefault(_DateRange);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ActivityItem = function (_Immutable$Record) {
		_inherits(ActivityItem, _Immutable$Record);

		function ActivityItem() {
			_classCallCheck(this, ActivityItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return ActivityItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'ActivityItem',
		title: '',
		location: '',
		dateRange: new _DateRange2.default(),
		link: '',
		bullets: _ResumeConfig2.default.DEFAULT_BULLETS,
		description: '',
		height: 163,
		showDescription: true,
		showBullets: true,
		showLocation: true,
		showDateRange: true,
		showLink: false
	}));

	exports.default = ActivityItem;


	ActivityItem.TITLE = 'Project / Activity name';
	ActivityItem.DESCRIPTION = 'Short summary of your work';
	ActivityItem.LOCATION = 'Location';
	ActivityItem.LINK = 'URL';
	ActivityItem.BULLETS = 'What was an example of a successful outcome of this activity? (e.g. Made 30+ partnerships)';
	ActivityItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description), new _ToggleOption2.default('showBullets', lbl_Show_Bullets), new _ToggleOption2.default('showLocation', lbl_Show_Location), new _ToggleOption2.default('showDateRange', Show_Period), new _ToggleOption2.default('showLink', lbl_Show_Link)];
	ActivityItem.POPOVERS = [_ResumeConfig2.default.POPOVER.DATE_RANGE, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var AwardItem = function (_Immutable$Record) {
		_inherits(AwardItem, _Immutable$Record);

		function AwardItem() {
			_classCallCheck(this, AwardItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return AwardItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'AwardItem',
		icon: 'star',
		title: '',
		description: '',
		showDescription: false,
		height: 65
	}));

	exports.default = AwardItem;


	AwardItem.TITLE = 'Award Name';
	AwardItem.DESCRIPTION = 'Award Description';
	AwardItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description), new _ToggleOption2.default('showIcons', lbl_Show_Icons, { isGlobal: true })];
	AwardItem.POPOVERS = [_ResumeConfig2.default.POPOVER.ICON_PICKER, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BookItem = function (_Immutable$Record) {
		_inherits(BookItem, _Immutable$Record);

		function BookItem() {
			_classCallCheck(this, BookItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return BookItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'BookItem',
		image: '',
		author: '',
		title: '',
		showAuthor: true,
		height: 264
	}));

	exports.default = BookItem;


	BookItem.TITLE = 'Book Name';
	BookItem.AUTHOR = 'Author(s)';
	BookItem.DEFAULT_POPOVER = _ResumeConfig2.default.POPOVER.BOOKS;
	BookItem.OPTIONS = [new _ToggleOption2.default('showAuthor', lbl_Show_author)];
	BookItem.POPOVERS = [_ResumeConfig2.default.POPOVER.BOOKS, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CertificateItem = function (_Immutable$Record) {
		_inherits(CertificateItem, _Immutable$Record);

		function CertificateItem() {
			_classCallCheck(this, CertificateItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return CertificateItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'CertificateItem',
		title: '',
		issuer: '',
		height: 75,
		showIssuer: true
	}));

	exports.default = CertificateItem;


	CertificateItem.TITLE = 'Certificate Name';
	CertificateItem.ISSUER = 'Certification Institution';
	CertificateItem.OPTIONS = [new _ToggleOption2.default('showIssuer', lbl_Show_Institution)];
	CertificateItem.POPOVERS = [_ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CourseItem = function (_Immutable$Record) {
		_inherits(CourseItem, _Immutable$Record);

		function CourseItem() {
			_classCallCheck(this, CourseItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return CourseItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'CourseItem',
		title: '',
		duration: '',
		description: '',
		height: 53,
		showDescription: false,
		showDuration: false
	}));

	exports.default = CourseItem;


	CourseItem.TITLE = 'Course title';
	CourseItem.DESCRIPTION = 'Course description';
	CourseItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description)];
	CourseItem.POPOVERS = [_ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _SelectOption = __webpack_require__(194);

	var _SelectOption2 = _interopRequireDefault(_SelectOption);

	var _DayofmylifeSlice = __webpack_require__(358);

	var _DayofmylifeSlice2 = _interopRequireDefault(_DayofmylifeSlice);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DayofmylifeItem = function (_Immutable$Record) {
		_inherits(DayofmylifeItem, _Immutable$Record);

		function DayofmylifeItem() {
			_classCallCheck(this, DayofmylifeItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		DayofmylifeItem.prototype.set = function set(name, value) {
			switch (name) {
				case 'pieces':
					return _Immutable$Record.prototype.set.call(this, name, value).setItemsCountFromPieces();
				default:
					return _Immutable$Record.prototype.set.call(this, name, value);
			}
		};

		DayofmylifeItem.prototype.setItemsCountFromPieces = function setItemsCountFromPieces() {
			var delta = this.pieces - this.data.count();

			if (delta > 0) {
				return this.update('data', function (data) {
					for (var i = 0; i < delta; i++) {
						data = data.push(new _DayofmylifeSlice2.default());
					}
					return data;
				});
			} else {
				return _Immutable$Record.prototype.set.call(this, 'data', this.data.slice(0, this.pieces));
			}
		};

		return DayofmylifeItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'DayofmylifeItem',
		height: 237,
		pieces: 6,
		data: new _immutable2.default.List([new _DayofmylifeSlice2.default(), new _DayofmylifeSlice2.default(), new _DayofmylifeSlice2.default(), new _DayofmylifeSlice2.default(), new _DayofmylifeSlice2.default(), new _DayofmylifeSlice2.default(), new _DayofmylifeSlice2.default()])
	}));

	exports.default = DayofmylifeItem;


	DayofmylifeItem.TITLE = 'Activity / Inititative';
	DayofmylifeItem.OPTIONS = [new _SelectOption2.default('pieces', lbl_number_of_slice, [4, 6, 8])];
	DayofmylifeItem.POPOVERS = [_ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _DateRange = __webpack_require__(92);

	var _DateRange2 = _interopRequireDefault(_DateRange);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var EducationItem = function (_Immutable$Record) {
		_inherits(EducationItem, _Immutable$Record);

		function EducationItem() {
			_classCallCheck(this, EducationItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return EducationItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'EducationItem',
		degree: '',
		institution: '',
		location: '',
		gpa: '',
		maxGpa: '',
		dateRange: new _DateRange2.default(),
		height: 100,
		bullets: _ResumeConfig2.default.DEFAULT_BULLETS,
		showGpa: true,
		showLocation: false,
		showDateRange: true,
		showBullets: false
	}));

	exports.default = EducationItem;


	EducationItem.DEGREE = 'Degree and Field of Study';
	EducationItem.LOCATION = 'Location';
	EducationItem.INSTITUTION = 'School or University';
	EducationItem.BULLETS = 'What was an example of a successful outcome of this activity? (e.g. Made 30+ acquaintances)';
	EducationItem.GPA = '6.00';
	EducationItem.MAX_GPA = '6.00';
	EducationItem.OPTIONS = [new _ToggleOption2.default('showGpa', lbl_Show_GPA), new _ToggleOption2.default('showLocation', lbl_Show_Location), new _ToggleOption2.default('showDateRange', Show_Period), new _ToggleOption2.default('showBullets', lbl_Show_Bullets)];
	EducationItem.POPOVERS = [_ResumeConfig2.default.POPOVER.DATE_RANGE, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _DateRange = __webpack_require__(92);

	var _DateRange2 = _interopRequireDefault(_DateRange);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ExperienceItem = function (_Immutable$Record) {
		_inherits(ExperienceItem, _Immutable$Record);

		function ExperienceItem() {
			_classCallCheck(this, ExperienceItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return ExperienceItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'ExperienceItem',
		position: '',
		workplace: '',
		description: '',
		location: '',
		dateRange: new _DateRange2.default(),
		link: '',
		bullets: _ResumeConfig2.default.DEFAULT_BULLETS,
		height: 168,
		showDescription: true,
		showBullets: true,
		showLocation: true,
		showDateRange: true,
		showLink: false
	}));

	exports.default = ExperienceItem;


	ExperienceItem.POSITION = 'Title / Position';
	ExperienceItem.DESCRIPTION = 'Company Description';
	ExperienceItem.LOCATION = 'Location';
	ExperienceItem.WORKPLACE = 'Company';
	ExperienceItem.LINK = 'URL';
	ExperienceItem.BULLETS = 'What was an example of a successful outcome of this activity? (e.g. Made 30+ partnerships)';
	ExperienceItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description), new _ToggleOption2.default('showBullets', lbl_Show_Bullets), new _ToggleOption2.default('showLocation', lbl_Show_Location), new _ToggleOption2.default('showDateRange', Show_Period), new _ToggleOption2.default('showLink', lbl_Show_Link)];
	ExperienceItem.POPOVERS = [_ResumeConfig2.default.POPOVER.DATE_RANGE, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _SelectOption = __webpack_require__(194);

	var _SelectOption2 = _interopRequireDefault(_SelectOption);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Header = function (_Immutable$Record) {
		_inherits(Header, _Immutable$Record);

		function Header() {
			_classCallCheck(this, Header);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return Header;
	}(_immutable2.default.Record({
		record: 'Header',
		name: '',
		title: '',
		email: '',
		location: '',
		nationality: '',
		age: '',
		gender: '',
		phone: '',
		link: '',
		height: 182,
		showTitle: true,
		showPhone: true,
		showLink: true,
		showEmail: true,
		showLocation: true,
		showNationality: true,
		showAge: true,
		showGender: true,
		uppercaseName: true,
		showPhoto: true,
		photoStyle: 'round',
		photo: ''
	}));

	exports.default = Header;


	Header.OPTIONS = [new _ToggleOption2.default('showTitle', lbl_Show_Title), new _ToggleOption2.default('showPhone', lbl_Show_Phone), new _ToggleOption2.default('showLink', lbl_Show_Link)/*, new _ToggleOption2.default('showEmail', lbl_Show_Email)*/, new _ToggleOption2.default('showLocation', lbl_Show_Location), new _ToggleOption2.default('showNationality', lbl_Show_Nationality), new _ToggleOption2.default('showAge', lbl_Show_Age), new _ToggleOption2.default('showGender', lbl_Show_Gender), new _ToggleOption2.default('uppercaseName', lbl_Uppercase_name), new _ToggleOption2.default('showPhoto', lbl_Show_Photo), new _SelectOption2.default('photoStyle', lbl_Photo_Style, ['round', 'rect'])];

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _SelectOption = __webpack_require__(194);

	var _SelectOption2 = _interopRequireDefault(_SelectOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var LanguageItem = function (_Immutable$Record) {
		_inherits(LanguageItem, _Immutable$Record);

		function LanguageItem() {
			_classCallCheck(this, LanguageItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return LanguageItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'LanguageItem',
		name: '',
		level: 1,
		height: 75
	}));

	exports.default = LanguageItem;


	LanguageItem.LEVEL_MAX = 5;
	LanguageItem.NAME = 'Language';
	LanguageItem.LEVELS = {
		1: 'Beginner',
		2: 'Intermediate',
		3: 'Advanced',
		4: 'Proficient',
		5: 'Native'
	};
	LanguageItem.OPTIONS = [new _ToggleOption2.default('showProficiency', lbl_Show_Proficiency, { isGlobal: true }), new _ToggleOption2.default('showSlider', lbl_Show_Slider, { isGlobal: true }), new _SelectOption2.default('indicatorType', lbl_slider_style, ['dots', 'slider', 'lines', 'thin', 'hazard'], { isGlobal: true })];
	LanguageItem.POPOVERS = [_ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var LayoutItem = function (_Immutable$Record) {
		_inherits(LayoutItem, _Immutable$Record);

		function LayoutItem() {
			_classCallCheck(this, LayoutItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return LayoutItem;
	}(_immutable2.default.Record({
		record: 'LayoutItem',
		sectionIndex: null,
		page: 0,
		column: 0,
		height: 0,
		itemIndexes: new _immutable2.default.List()
	}));

	exports.default = LayoutItem;

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PassionItem = function (_Immutable$Record) {
		_inherits(PassionItem, _Immutable$Record);

		function PassionItem() {
			_classCallCheck(this, PassionItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return PassionItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'PassionItem',
		icon: 'heart',
		title: '',
		height: 72,
		description: '',
		showDescription: false
	}));

	exports.default = PassionItem;


	PassionItem.TITLE = 'Your Passion';
	PassionItem.DESCRIPTION = 'Description';
	PassionItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description), new _ToggleOption2.default('showIcons', lbl_Show_Icons, { isGlobal: true })];
	PassionItem.POPOVERS = [_ResumeConfig2.default.POPOVER.ICON_PICKER, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _DateRange = __webpack_require__(92);

	var _DateRange2 = _interopRequireDefault(_DateRange);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PublicationItem = function (_Immutable$Record) {
		_inherits(PublicationItem, _Immutable$Record);

		function PublicationItem() {
			_classCallCheck(this, PublicationItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return PublicationItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'PublicationItem',
		title: '',
		edition: '',
		author: '',
		link: '',
		description: '',
		dateRange: new _DateRange2.default(),
		height: 146,
		showDescription: true,
		showAuthor: true,
		showLink: true
	}));

	exports.default = PublicationItem;


	PublicationItem.TITLE = 'Article / Document Name';
	PublicationItem.AUTHOR = 'Authors / Co-authors';
	PublicationItem.LINK = 'URL';
	PublicationItem.EDITION = 'Publishing Press / Journal';
	PublicationItem.DESCRIPTION = 'Publication Description';
	PublicationItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description), new _ToggleOption2.default('showAuthor', lbl_Show_authors), new _ToggleOption2.default('showLink', lbl_Show_Link)];
	PublicationItem.POPOVERS = [_ResumeConfig2.default.POPOVER.DATE, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var QuoteItem = function (_Immutable$Record) {
		_inherits(QuoteItem, _Immutable$Record);

		function QuoteItem() {
			_classCallCheck(this, QuoteItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return QuoteItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'QuoteItem',
		author: '',
		quote: '',
		height: 81,
		showAuthor: true
	}));

	exports.default = QuoteItem;


	QuoteItem.AUTHOR = 'Author';
	QuoteItem.QUOTE = 'Quote';
	QuoteItem.OPTIONS = [new _ToggleOption2.default('showAuthor', lbl_Show_author)];
	QuoteItem.POPOVERS = [_ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ReferenceItem = function (_Immutable$Record) {
		_inherits(ReferenceItem, _Immutable$Record);

		function ReferenceItem() {
			_classCallCheck(this, ReferenceItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return ReferenceItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'ReferenceItem',
		name: '',
		contact: '',
		height: 75,
		showContact: true
	}));

	exports.default = ReferenceItem;


	ReferenceItem.NAME = 'Reference Name';
	ReferenceItem.CONTACT = 'Reference Contact';
	ReferenceItem.OPTIONS = [new _ToggleOption2.default('showContact', 'Show Contact')];
	ReferenceItem.POPOVERS = [_ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _SelectOption = __webpack_require__(194);

	var _SelectOption2 = _interopRequireDefault(_SelectOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SkillItem = function (_Immutable$Record) {
		_inherits(SkillItem, _Immutable$Record);

		function SkillItem() {
			_classCallCheck(this, SkillItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return SkillItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'SkillItem',
		icon: 'star',
		level: 1,
		name: '',
		height: 69
	}));

	exports.default = SkillItem;


	SkillItem.LEVEL_MAX = 10;
	SkillItem.NAME = 'Skill';
	SkillItem.OPTIONS = [new _SelectOption2.default('indicatorType', lbl_slider_style, ['lolly', 'dashed', 'burger', 'hazard'], { isGlobal: true })];
	SkillItem.POPOVERS = [_ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SummaryItem = function (_Immutable$Record) {
		_inherits(SummaryItem, _Immutable$Record);

		function SummaryItem() {
			_classCallCheck(this, SummaryItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return SummaryItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'SummaryItem',
		text: '',
		height: 73
	}));

	exports.default = SummaryItem;


	SummaryItem.TEXT = 'When I was 21, I climbed Mount Everest. Not metaphorically, I literally climbed the highest mountain on Earth. Now, I put that perseverance to work as a senior account manager for Scrabio. I don`t have to climb any mountainsâ€¦ but I do have to move them.';
	SummaryItem.MAX_LENGTH = 3700;
	// eslint-disable-next-line max-len
	SummaryItem.HELP_TEXT = lbl_if_thisis_your_true;
	SummaryItem.POPOVERS = [];

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TalentItem = function (_Immutable$Record) {
		_inherits(TalentItem, _Immutable$Record);

		function TalentItem() {
			_classCallCheck(this, TalentItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return TalentItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'TalentItem',
		title: '',
		icon: 'star',
		description: '',
		height: 77,
		showDescription: true
	}));

	exports.default = TalentItem;


	TalentItem.TITLE = 'Your Unique Talent';
	TalentItem.DESCRIPTION = 'How did you acquire it? What did it result in?';
	TalentItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description), new _ToggleOption2.default('showIcons', lbl_Show_Icons, { isGlobal: true })];
	TalentItem.POPOVERS = [_ResumeConfig2.default.POPOVER.ICON_PICKER, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _TalentItem = __webpack_require__(265);

	var _TalentItem2 = _interopRequireDefault(_TalentItem);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TalentSection = function (_Immutable$Record) {
		_inherits(TalentSection, _Immutable$Record);

		function TalentSection() {
			_classCallCheck(this, TalentSection);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return TalentSection;
	}(_immutable2.default.Record({
		record: 'TalentSection',
		enabled: true,
		showIcons: true,
		name: '',
		column: 0,
		height: _ResumeConfig2.default.SECTION_HEIGHT,
		items: new _immutable2.default.List([new _TalentItem2.default({ id: 0 }), new _TalentItem2.default({ id: 1 })])
	}));

	exports.default = TalentSection;

	TalentSection.ICON = 'lightbulb-o';
	TalentSection.ITEM_SIZE = _ResumeConfig2.default.ITEM_SIZE.MD;
	TalentSection.NAME = 'STRENGTHS';
	// eslint-disable-next-line max-len
	TalentSection.USE = lbl_talents_section_text;
	TalentSection.ITEM = _TalentItem2.default;

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TechnologyItem = function (_Immutable$Record) {
		_inherits(TechnologyItem, _Immutable$Record);

		function TechnologyItem() {
			_classCallCheck(this, TechnologyItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return TechnologyItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'TechnologyItem',
		title: '',
		description: '',
		height: 88,
		showTitle: true,
		tags: new _immutable2.default.List([''])
	}));

	exports.default = TechnologyItem;


	TechnologyItem.TITLE = 'Group Title';
	TechnologyItem.TAGS = 'Tech';
	TechnologyItem.OPTIONS = [new _ToggleOption2.default('showTitle', lbl_show_groupname)];
	TechnologyItem.POPOVERS = [_ResumeConfig2.default.POPOVER.OPTIONS];
	TechnologyItem.POPOVERS_BEFORE = [_ResumeConfig2.default.POPOVER.TECH_ADD, _ResumeConfig2.default.POPOVER.TECH_REMOVE];

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _DateRange = __webpack_require__(92);

	var _DateRange2 = _interopRequireDefault(_DateRange);

	var _ToggleOption = __webpack_require__(36);

	var _ToggleOption2 = _interopRequireDefault(_ToggleOption);

	var _ResumeConfig = __webpack_require__(9);

	var _ResumeConfig2 = _interopRequireDefault(_ResumeConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var VolunteerItem = function (_Immutable$Record) {
		_inherits(VolunteerItem, _Immutable$Record);

		function VolunteerItem() {
			_classCallCheck(this, VolunteerItem);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return VolunteerItem;
	}(_immutable2.default.Record({
		id: 0,
		record: 'VolunteerItem',
		role: '',
		institution: '',
		location: '',
		dateRange: new _DateRange2.default(),
		bullets: _ResumeConfig2.default.DEFAULT_BULLETS,
		description: '',
		height: 116,
		showDescription: true,
		showLocation: false,
		showBullets: false,
		showDate: true
	}));

	exports.default = VolunteerItem;


	VolunteerItem.ROLE = 'Title / Role';
	VolunteerItem.DESCRIPTION = 'Description';
	VolunteerItem.INSTITUTION = 'Organization Name';
	VolunteerItem.LOCATION = 'Location';
	VolunteerItem.BULLETS = 'What was an example of a successful outcome of this activity? (e.g. Made 30+ acquaintances)';
	VolunteerItem.OPTIONS = [new _ToggleOption2.default('showDescription', lbl_Show_Description), new _ToggleOption2.default('showLocation', lbl_Show_Location), new _ToggleOption2.default('showBullets', lbl_Show_Bullets), new _ToggleOption2.default('showDate', Show_Period)];
	VolunteerItem.POPOVERS = [_ResumeConfig2.default.POPOVER.DATE_RANGE, _ResumeConfig2.default.POPOVER.OPTIONS];

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _AchievementSection = __webpack_require__(247);

	Object.defineProperty(exports, 'AchievementSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AchievementSection).default;
	  }
	});

	var _AchievementItem = __webpack_require__(246);

	Object.defineProperty(exports, 'AchievementItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AchievementItem).default;
	  }
	});

	var _ActivitySection = __webpack_require__(551);

	Object.defineProperty(exports, 'ActivitySection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ActivitySection).default;
	  }
	});

	var _ActivityItem = __webpack_require__(248);

	Object.defineProperty(exports, 'ActivityItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ActivityItem).default;
	  }
	});

	var _AwardSection = __webpack_require__(552);

	Object.defineProperty(exports, 'AwardSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AwardSection).default;
	  }
	});

	var _AwardItem = __webpack_require__(249);

	Object.defineProperty(exports, 'AwardItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AwardItem).default;
	  }
	});

	var _BookSection = __webpack_require__(553);

	Object.defineProperty(exports, 'BookSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_BookSection).default;
	  }
	});

	var _BookItem = __webpack_require__(250);

	Object.defineProperty(exports, 'BookItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_BookItem).default;
	  }
	});

	var _CertificateSection = __webpack_require__(554);

	Object.defineProperty(exports, 'CertificateSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CertificateSection).default;
	  }
	});

	var _CertificateItem = __webpack_require__(251);

	Object.defineProperty(exports, 'CertificateItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CertificateItem).default;
	  }
	});

	var _CourseSection = __webpack_require__(555);

	Object.defineProperty(exports, 'CourseSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CourseSection).default;
	  }
	});

	var _CourseItem = __webpack_require__(252);

	Object.defineProperty(exports, 'CourseItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CourseItem).default;
	  }
	});

	var _Dashboard = __webpack_require__(113);

	Object.defineProperty(exports, 'Dashboard', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Dashboard).default;
	  }
	});

	var _DayofmylifeSection = __webpack_require__(556);

	Object.defineProperty(exports, 'DayofmylifeSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DayofmylifeSection).default;
	  }
	});

	var _DayofmylifeItem = __webpack_require__(253);

	Object.defineProperty(exports, 'DayofmylifeItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DayofmylifeItem).default;
	  }
	});

	var _DayofmylifeSlice = __webpack_require__(358);

	Object.defineProperty(exports, 'DayofmylifeSlice', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DayofmylifeSlice).default;
	  }
	});

	var _DateRange = __webpack_require__(92);

	Object.defineProperty(exports, 'DateRange', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DateRange).default;
	  }
	});

	var _EducationSection = __webpack_require__(557);

	Object.defineProperty(exports, 'EducationSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_EducationSection).default;
	  }
	});

	var _EducationItem = __webpack_require__(254);

	Object.defineProperty(exports, 'EducationItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_EducationItem).default;
	  }
	});

	var _ExperienceSection = __webpack_require__(558);

	Object.defineProperty(exports, 'ExperienceSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ExperienceSection).default;
	  }
	});

	var _ExperienceItem = __webpack_require__(255);

	Object.defineProperty(exports, 'ExperienceItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ExperienceItem).default;
	  }
	});

	var _History = __webpack_require__(559);

	Object.defineProperty(exports, 'History', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_History).default;
	  }
	});

	var _LanguageSection = __webpack_require__(560);

	Object.defineProperty(exports, 'LanguageSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LanguageSection).default;
	  }
	});

	var _LanguageItem = __webpack_require__(257);

	Object.defineProperty(exports, 'LanguageItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LanguageItem).default;
	  }
	});

	var _PassionSection = __webpack_require__(561);

	Object.defineProperty(exports, 'PassionSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PassionSection).default;
	  }
	});

	var _PassionItem = __webpack_require__(259);

	Object.defineProperty(exports, 'PassionItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PassionItem).default;
	  }
	});

	var _PublicationSection = __webpack_require__(562);

	Object.defineProperty(exports, 'PublicationSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PublicationSection).default;
	  }
	});

	var _PublicationItem = __webpack_require__(260);

	Object.defineProperty(exports, 'PublicationItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PublicationItem).default;
	  }
	});

	var _QuoteSection = __webpack_require__(563);

	Object.defineProperty(exports, 'QuoteSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_QuoteSection).default;
	  }
	});

	var _QuoteItem = __webpack_require__(261);

	Object.defineProperty(exports, 'QuoteItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_QuoteItem).default;
	  }
	});

	var _ReferenceItem = __webpack_require__(262);

	Object.defineProperty(exports, 'ReferenceItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ReferenceItem).default;
	  }
	});

	var _ReferenceSection = __webpack_require__(564);

	Object.defineProperty(exports, 'ReferenceSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ReferenceSection).default;
	  }
	});

	var _Resume = __webpack_require__(15);

	Object.defineProperty(exports, 'Resume', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Resume).default;
	  }
	});

	var _ResumeConfig = __webpack_require__(9);

	Object.defineProperty(exports, 'ResumeConfig', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ResumeConfig).default;
	  }
	});

	var _ResumeStyle = __webpack_require__(20);

	Object.defineProperty(exports, 'ResumeStyle', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ResumeStyle).default;
	  }
	});

	var _Header = __webpack_require__(256);

	Object.defineProperty(exports, 'Header', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Header).default;
	  }
	});

	var _LayoutItem = __webpack_require__(258);

	Object.defineProperty(exports, 'LayoutItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LayoutItem).default;
	  }
	});

	var _SkillSection = __webpack_require__(565);

	Object.defineProperty(exports, 'SkillSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SkillSection).default;
	  }
	});

	var _SkillItem = __webpack_require__(263);

	Object.defineProperty(exports, 'SkillItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SkillItem).default;
	  }
	});

	var _SummarySection = __webpack_require__(566);

	Object.defineProperty(exports, 'SummarySection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SummarySection).default;
	  }
	});

	var _SummaryItem = __webpack_require__(264);

	Object.defineProperty(exports, 'SummaryItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SummaryItem).default;
	  }
	});

	var _TalentSection = __webpack_require__(266);

	Object.defineProperty(exports, 'TalentSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TalentSection).default;
	  }
	});

	var _TalentItem = __webpack_require__(265);

	Object.defineProperty(exports, 'TalentItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TalentItem).default;
	  }
	});

	var _TechnologySection = __webpack_require__(567);

	Object.defineProperty(exports, 'TechnologySection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TechnologySection).default;
	  }
	});

	var _TechnologyItem = __webpack_require__(267);

	Object.defineProperty(exports, 'TechnologyItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TechnologyItem).default;
	  }
	});

	var _VolunteerSection = __webpack_require__(568);

	Object.defineProperty(exports, 'VolunteerSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_VolunteerSection).default;
	  }
	});

	var _VolunteerItem = __webpack_require__(268);

	Object.defineProperty(exports, 'VolunteerItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_VolunteerItem).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _University = __webpack_require__(570);

	var _University2 = _interopRequireDefault(_University);

	var _Invite = __webpack_require__(569);

	var _Invite2 = _interopRequireDefault(_Invite);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Student = function (_Immutable$Record) {
		_inherits(Student, _Immutable$Record);

		function Student() {
			_classCallCheck(this, Student);

			return _possibleConstructorReturn(this, _Immutable$Record.apply(this, arguments));
		}

		return Student;
	}(_immutable2.default.Record({
		university: new _University2.default(),
		invite: new _Invite2.default(),

		isEmailVerified: false,
		isUniversityAvailable: true,
		isVerifySent: false,
		isVerifySending: false,
		verifyError: null
	}));

	exports.default = Student;

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _map2 = __webpack_require__(46);

	var _map3 = _interopRequireDefault(_map2);

	var _get2 = __webpack_require__(40);

	var _get3 = _interopRequireDefault(_get2);

	var _reflux = __webpack_require__(4);

	var _reflux2 = _interopRequireDefault(_reflux);

	var _immutable = __webpack_require__(2);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _StudentActions = __webpack_require__(110);

	var _StudentActions2 = _interopRequireDefault(_StudentActions);

	var _ViewStateActions = __webpack_require__(5);

	var _ViewStateActions2 = _interopRequireDefault(_ViewStateActions);

	var _NotificationActions = __webpack_require__(22);

	var _NotificationActions2 = _interopRequireDefault(_NotificationActions);

	var _AuthStore = __webpack_require__(8);

	var _AuthStore2 = _interopRequireDefault(_AuthStore);

	var _Student = __webpack_require__(270);

	var _Student2 = _interopRequireDefault(_Student);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var StudentStore = _reflux2.default.createStore({
		init: function init() {
			this.listenTo(_AuthStore2.default, this.onUserChange);
			this.listenToMany(_StudentActions2.default);
			this.state = new _Student2.default();
		},

		getInitialState: function getInitialState() {
			return this.state;
		},

		onUserChange: function onUserChange(newUser) {
			this.state = this.state.set('isEmailVerified', Boolean((0, _get3.default)('studentEmail', newUser)));
			this.trigger(this.state);
		},

		onInvite: function onInvite() {
			this.state = this.state.setIn(['invite', 'loading'], true).deleteIn(['invite', 'error']);

			this.trigger(this.state);
		},

		onInviteCompleted: function onInviteCompleted(response) {
			this.state = this.state.update('invite', function (invite) {
				response.data.forEach(function (item) {
					invite = invite.setIn(['status', item.email], item.status);
				});
				return invite.set('loading', false);
			});

			this.trigger(this.state);
		},

		onInviteFailed: function onInviteFailed(response) {
			this.state = this.state.setIn(['invite', 'loading'], false).setIn(['invite', 'error'], response.data);

			this.trigger(this.state);
		},

		onLoadUniversityCompleted: function onLoadUniversityCompleted(response) {
			this.state = this.state.mergeIn(['university'], response.data).setIn(['university', 'loaded'], true);

			this.trigger(this.state);
		},

		onRequestAccessCompleted: function onRequestAccessCompleted(response) {
			_NotificationActions2.default.success(response.data.message);
		},

		onVerifyEmail: function onVerifyEmail(response) {
			this.state = this.state.set('isVerifySending', true);
			this.trigger(this.state);
		},

		onVerifyEmailCompleted: function onVerifyEmailCompleted(response) {
			this.state = this.state.set('isVerifySent', true).set('isVerifySending', false).set('isUniversityAvailable', true).delete('verifyError');

			this.trigger(this.state);
		},

		onVerifyEmailFailed: function onVerifyEmailFailed(response) {
			if ((0, _get3.default)('xhr.status', response) === 406) {
				this.state = this.state.set('isUniversityAvailable', false);
			} else {
				this.state = this.state.set('verifyError', response.data.message);
			}
			this.state = this.state.set('isVerifySending', false);

			this.trigger(this.state);
		}
	});

	exports.default = StudentStore;

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(64)
	  , toLength  = __webpack_require__(39)
	  , toIndex   = __webpack_require__(144);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 273 */
